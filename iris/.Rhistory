#   - Values
#        - Array of scaled configuration matrix aligned on the baseline of coordinates (-0.5, 0) and (0.5, 0)
booksteinA <- function(A, p1, p2){
B <- array(NA, dim = c(dim(A)[1], dim(A)[2], dim(A)[3]))
for(i in 1:dim(A)[3])  B[,,i] <- booksteinM(A[,,i], p1, p2)
return(B)
}
# ----------
# mbshape(): compute a mean shape using the Bookstein coordinates as the configuration of coordinates corresponding to the mean of all individual coordinates
#   - Arguments:
#        - A: Array containing configuration matrix
#        - p1: Index of the first baseline landmark
#        - p2: Index of the second baseline landmark
#   - Values
#        - Matrix of mean shape coordinates
mbshape <- function(A, p1, p2){
B <- booksteinA(A, p1, p2)
k <- dim(A)[2]
mbsh <- matrix(NA, dim(A)[1], dim(A)[2])
for(i in 1:k)  mbsh[,i] <- apply(B[,i,], 1, mean)
return(mbsh)
}
# ----------
# gorf.dat and gorm.dat
layout(matrix(c(1,2), 1, 2))
Fe <- booksteinA(gorf.dat, 1, 2)
Ma <- booksteinA(gorm.dat, 1, 2)
plot(mbshape(gorf.dat, 1, 2), pch = 18, asp = 1, xlab = "", ylab = "", axes = F)
points(mbshape(gorm.dat, 1, 2), pch = 22)
lines(mbshape(gorm.dat, 1, 2)[c(1, 6, 7, 8, 2, 3, 4, 5, 1),])
lines(mbshape(gorf.dat, 1, 2)[c(1, 6, 7, 8, 2, 3, 4, 5, 1),], lty = 2)
plot(Fe[,1,], Fe[,2,], asp = 1, axes = F, xlab = "", ylab = "", cex = 0.5, pch = 18)
points(Ma[,1,], Ma[,2,], cex = 0.5, pch = 22)
segments(-0.5, 0, 0.5, 0, lw = 2)
# -->
# The baseline corresponds to the location of two landmarks for the 2D registration
booksteinM <- function(M, p1, p2){
D <- basesiz(M, p1, p2)
m <- matrix(NA, nrow(M), ncol(M))
p1 <- M[p1,]
p2 <- M[p2,]
m[,1] <- (((p2[1] - p1[1]) * (M[,1] - p1[1]) + (p2[2] - p1[2]) * (M[,2] - p1[2])) / (D^2)) - 0.5
m[,2] <- (((p2[1] - p1[1]) * (M[,2] - p1[2]) + (p2[2] - p1[2]) * (M[,1] - p1[1])) / (D^2)) + 0.5
return(m)
}
# ----------
# booksteinA(): compute the coordinates of superimposed configurations using the baseline registration, input as array object
#   - Arguments:
#        - A: Array containing configuration matrix
#        - p1: Index of the first baseline landmark
#        - p2: Index of the second baseline landmark
#   - Values
#        - Array of scaled configuration matrix aligned on the baseline of coordinates (-0.5, 0) and (0.5, 0)
booksteinA <- function(A, p1, p2){
B <- array(NA, dim = c(dim(A)[1], dim(A)[2], dim(A)[3]))
for(i in 1:dim(A)[3])  B[,,i] <- booksteinM(A[,,i], p1, p2)
return(B)
}
# ----------
# mbshape(): compute a mean shape using the Bookstein coordinates as the configuration of coordinates corresponding to the mean of all individual coordinates
#   - Arguments:
#        - A: Array containing configuration matrix
#        - p1: Index of the first baseline landmark
#        - p2: Index of the second baseline landmark
#   - Values
#        - Matrix of mean shape coordinates
mbshape <- function(A, p1, p2){
B <- booksteinA(A, p1, p2)
k <- dim(A)[2]
mbsh <- matrix(NA, dim(A)[1], dim(A)[2])
for(i in 1:k)  mbsh[,i] <- apply(B[,i,], 1, mean)
return(mbsh)
}
# ----------
# gorf.dat and gorm.dat
layout(matrix(c(1,2), 1, 2))
Fe <- booksteinA(gorf.dat, 1, 2)
Ma <- booksteinA(gorm.dat, 1, 2)
plot(mbshape(gorf.dat, 1, 2), pch = 18, asp = 1, xlab = "", ylab = "", axes = F)
points(mbshape(gorm.dat, 1, 2), pch = 22)
lines(mbshape(gorm.dat, 1, 2)[c(1, 6, 7, 8, 2, 3, 4, 5, 1),])
lines(mbshape(gorf.dat, 1, 2)[c(1, 6, 7, 8, 2, 3, 4, 5, 1),], lty = 2)
plot(Fe[,1,], Fe[,2,], asp = 1, axes = F, xlab = "", ylab = "", cex = 0.5, pch = 18)
points(Ma[,1,], Ma[,2,], cex = 0.5, pch = 22)
segments(-0.5, 0, 0.5, 0, lw = 2)
# -->
# The baseline corresponds to the location of two landmarks for the 2D registration
booksteinM <- function(M, p1, p2){
D <- basesiz(M, p1, p2)
m <- matrix(NA, nrow(M), ncol(M))
p1 <- M[p1,]
p2 <- M[p2,]
m[,1] <- (((p2[1] - p1[1]) * (M[,1] - p1[1]) + (p2[2] - p1[2]) * (M[,2] - p1[2])) / (D^2)) - 0.5
m[,2] <- (((p2[1] - p1[1]) * (M[,2] - p1[2]) + (p2[2] - p1[2]) * (M[,1] - p1[1])) / (D^2))
return(m)
}
# ----------
# booksteinA(): compute the coordinates of superimposed configurations using the baseline registration, input as array object
#   - Arguments:
#        - A: Array containing configuration matrix
#        - p1: Index of the first baseline landmark
#        - p2: Index of the second baseline landmark
#   - Values
#        - Array of scaled configuration matrix aligned on the baseline of coordinates (-0.5, 0) and (0.5, 0)
booksteinA <- function(A, p1, p2){
B <- array(NA, dim = c(dim(A)[1], dim(A)[2], dim(A)[3]))
for(i in 1:dim(A)[3])  B[,,i] <- booksteinM(A[,,i], p1, p2)
return(B)
}
# ----------
# mbshape(): compute a mean shape using the Bookstein coordinates as the configuration of coordinates corresponding to the mean of all individual coordinates
#   - Arguments:
#        - A: Array containing configuration matrix
#        - p1: Index of the first baseline landmark
#        - p2: Index of the second baseline landmark
#   - Values
#        - Matrix of mean shape coordinates
mbshape <- function(A, p1, p2){
B <- booksteinA(A, p1, p2)
k <- dim(A)[2]
mbsh <- matrix(NA, dim(A)[1], dim(A)[2])
for(i in 1:k)  mbsh[,i] <- apply(B[,i,], 1, mean)
return(mbsh)
}
# ----------
# gorf.dat and gorm.dat
layout(matrix(c(1,2), 1, 2))
Fe <- booksteinA(gorf.dat, 1, 2)
Ma <- booksteinA(gorm.dat, 1, 2)
plot(mbshape(gorf.dat, 1, 2), pch = 18, asp = 1, xlab = "", ylab = "", axes = F)
points(mbshape(gorm.dat, 1, 2), pch = 22)
lines(mbshape(gorm.dat, 1, 2)[c(1, 6, 7, 8, 2, 3, 4, 5, 1),])
lines(mbshape(gorf.dat, 1, 2)[c(1, 6, 7, 8, 2, 3, 4, 5, 1),], lty = 2)
plot(Fe[,1,], Fe[,2,], asp = 1, axes = F, xlab = "", ylab = "", cex = 0.5, pch = 18)
points(Ma[,1,], Ma[,2,], cex = 0.5, pch = 22)
segments(-0.5, 0, 0.5, 0, lw = 2)
# -->
# The baseline corresponds to the location of two landmarks for the 2D registration
plot(mbshape(gorf.dat, 1, 2), pch = 18, asp = 1, xlab = "", ylab = "", axes = F)
# points(mbshape(gorm.dat, 1, 2), pch = 22)
# lines(mbshape(gorm.dat, 1, 2)[c(1, 6, 7, 8, 2, 3, 4, 5, 1),])
lines(mbshape(gorf.dat, 1, 2)[c(1, 6, 7, 8, 2, 3, 4, 5, 1),], lty = 2)
plot(Fe[,1,], Fe[,2,], asp = 1, axes = F, xlab = "", ylab = "", cex = 0.5, pch = 18)
# points(Ma[,1,], Ma[,2,], cex = 0.5, pch = 22)
points(mbshape(gorm.dat, 1, 2), pch = 22)
plot(mbshape(gorf.dat, 1, 2), pch = 18, asp = 1, xlab = "", ylab = "", axes = F)
lines(mbshape(gorf.dat, 1, 2)[c(1, 6, 7, 8, 2, 3, 4, 5, 1),], lty = 2)
plot(Fe[,1,], Fe[,2,], asp = 1, axes = F, xlab = "", ylab = "", cex = 0.5, pch = 18)
lines(mbshape(gorf.dat, 1, 2)[c(1, 6, 7, 8, 2, 3, 4, 5, 1),], lty = 2)
plot(Fe[,1,], Fe[,2,], asp = 1, axes = F, xlab = "", ylab = "", cex = 0.5, pch = 18)
gorf.dat
str(gorf.dat)
packages <- c("dplyr", "shapes")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
# ------------------------------------------------------------------------------
# data:  gorf
# ------------------------------------------------------------------------------
gorf.dat
str(gorf.dat)
( B <- shapes::bookstein2d(gorf.dat) )
# ----------
# plot the resulting superimposition
plotshapes(B$bshpv)
# ----------
# basesiz()
#   - Arguments:
#        - M: Configuration matrix
#        - p1: Index of the first baseline landmark
#        - p2: Index of the second baseline landmark
#   - Values
#        - Baseline size
basesiz <- function(M, p1, p2){
sqrt(sum((M[p1,] - M[p2,]) ^2))
}
# ----------
# booksteinM(): compute the coordinates of superimposed configurations using the baseline registration
#   - Arguments:
#        - M: Configuration matrix
#        - p1: Index of the first baseline landmark
#        - p2: Index of the second baseline landmark
#   - Values
#        - Scaled configuration matrix aligned on the baseline of coordinates (-0.5, 0) and (0.5, 0)
booksteinM <- function(M, p1, p2){
D <- basesiz(M, p1, p2)
m <- matrix(NA, nrow(M), ncol(M))
p1 <- M[p1,]
p2 <- M[p2,]
m[,1] <- (((p2[1] - p1[1]) * (M[,1] - p1[1]) + (p2[2] - p1[2]) * (M[,2] - p1[2])) / (D^2)) - 0.5
m[,2] <- (((p2[1] - p1[1]) * (M[,2] - p1[2]) + (p2[2] - p1[2]) * (M[,1] - p1[1])) / (D^2))
return(m)
}
# ----------
# booksteinA(): compute the coordinates of superimposed configurations using the baseline registration, input as array object
#   - Arguments:
#        - A: Array containing configuration matrix
#        - p1: Index of the first baseline landmark
#        - p2: Index of the second baseline landmark
#   - Values
#        - Array of scaled configuration matrix aligned on the baseline of coordinates (-0.5, 0) and (0.5, 0)
booksteinA <- function(A, p1, p2){
B <- array(NA, dim = c(dim(A)[1], dim(A)[2], dim(A)[3]))
for(i in 1:dim(A)[3])  B[,,i] <- booksteinM(A[,,i], p1, p2)
return(B)
}
# ----------
# mbshape(): compute a mean shape using the Bookstein coordinates as the configuration of coordinates corresponding to the mean of all individual coordinates
#   - Arguments:
#        - A: Array containing configuration matrix
#        - p1: Index of the first baseline landmark
#        - p2: Index of the second baseline landmark
#   - Values
#        - Matrix of mean shape coordinates
mbshape <- function(A, p1, p2){
B <- booksteinA(A, p1, p2)
k <- dim(A)[2]
mbsh <- matrix(NA, dim(A)[1], dim(A)[2])
for(i in 1:k)  mbsh[,i] <- apply(B[,i,], 1, mean)
return(mbsh)
}
# ----------
# gorf.dat and gorm.dat
layout(matrix(c(1,2), 1, 2))
Fe <- booksteinA(gorf.dat, 1, 2)
Ma <- booksteinA(gorm.dat, 1, 2)
plot(mbshape(gorf.dat, 1, 2), pch = 18, asp = 1, xlab = "", ylab = "", axes = F)
points(mbshape(gorm.dat, 1, 2), pch = 22)
lines(mbshape(gorm.dat, 1, 2)[c(1, 6, 7, 8, 2, 3, 4, 5, 1),])
lines(mbshape(gorf.dat, 1, 2)[c(1, 6, 7, 8, 2, 3, 4, 5, 1),], lty = 2)
plot(Fe[,1,], Fe[,2,], asp = 1, axes = F, xlab = "", ylab = "", cex = 0.5, pch = 18)
points(Ma[,1,], Ma[,2,], cex = 0.5, pch = 22)
segments(-0.5, 0, 0.5, 0, lw = 2)
# plot the resulting superimposition
plotshapes(B$bshpv)
booksteinM <- function(M, p1, p2){
D <- basesiz(M, p1, p2)
m <- matrix(NA, nrow(M), ncol(M))
p1 <- M[p1,]
p2 <- M[p2,]
m[,1] <- (((p2[1] - p1[1]) * (M[,1] - p1[1]) + (p2[2] - p1[2]) * (M[,2] - p1[2])) / (D^2)) - 0.5
m[,2] <- ((p2[1] - p1[1]) * (M[,2] - p1[2]) + (p2[2] - p1[2]) * (M[,1] - p1[1])) / (D^2)
return(m)
}
# ----------
# booksteinA(): compute the coordinates of superimposed configurations using the baseline registration, input as array object
#   - Arguments:
#        - A: Array containing configuration matrix
#        - p1: Index of the first baseline landmark
#        - p2: Index of the second baseline landmark
#   - Values
#        - Array of scaled configuration matrix aligned on the baseline of coordinates (-0.5, 0) and (0.5, 0)
booksteinA <- function(A, p1, p2){
B <- array(NA, dim = c(dim(A)[1], dim(A)[2], dim(A)[3]))
for(i in 1:dim(A)[3])  B[,,i] <- booksteinM(A[,,i], p1, p2)
return(B)
}
# ----------
# mbshape(): compute a mean shape using the Bookstein coordinates as the configuration of coordinates corresponding to the mean of all individual coordinates
#   - Arguments:
#        - A: Array containing configuration matrix
#        - p1: Index of the first baseline landmark
#        - p2: Index of the second baseline landmark
#   - Values
#        - Matrix of mean shape coordinates
mbshape <- function(A, p1, p2){
B <- booksteinA(A, p1, p2)
k <- dim(A)[2]
mbsh <- matrix(NA, dim(A)[1], dim(A)[2])
for(i in 1:k)  mbsh[,i] <- apply(B[,i,], 1, mean)
return(mbsh)
}
# ----------
# gorf.dat and gorm.dat
layout(matrix(c(1,2), 1, 2))
Fe <- booksteinA(gorf.dat, 1, 2)
Ma <- booksteinA(gorm.dat, 1, 2)
plot(mbshape(gorf.dat, 1, 2), pch = 18, asp = 1, xlab = "", ylab = "", axes = F)
points(mbshape(gorm.dat, 1, 2), pch = 22)
lines(mbshape(gorm.dat, 1, 2)[c(1, 6, 7, 8, 2, 3, 4, 5, 1),])
lines(mbshape(gorf.dat, 1, 2)[c(1, 6, 7, 8, 2, 3, 4, 5, 1),], lty = 2)
plot(Fe[,1,], Fe[,2,], asp = 1, axes = F, xlab = "", ylab = "", cex = 0.5, pch = 18)
points(Ma[,1,], Ma[,2,], cex = 0.5, pch = 22)
segments(-0.5, 0, 0.5, 0, lw = 2)
# -->
# The baseline corresponds to the location of two landmarks for the 2D registration
booksteinM <- function(M, p1, p2){
D <- basesiz(M, p1, p2)
m <- matrix(NA, nrow(M), ncol(M))
p1 <- M[p1,]
p2 <- M[p2,]
#  m[,1] <- (((p2[1] - p1[1]) * (M[,1] - p1[1]) + (p2[2] - p1[2]) * (M[,2] - p1[2])) / (D^2)) - 0.5
m[,1] <- ((p2[1] - p1[1]) * (M[,1] - p1[1]) + (p2[2] - p1[2]) * (M[,2] - p1[2])) / (D^2)
m[,2] <- ((p2[1] - p1[1]) * (M[,2] - p1[2]) + (p2[2] - p1[2]) * (M[,1] - p1[1])) / (D^2)
return(m)
}
# ----------
# booksteinA(): compute the coordinates of superimposed configurations using the baseline registration, input as array object
#   - Arguments:
#        - A: Array containing configuration matrix
#        - p1: Index of the first baseline landmark
#        - p2: Index of the second baseline landmark
#   - Values
#        - Array of scaled configuration matrix aligned on the baseline of coordinates (-0.5, 0) and (0.5, 0)
booksteinA <- function(A, p1, p2){
B <- array(NA, dim = c(dim(A)[1], dim(A)[2], dim(A)[3]))
for(i in 1:dim(A)[3])  B[,,i] <- booksteinM(A[,,i], p1, p2)
return(B)
}
# ----------
# mbshape(): compute a mean shape using the Bookstein coordinates as the configuration of coordinates corresponding to the mean of all individual coordinates
#   - Arguments:
#        - A: Array containing configuration matrix
#        - p1: Index of the first baseline landmark
#        - p2: Index of the second baseline landmark
#   - Values
#        - Matrix of mean shape coordinates
mbshape <- function(A, p1, p2){
B <- booksteinA(A, p1, p2)
k <- dim(A)[2]
mbsh <- matrix(NA, dim(A)[1], dim(A)[2])
for(i in 1:k)  mbsh[,i] <- apply(B[,i,], 1, mean)
return(mbsh)
}
# ----------
# gorf.dat and gorm.dat
layout(matrix(c(1,2), 1, 2))
Fe <- booksteinA(gorf.dat, 1, 2)
Ma <- booksteinA(gorm.dat, 1, 2)
plot(mbshape(gorf.dat, 1, 2), pch = 18, asp = 1, xlab = "", ylab = "", axes = F)
points(mbshape(gorm.dat, 1, 2), pch = 22)
lines(mbshape(gorm.dat, 1, 2)[c(1, 6, 7, 8, 2, 3, 4, 5, 1),])
lines(mbshape(gorf.dat, 1, 2)[c(1, 6, 7, 8, 2, 3, 4, 5, 1),], lty = 2)
plot(Fe[,1,], Fe[,2,], asp = 1, axes = F, xlab = "", ylab = "", cex = 0.5, pch = 18)
points(Ma[,1,], Ma[,2,], cex = 0.5, pch = 22)
segments(-0.5, 0, 0.5, 0, lw = 2)
# -->
# The baseline corresponds to the location of two landmarks for the 2D registration
graphics.off()
layout(matrix(c(1,2), 1, 2))
Fe <- booksteinA(gorf.dat, 1, 2)
Ma <- booksteinA(gorm.dat, 1, 2)
plot(mbshape(gorf.dat, 1, 2), pch = 18, asp = 1, xlab = "", ylab = "", axes = F)
points(mbshape(gorm.dat, 1, 2), pch = 22)
lines(mbshape(gorm.dat, 1, 2)[c(1, 6, 7, 8, 2, 3, 4, 5, 1),])
lines(mbshape(gorf.dat, 1, 2)[c(1, 6, 7, 8, 2, 3, 4, 5, 1),], lty = 2)
plot(Fe[,1,], Fe[,2,], asp = 1, axes = F, xlab = "", ylab = "", cex = 0.5, pch = 18)
points(Ma[,1,], Ma[,2,], cex = 0.5, pch = 22)
segments(-0.5, 0, 0.5, 0, lw = 2)
basesiz <- function(M, p1, p2){
sqrt(sum((M[p1,] - M[p2,]) ^ 2))
}
# ----------
# booksteinM(): compute the coordinates of superimposed configurations using the baseline registration
#   - Arguments:
#        - M: Configuration matrix
#        - p1: Index of the first baseline landmark
#        - p2: Index of the second baseline landmark
#   - Values
#        - Scaled configuration matrix aligned on the baseline of coordinates (-0.5, 0) and (0.5, 0)
booksteinM <- function(M, p1, p2){
D <- basesiz(M, p1, p2)
m <- matrix(NA, nrow(M), ncol(M))
p1 <- M[p1,]
p2 <- M[p2,]
m[,1] <- (((p2[1] - p1[1]) * (M[,1] - p1[1]) + (p2[2] - p1[2]) * (M[,2] - p1[2])) / (D^2)) - 0.5
m[,2] <- ((p2[1] - p1[1]) * (M[,2] - p1[2]) + (p2[2] - p1[2]) * (M[,1] - p1[1])) / (D^2)
return(m)
}
# ----------
# booksteinA(): compute the coordinates of superimposed configurations using the baseline registration, input as array object
#   - Arguments:
#        - A: Array containing configuration matrix
#        - p1: Index of the first baseline landmark
#        - p2: Index of the second baseline landmark
#   - Values
#        - Array of scaled configuration matrix aligned on the baseline of coordinates (-0.5, 0) and (0.5, 0)
booksteinA <- function(A, p1, p2){
B <- array(NA, dim = c(dim(A)[1], dim(A)[2], dim(A)[3]))
for(i in 1:dim(A)[3])  B[,,i] <- booksteinM(A[,,i], p1, p2)
return(B)
}
# ----------
# mbshape(): compute a mean shape using the Bookstein coordinates as the configuration of coordinates corresponding to the mean of all individual coordinates
#   - Arguments:
#        - A: Array containing configuration matrix
#        - p1: Index of the first baseline landmark
#        - p2: Index of the second baseline landmark
#   - Values
#        - Matrix of mean shape coordinates
mbshape <- function(A, p1, p2){
B <- booksteinA(A, p1, p2)
k <- dim(A)[2]
mbsh <- matrix(NA, dim(A)[1], dim(A)[2])
for(i in 1:k)  mbsh[,i] <- apply(B[,i,], 1, mean)
return(mbsh)
}
# ----------
# gorf.dat and gorm.dat
graphics.off()
layout(matrix(c(1,2), 1, 2))
Fe <- booksteinA(gorf.dat, 1, 2)
Ma <- booksteinA(gorm.dat, 1, 2)
plot(mbshape(gorf.dat, 1, 2), pch = 18, asp = 1, xlab = "", ylab = "", axes = F)
points(mbshape(gorm.dat, 1, 2), pch = 22)
lines(mbshape(gorm.dat, 1, 2)[c(1, 6, 7, 8, 2, 3, 4, 5, 1),])
lines(mbshape(gorf.dat, 1, 2)[c(1, 6, 7, 8, 2, 3, 4, 5, 1),], lty = 2)
plot(Fe[,1,], Fe[,2,], asp = 1, axes = F, xlab = "", ylab = "", cex = 0.5, pch = 18)
points(Ma[,1,], Ma[,2,], cex = 0.5, pch = 22)
segments(-0.5, 0, 0.5, 0, lw = 2)
# -->
# The baseline corresponds to the location of two landmarks for the 2D registration
land_1 <- 1
land_2 <- 2
graphics.off()
layout(matrix(c(1,2), 1, 2))
Fe <- booksteinA(gorf.dat, land_1, land_2)
Ma <- booksteinA(gorm.dat, land_1, land_2)
plot(mbshape(gorf.dat, land_1, land_2), pch = 18, asp = 1, xlab = "", ylab = "", axes = F)
points(mbshape(gorm.dat, land_1, land_2), pch = 22)
lines(mbshape(gorm.dat, land_1, land_2)[c(1, 6, 7, 8, 2, 3, 4, 5, 1),])
lines(mbshape(gorf.dat, land_1, land_2)[c(1, 6, 7, 8, 2, 3, 4, 5, 1),], lty = 2)
plot(Fe[,1,], Fe[,2,], asp = 1, axes = F, xlab = "", ylab = "", cex = 0.5, pch = 18)
points(Ma[,1,], Ma[,2,], cex = 0.5, pch = 22)
segments(-0.5, 0, 0.5, 0, lw = 2)
# -->
# The baseline corresponds to the location of two landmarks for the 2D registration
land_1 <- 1
land_2 <- 3
graphics.off()
layout(matrix(c(1,2), 1, 2))
Fe <- booksteinA(gorf.dat, land_1, land_2)
Ma <- booksteinA(gorm.dat, land_1, land_2)
plot(mbshape(gorf.dat, land_1, land_2), pch = 18, asp = 1, xlab = "", ylab = "", axes = F)
points(mbshape(gorm.dat, land_1, land_2), pch = 22)
lines(mbshape(gorm.dat, land_1, land_2)[c(1, 6, 7, 8, 2, 3, 4, 5, 1),])
lines(mbshape(gorf.dat, land_1, land_2)[c(1, 6, 7, 8, 2, 3, 4, 5, 1),], lty = 2)
plot(Fe[,1,], Fe[,2,], asp = 1, axes = F, xlab = "", ylab = "", cex = 0.5, pch = 18)
points(Ma[,1,], Ma[,2,], cex = 0.5, pch = 22)
segments(-0.5, 0, 0.5, 0, lw = 2)
# -->
# The baseline corresponds to the location of two landmarks for the 2D registration
land_1 <- 4
land_2 <- 3
graphics.off()
layout(matrix(c(1,2), 1, 2))
Fe <- booksteinA(gorf.dat, land_1, land_2)
Ma <- booksteinA(gorm.dat, land_1, land_2)
plot(mbshape(gorf.dat, land_1, land_2), pch = 18, asp = 1, xlab = "", ylab = "", axes = F)
points(mbshape(gorm.dat, land_1, land_2), pch = 22)
lines(mbshape(gorm.dat, land_1, land_2)[c(1, 6, 7, 8, 2, 3, 4, 5, 1),])
lines(mbshape(gorf.dat, land_1, land_2)[c(1, 6, 7, 8, 2, 3, 4, 5, 1),], lty = 2)
plot(Fe[,1,], Fe[,2,], asp = 1, axes = F, xlab = "", ylab = "", cex = 0.5, pch = 18)
points(Ma[,1,], Ma[,2,], cex = 0.5, pch = 22)
segments(-0.5, 0, 0.5, 0, lw = 2)
# -->
# The baseline corresponds to the location of two landmarks for the 2D registration
land_1 <- 1
land_2 <- 4
graphics.off()
layout(matrix(c(1,2), 1, 2))
Fe <- booksteinA(gorf.dat, land_1, land_2)
Ma <- booksteinA(gorm.dat, land_1, land_2)
plot(mbshape(gorf.dat, land_1, land_2), pch = 18, asp = 1, xlab = "", ylab = "", axes = F)
points(mbshape(gorm.dat, land_1, land_2), pch = 22)
lines(mbshape(gorm.dat, land_1, land_2)[c(1, 6, 7, 8, 2, 3, 4, 5, 1),])
lines(mbshape(gorf.dat, land_1, land_2)[c(1, 6, 7, 8, 2, 3, 4, 5, 1),], lty = 2)
plot(Fe[,1,], Fe[,2,], asp = 1, axes = F, xlab = "", ylab = "", cex = 0.5, pch = 18)
points(Ma[,1,], Ma[,2,], cex = 0.5, pch = 22)
segments(-0.5, 0, 0.5, 0, lw = 2)
# -->
# The baseline corresponds to the location of two landmarks for the 2D registration
land_1 <- 1
land_2 <- 2
graphics.off()
layout(matrix(c(1,2), 1, 2))
Fe <- booksteinA(gorf.dat, land_1, land_2)
Ma <- booksteinA(gorm.dat, land_1, land_2)
plot(mbshape(gorf.dat, land_1, land_2), pch = 18, asp = 1, xlab = "", ylab = "", axes = F)
points(mbshape(gorm.dat, land_1, land_2), pch = 22)
lines(mbshape(gorm.dat, land_1, land_2)[c(1, 6, 7, 8, 2, 3, 4, 5, 1),])
lines(mbshape(gorf.dat, land_1, land_2)[c(1, 6, 7, 8, 2, 3, 4, 5, 1),], lty = 2)
plot(Fe[,1,], Fe[,2,], asp = 1, axes = F, xlab = "", ylab = "", cex = 0.5, pch = 18)
points(Ma[,1,], Ma[,2,], cex = 0.5, pch = 22)
segments(-0.5, 0, 0.5, 0, lw = 2)
# -->
# The baseline corresponds to the location of two landmarks for the 2D registration
Fe
a <- mbshape(gorf.dat, land_1, land_2)
a
ma <- matrix(Fe, 30, 16, byrow = T)
ma
vma <- var(ma)
vma
round(svd(vma)$d, 6)
land_1
a <- mbshape(gorf.dat, land_1, land_2)
Fe <- booksteinA(gorf.dat, land_1, land_2)
ma
vma <- var(ma)
round(svd(vma)$d, 6)
a <- mbshape(gorf.dat, land_1, land_2)
Fe <- booksteinA(gorf.dat, land_1, land_2)
ma <- matrix(Fe, 30, 16, byrow = T)
# compute the variance-covariance matrix and singular values
vma <- var(ma)
round(svd(vma)$d, 6)
round(svd(var(matrix(Fe, 30, 16, byrow = T)))$d, 6)
a <- mbshape(gorf.dat, land_1, land_2)
Fe <- booksteinA(gorf.dat, land_1, land_2)
a <- mbshape(gorf.dat, land_1, land_2)
round(svd(var(matrix(Fe, 30, 16, byrow = T)))$d, 6)
a
library(help=shapes)
