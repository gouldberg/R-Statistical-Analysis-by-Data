m10 <- gamlss(fish ~ poly(x, 2), nu.fo = ~x, data = species, family = DEL, n.cyc = 50, trace = FALSE)
m11 <- gamlss(fish ~ poly(x, 2), nu.fo = ~x, data = species, family = DEL, sigma.fix = TRUE, sigma.start = 1, n.cyc = 50, trace = FALSE)
m12 <- gamlssNP(fish ~ poly(x, 2), data = species, mixture = "gq", K = 20, family = PO, control = NP.control(trace = FALSE))
m13 <- gamlssNP(fish ~ poly(x, 2), sigma.fo = ~x, data = species, mizture = "gq", K = 20, family = NBI, control = NP.control(trace = FALSE))
m14 <- gamlssNP(fish ~ poly(x, 2), sigma.fo = ~x, data = species, mizture = "np", K = 6, tol = 0.1, family = PO, control = NP.control(trace = FALSE))
library(gamlss.mx)
m12 <- gamlssNP(fish ~ poly(x, 2), data = species, mixture = "gq", K = 20, family = PO, control = NP.control(trace = FALSE))
m13 <- gamlssNP(fish ~ poly(x, 2), sigma.fo = ~x, data = species, mizture = "gq", K = 20, family = NBI, control = NP.control(trace = FALSE))
m14 <- gamlssNP(fish ~ poly(x, 2), sigma.fo = ~x, data = species, mizture = "np", K = 6, tol = 0.1, family = PO, control = NP.control(trace = FALSE))
library(gamlss.cens)
m1 <- gamlss(fish ~ poly(x, 2), data = species, family = PO, trace = FALSE)
m2 <- gamlss(fish ~ x, data = species, family = NBI, trace = FALSE)
m3 <- gamlss(fish ~ poly(x, 2), data = species, family = NBI, trace = FALSE)
m4 <- gamlss(fish ~ cs(x, 2), data = species, family = NBI, trace = FALSE)
m5 <- gamlss(fish ~ poly(x, 2), sigma.fo = ~x, data = species, family = NBI, trace = FALSE)
m6 <- gamlss(fish ~ poly(x, 2), sigma.fo = ~1, data = species, family = NBF, n.cyc = 200, trace = FALSE)
m7 <- gamlss(fish ~ poly(x, 2), sigma.fo = ~x, data = species, family = NBF, n.cyc = 100, trace = FALSE)
m8 <- gamlss(fish ~ poly(x, 2), data = species, family = PIG, trace = FALSE)
m9 <- gamlss(fish ~ poly(x, 2), nu.fo = ~x, data = species, family = SICHEL, trace = FALSE)
m10 <- gamlss(fish ~ poly(x, 2), nu.fo = ~x, data = species, family = DEL, n.cyc = 50, trace = FALSE)
m11 <- gamlss(fish ~ poly(x, 2), nu.fo = ~x, data = species, family = DEL, sigma.fix = TRUE, sigma.start = 1, n.cyc = 50, trace = FALSE)
m12 <- gamlssNP(fish ~ poly(x, 2), data = species, mixture = "gq", K = 20, family = PO, control = NP.control(trace = FALSE))
m13 <- gamlssNP(fish ~ poly(x, 2), sigma.fo = ~x, data = species, mizture = "gq", K = 20, family = NBI, control = NP.control(trace = FALSE))
m14 <- gamlssNP(fish ~ poly(x, 2), data = species, mixture = "np", K = 6, tol = 0.1, family = PO, control = NP.control(trace = FALSE))
m15 <- gamlssNP(fish ~ poly(x, 2), data = species, mixture = "np", K = 2, family = NBI, control = NP.control(trace = FALSE))
m16 <- gamlssNP(fish ~ poly(x, 2), nu.fo = ~x, data = species, family = DPO, trace = FALSE)
m17 <- gamlss(Surv(fish, fish + 1, type = "interval2") ~ x + I(x^2), sigma.fo = ~1, data = species, family = cens(IG, type = "interval"), trace = FALSE)
m16 <- gamlss(fish ~ poly(x, 2), nu.fo = ~x, data = species, family = DPO, trace = FALSE)
GAIC(m1, m2, m3, m4, m5, m6, m7, m8, m9, m10, m11, m12, m13, m14, m15, m16, m17)
GAIC(m1, m2, m3, m4, m5, m6, m7, m8, m9, m10, m11, m12, m13, m14, m15, m16, m17, k = log(70))
m13 <- gamlssNP(fish ~ poly(x, 2), sigma.fo = ~x, data = species, mixture = "gq", K = 20, family = NBI, control = NP.control(trace = FALSE))
wp(m9);  title("(a)")
wp(m17);  title("(b)")
mSI <- gamlss(fish ~ x + I(x ^ 2), sigam.fo = ~1, nu.fo = ~x, data = species, family = SICHEL, trace = FALSE)
GAIC(m9m, mSI)
GAIC(m9, mSI)
summary(mSI)
summary(m9)
summary(mSI)
rm(list=ls())
graphics.off()
setwd("//media//kswada//MyFiles//R//aep")
packages <- c("dplyr", "gamlss")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
data("aep", package = "gamlss.data")
str(aep)
car::some(aep)
prop <- with(aep, noinap / los)
prop
par(mfrow = c(2,2))
plot(prop ~ age, data = aep, cex = los / 30)
plot(prop ~ sex, data = aep)
plot(prop ~ ward, data = aep)
plot(prop ~ year, data = aep)
m1 <- gamlss(y ~ ward + year + loglos, sigma.fo = ~year, family = BB, data = aep, trace = FALSE)
m2 <- gamlss(y ~ ward + year + loglos, sigma.fo = ~year + ward, family = BB, data = aep, trace = FALSE)
m3 <- gamlss(y ~ ward + year + cs(loglos, df = 1), sigma.fo = ~year + ward, family = BB, data = aep, trace = FALSE)
m4 <- gamlss(y ~ ward + year + cs(loglos, df = 1) + cs(age, df = 1), sigma.fo = ~year + ward, family = BB, data = aep, trace = FALSE)
GAIC(m1, m2, m3, m4, k = log(length(aep$age)))
# SBC
GAIC(m1, m2, m3, m4, k = log(length(aep)))
m41 <- gamlss(y ~ ward + year + cs(loglos, 1) + cs(age, 1), sigma.fo = ~year + ward, family = BB(mu.link = "probit"), data = aep, trace = FALSE)
GAIC(m1, m2, m3, m4, m41, k = log(length(aep)))
term.plot(m41, pages = 1)
term.plot(m41, "sigma", pages = 1)
rqres.plot(m41)
rqres.plot(m1)
setwd("//media//kswada//MyFiles//R//db")
packages <- c("dplyr", "gamlss")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
rm(list=ls())
graphics.off()
data("dbbmi", package = "gamlss.data")
str(dbbmi)
data("db", package = "gamlss.data")
str(db)
car::some(db)
lattice::xyplot(head ~ age, data = dbbmi, type = c("g", "p", "smooth"), col.line = "black", pch = 20, col = gray(0.8))
lattice::xyplot(head ~ age, data = db, type = c("g", "p", "smooth"), col.line = "black", pch = 20, col = gray(0.8))
p1 <- gamlss(head ~ pb(age, method = "ML"), data = db, trace = TRUE)
p2 <- gamlss(head ~ pb(age, method = "GCV"), data = db, trace = TRUE)
p3 <- gamlss(head ~ pb(age, method = "GAIC", k = 2), data = db, trace = TRUE)
car::some(db)
p1 <- gamlss(head ~ pb(age, method = "ML"), data = db, trace = TRUE)
p2 <- gamlss(head ~ pb(age, method = "GCV"), data = db, trace = TRUE)
p3 <- gamlss(head ~ pb(age, method = "GAIC", k = 2), data = db, trace = TRUE)
p4 <- gamlss(head ~ pb(age, method = "GAIC", k = log(length(db$head))), data = db, trace = TRUE)
par(mfrow = c(2,2))
plot(head ~ age, data = db, cex = 0.2, col = "gray", main = "ML")
lines(fitted(p1) ~ db$age, lwd = 2)
graphics.off()
par(mfrow = c(2,2))
plot(head ~ age, data = db, cex = 0.2, col = "gray", main = "ML")
lines(fitted(p1) ~ db$age, lwd = 2)
plot(head ~ age, data = db, cex = 0.2, col = "gray", main = "GCV")
lines(fitted(p2) ~ db$age, lwd = 2)
plot(head ~ age, data = db, cex = 0.2, col = "gray", main = "AIC")
lines(fitted(p3) ~ db$age, lwd = 2)
plot(head ~ age, data = db, cex = 0.2, col = "gray", main = "SBC")
lines(fitted(p4) ~ db$age, lwd = 2)
getSmo(p4)
summary(p4)
par(mfrow=c(1,1))
m0 <- lms(head, age, data = db, trans.x = TRUE, k = 2)
m0_f <- lms(head, age, data = db, trans.x = FALSE, k = 2)
m0
m0_f
m0_f <- lms(head, age, data = db, trans.x = FALSE, k = 2)
m0$power
m0_f
m0$power
m0$family
edfAll(m0)
edfAll(m0_f)
edfAll(m0)
plot(m0)
db$Tage <- (db$age) ^ (m0$power)
hist(db$age)
hist(db$Tage)
show.link("BCTo")
m0A <- gamlss(bmi ~ pb(Tage), sigma.fo = ~pb(Tage), nu.fo = ~pb(Tage), family = BCTo, trace = FALSE, data = dbbmi1)
m0A <- gamlss(head ~ pb(Tage), sigma.fo = ~pb(Tage), nu.fo = ~pb(Tage), family = BCTo, trace = FALSE, data = db)
m0B <- gamlss(head ~ pb(age ^ m0$power), sigma.fo = ~pb(age ^ m0$power), nu.fo = ~pb(age ^ m0$power), family = BCTo, trace = FALSE, data = db)
m01 <- gamlss(head ~ pb(Tage), sigma.fo = ~pb(Tage), nu.fo = ~pb(Tage), family = BCCGo, trace = FALSE, data = db)
m02 <- gamlss(head ~ pb(Tage), sigma.fo = ~pb(Tage), nu.fo = ~pb(Tage), family = BCPEo, trace = FALSE, data = db)
m03 <- gamlss(head ~ pb(Tage), sigma.fo = ~pb(Tage), nu.fo = ~pb(Tage), family = BCTo, trace = FALSE, data = db)
GAIC(m0, m0_f, m01, m02, m3)
GAIC(m0, m0_f, m01, m02, m03)
GAIC(m0, m0_f, m01, m02, m03, k = log(nrow(db)))
edfAll(m0)
m0_c <- lms(head, age, families = c("BCCGo", "BCPEo", "BCTo"), calibration = F, data = db, trans.x = TRUE, k = 4)
m0_c
m0_c$power
m0$power
GAIC(m0, m0_c, m0_f)
GAIC(m0, m0_c, m0_f, k = 4)
m0_c$power
# Best distribution according to GAIC (k = 2)
m0_c$family
edfAll(m0_c)
edfAll(m0_f)
plot(m0_c)
db$Tage <- (db$age) ^ (m0_c$power)
hist(db$age)
hist(db$Tage)
m01 <- gamlss(head ~ pb(Tage), sigma.fo = ~pb(Tage), nu.fo = ~pb(Tage), family = BCCGo, trace = FALSE, data = db)
m02 <- gamlss(head ~ pb(Tage), sigma.fo = ~pb(Tage), nu.fo = ~pb(Tage), family = BCPEo, trace = FALSE, data = db)
m03 <- gamlss(head ~ pb(Tage), sigma.fo = ~pb(Tage), nu.fo = ~pb(Tage), family = BCTo, trace = FALSE, data = db)
m01 <- gamlss(head ~ pb(Tage), sigma.fo = ~pb(Tage), nu.fo = ~pb(Tage), tau.fo = ~pb(Tage), family = BCCGo, trace = FALSE, data = db)
m02 <- gamlss(head ~ pb(Tage), sigma.fo = ~pb(Tage), nu.fo = ~pb(Tage), tau.fo = ~pb(Tage), family = BCPEo, trace = FALSE, data = db)
m03 <- gamlss(head ~ pb(Tage), sigma.fo = ~pb(Tage), nu.fo = ~pb(Tage), tau.fo = ~pb(Tage), family = BCTo, trace = FALSE, data = db)
GAIC(m0_c, m0_f, m01, m02, m03, k = log(nrow(db)))
edfAll(m03)
centiles(m03, db$age)
centiles(m03, db$age, legend = FALSE)
sub1 <- subset(db, age < 3)
h1 <- gamlssML(head, data = sub1, family = BCTo)
centiles(h1, sub1$age, cent = c(1, 2.5, 10, 25, 50, 75, 90, 97.5, 99), legend = FALSE)
# ----------
index <- 1:(nrow(sub1))
centiles(h1, index, legend = F)
h1 <- gamlssML(head, data = sub1, family = BCTo)
centiles(h1, sub1$age, cent = c(1, 2.5, 10, 25, 50, 75, 90, 97.5, 99), legend = FALSE)
mod <- quote(gamlss(head ~ cs(Tage, df = p[1]), sigma.fo = ~cs(Tage, df = p[2]), nu.fo = ~cs(Tage, df = p[3]),
c.spar = c(-1.5, 2.5),
family = BCCGo, data = dbbmi1, control = gamlss.control(trace = FALSE, n.cyc = 1000, gd.tol = Inf)))
plot(m0_c)
edfAll(m0_c)
m0_c
edfAll(m0_c)
mod <- quote(gamlss(head ~ cs(Tage, df = p[1]), sigma.fo = ~cs(Tage, df = p[2]), nu.fo = ~cs(Tage, df = p[3]), tau.fo = ~cs(Tage, df = p[4]),
c.spar = c(-1.5, 2.5),
family = BCTo, data = db, control = gamlss.control(trace = FALSE, n.cyc = 1000, gd.tol = Inf)))
# Note that "Tage" is to be found
# other: used to optimize other non-parameters
# parameters:  the starting values in the search of the optimum hyper-parameters and/or non-linear parameters
op <- find.hyper(model = mod_p, other = quote(Tage <- age ^ p[5]),
parameters = c(13, 5, 2.5, 2, 0.3), lower = c(0.1, 0.1, 0.1, 0.1, 0.05),
steps = c(0.1, 0.1, 0.1, 0.1, 0.05), factr = 2e9, parscale = c(1, 1, 1, 1, 1), k = 4)
mod <- quote(gamlss(head ~ cs(Tage, df = p[1]), sigma.fo = ~cs(Tage, df = p[2]), nu.fo = ~cs(Tage, df = p[3]), tau.fo = ~cs(Tage, df = p[4]),
c.spar = c(-1.5, 2.5),
family = BCTo, data = db, control = gamlss.control(trace = FALSE, n.cyc = 1000, gd.tol = Inf)))
# Note that "Tage" is to be found
# other: used to optimize other non-parameters
# parameters:  the starting values in the search of the optimum hyper-parameters and/or non-linear parameters
op <- find.hyper(model = mod, other = quote(Tage <- age ^ p[5]),
parameters = c(13, 5, 2.5, 2, 0.3), lower = c(0.1, 0.1, 0.1, 0.1, 0.05),
steps = c(0.1, 0.1, 0.1, 0.1, 0.05), factr = 2e9, parscale = c(1, 1, 1, 1, 1), k = 4)
par(mfrow=c(1,1))
m0_c <- lms(head, age, families = c("BCCGo", "BCPEo", "BCTo"), calibration = F, data = db, trans.x = TRUE, k = 4)
round(Q.stats(m0_c, xvar = db$age), 3)
wp(m0_c, xvar = db$age, n.inter = 9)
fittedPlot(m0_c, x = db$age)
db$Tage <- (db$age) ^ (m0_c$power)
m01 <- gamlss(head ~ pb(Tage), sigma.fo = ~pb(Tage), nu.fo = ~pb(Tage), tau.fo = ~pb(Tage), family = BCCGo, trace = FALSE, data = db)
fittedPlot(m1, m0_c, x = db$age, line.type = c(1,2))
fittedPlot(m01, m0_c, x = db$age, line.type = c(1,2))
centiles(m0_c, dbbmi1$age, legend = FALSE)
centiles(m0_c, db$age, legend = FALSE)
centiles(m0_c, db$age, cent = c(5, 25, 50, 75, 95), ylab = "head", xlab = "age",
col.centiles = c(2,3,1,3,2), lty.centiles = c(2,4,1,4,2), lwd.centiles = c(2,2,2.5,2,2))
centiles(m0_c, db$age, cent = c(5, 25, 50, 75, 95))
calibration(m0_C, xvar = db$age, cent = c(5, 25, 50, 75, 95))
centiles(m0_c, db$age, cent = c(5, 25, 50, 75, 95))
calibration(m0_c, xvar = db$age, cent = c(5, 25, 50, 75, 95))
centiles.fan(m0_c, db$age, cent = c(5, 25, 50, 75, 95), ylab = "head", xlab = "age", colors = "gray")
centiles.split(m0, xvar = db$age, xcut.points = c(3))
centiles.split(m0_c, xvar = db$age, xcut.points = c(3))
m2 <- lms(head, age, data = db1, trans.x = TRUE, families = c("SHASH"), n.cyc = 100)
m2 <- lms(head, age, data = db1, trans.x = TRUE, families = c("SHASH"), n.cyc = 100)
m2 <- lms(head, age, data = db, trans.x = TRUE, families = c("SHASH"), n.cyc = 100)
centiles.com(m0_c, m2, xvar = db$age, legend = TRUE, color = TRUE)
centiles.com(m0_c, m01, xvar = db$age, legend = TRUE, color = TRUE)
library(gamlss.util)
plotSimpleGamlss(head, age, m0_c, data = db, x.var = seq(5, 20, 5), xlim = c(-3, 23))
plotSimpleGamlss(head, age, m0_c, data = db, x.var = seq(1, 22, 7), xlim = c(-8, 23))
round(Q.stats(m0_c, xvar = db$age, n.inter = 20), 3)
wp(m0_c, xvar = db$age, ylim.worm = 1.5, n.inter = 16)
wp(m0_c, ylim.all = 1)
wp(m0_c, ylim.all = 1)
wp(m0_c, xvar = db$age, ylim.worm = 1.5, n.inter = 16)
nage <- seq(0, 20, 0.1)
# model m0 by LMS method
mat1 <- centiles.pred(m0_c, xname = "age", xvalues = nage, plot=TRUE, legend = FALSE, xlab = "age", ylab = "head")
mat1_2 <- centiles.pred(m03, xname = "Tage", xvalues = nage, plot=TRUE, legend = FALSE, xlab = "transfomed age", ylab = "head")
head(mat1_2)
mat1 <- centiles.pred(m0_c, xname = "age", xvalues = nage, plot=TRUE, legend = FALSE, xlab = "age", ylab = "head")
mat1_2 <- centiles.pred(m03, xname = "Tage", xvalues = nage, plot=TRUE, legend = FALSE, xlab = "transfomed age", ylab = "head")
dev <- c(-4, -3, -2, -1, 0, 1, 2, 3, 4)
round(100 * dNO(dev), 3)
mat2 <- centiles.pred(m0_c, xname = "age", xvalues = nage, type = "standard-centiles", dev = dev, plot = T)
head(mat2)
yval <- c(45, 50, 60)
xval <- c(5, 10, 15)
# ----------
mat3 <- centiles.pred(m0__c, xname = "age", xval = xval, yval = yval, type = "z-scores")
mat3 <- centiles.pred(m0_c, xname = "age", xval = xval, yval = yval, type = "z-scores")
mat3 <- centiles.pred(m0_c, xname = "age", xval = xval, yval = yval, type = "z-scores", plot = T)
graphics.off()
mat3 <- centiles.pred(m0_c, xname = "age", xval = xval, yval = yval, type = "z-scores", plot = T)
mat3 <- centiles.pred(m0_c, xname = "age", xvalues = xval, yval = yval, type = "z-scores", plot = T)
head(mat3)
yval <- db$head
xval <- db$age
# ----------
graphics.off()
mat3 <- centiles.pred(m0_c, xname = "age", xvalues = xval, yval = yval, type = "z-scores", plot = T)
head(mat3)
z.scores(m0_c, x = xval, y = yval)
hist(mat3)
graphics.off()
mat3 <- centiles.pred(m0_c, xname = "age", xval = xval, yval = yval, type = "z-scores", plot = T)
head(mat3)
# z.scores() is applicable only to LMS model
z.scores(m0_c, x = xval, y = yval)
# ----------
hist(mat3)
ppp <- findPower(db$bmi, db$age)
ppp <- findPower(db$head, db$age)
ppp
qs1 <- quantSheets(head, age, data = db, cent = c(0.4, 2, 10, 25, 50, 75, 90, 98, 99.6), x.lambda = 1, p.lambda = 10, logit = TRUE, power = ppp)
qs1
res1 <- resid(qs1)
wp(resid = res1, xvar = db$age, n.inter = 16)
round(Q.stats(resid = res1, xvar = db$age, n.inter = 20), 3)
calibration(m0_c, xvar = db$age)
wp(m0_c, xvar = db$age, n.inter = 9)
wp(m0_c, xvar = db$age)
help(wp)
wp(m0_c, xvar = db$age, resid = TRUE)
wp(m0_c, xvar = db$age)
wp(m0_c, xvar = db$age, n.inter = 16)
wp(m0_c, xvar = db$age, ylim.all = 1, n.inter = 16)
wp(m0_c, xvar = db$age, ylim.worm = 1.5, n.inter = 16)
wp(m0_c, xvar = db$age, ylim.worm = 3.5, n.inter = 16)
graphics.off()
wp(m0_c, xvar = db$age, ylim.worm = 3.5, n.inter = 16)
help(wp)
12*sqrt(n.inter/length(fitted(m0_c))
12*sqrt(n.inter/length(fitted(m0_c)))
12*sqrt(16/length(fitted(m0_c)))
graphics.off()
wp(m0_c, xvar = db$age, ylim.worm = 3.5, n.inter = 16)
wp(m0_c, xvar = db$age, ylim.worm = 10, n.inter = 16)
graphics.off()
wp(m0_c, xvar = db$age, ylim.worm = 10, n.inter = 16)
resid(m0_c)
sum(abs(resid(m0_c) >= 3.5)
sum(abs(resid(m0_c) >= 3.5))
sum(abs(resid(m0_c) >= 3.5))
wp(m0_c, xvar = db$age, ylim.worm = 2.5, n.inter = 16)
graphics.off()
wp(m0_c, xvar = db$age, ylim.worm = 2.5, n.inter = 16)
wp(m0_c, xvar = db$age, ylim.worm = 1.5, n.inter = 16)
graphics.off()
wp(m0_c, xvar = db$age, ylim.worm = 1.5, n.inter = 16)
graphics.off()
wp(m0_c, xvar = db$age, ylim.worm = 1.5, n.inter = 16)
wp(m0_c, xvar = db$age, ylim.worm = 1.5, n.inter = 9)
graphics.off()
wp(m0_c, xvar = db$age, ylim.worm = 1.5, n.inter = 9)
# cut at age 3
centiles.split(m0_c, xvar = db$age, xcut.points = c(3))
# number of intervals with equal numbers of cases
centiles.split(m0, xvar = dbbmi1$age, n.inter = 4)
centiles.split(m0, xvar = db$age, n.inter = 4)
Q.states(m0_c, xvar = db$age, n.inter = 20)
Q.stats(m0_c, xvar = db$age, n.inter = 20)
centiles.split(m0_c, xvar = db$Tage, xcut.points = c(1.2, 1.8))
Q.stats(m0_c, xvar = db$Tage, n.inter = 20)
centiles.split(m0_c, xvar = db$Tage, xcut.points = c(1.0, 1.2, 2.4, 2.5))
calibrarion(m0_c, xvar = db$age)
calibration(m0_c, xvar = db$age)
centiles(m0_c, xvar = db$age)
centiles(m0_c, xvar = db$age, legend = F)
calibration(m0_c, xvar = db$age)
which(resid(m0_c) > 3.5)
which(resid(m0_c) < -3.5)
dbsub <- subset(db, (resid(m0_c) > -3.5) & (resid(m0_c) < 3.5))
m03_sub <- gamlss(head ~ pb(age ^ m0_c$power), sigma.fo = ~ pb(age ^ m0_c$power), nu.fo = ~ pb(age ^ m0_c$power), tau.fo = ~ pb(age ^ m0_c$power),
family = BCTo, data = dbsub)
wo(m03_sub, all = 1)
wp(m03_sub, all = 1)
wp(m03_sub, ylim.all = 1)
wp(m03_sub, ylim.all = 0.5)
wp(m03_sub, xvar = db$age, ylim.worm = 1.5, n.inter = 9)
wp(m03_sub, xvar = dbsub$age, ylim.worm = 1.5, n.inter = 9)
Q.stats(m03_sub, xvar = dbsub$Tage, n.inter = 20)
centiles.split(m03_sub, xvar = dbsub$Tage, xcut.points = c(1.0, 1.2, 2.4, 2.5))
centiles(m0_c, xvar = db$age, legend = F)
centiles(m03_sub, xvar = dbsub$age, legend = F)
calibration(m03_sub, xvar = dbsub$age)
cent <- c(0.4, 2, 10, 25, 50, 75, 90, 98, 99.6)
# lower percentage removed
a <- (2 / 7040) * 100
# upper percentage removed
b <- (7 / 7040) * 100
# ----------
# lower percentage removed
a <- (2 / 7040) * 100
# upper percentage removed
b <- (7 / 7040) * 100
( newcent <- (cent - a) / (1 - (a + b) / 100) )
centiles.(m03_sub, xvar = dbsub$age, cent = newcent, legend = F)
centiles(m03_sub, xvar = dbsub$age, cent = newcent, legend = F)
centiles(m03_sub, xvar = dbsub$age, cent = cent, legend = F)
centiles(m03_sub, xvar = dbsub$age, cent = newcent, legend = F)
centiles(m03_sub, xvar = dbsub$age, cent = cent, legend = F)
centiles(m03_sub, xvar = dbsub$age, cent = newcent, legend = F)
rm(list=ls())
setwd("//media//kswada//MyFiles//R//grip")
packages <- c("dplyr", "gamlss")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
data("grip", package = "gamlss.data")
str(grip)
car::some(grip)
lattice::xyplot(grip ~ age, data = grip, type = c("g", "p", "smooth"), col.line = "black", pch = 20, col = gray(0.8))
par(mfrow=c(1,1))
m0 <- lms(grip, age, data = grip, trans.x = TRUE, k = 2)
m0_f <- lms(grip, age, data = grip, trans.x = FALSE, k = 2)
m0
m0_f
m0$power
help(lms)
m0 <- lms(grip, age, data = grip, family = c("BCCGo"), trans.x = FALSE, k = 2)
m0
help(lms)
m0 <- lms(grip, age, data = grip, families = c("BCCGo"), trans.x = FALSE, k = 2)
m0
# ----------
# Effective degrees of freedom used for the smooth functions in model m0
# (including 2 for the constant and linear terms)
edfAll(m0)
plot(m0)
edfAll(m0)
m1 <- update(m0, families = c("BCTo"), trans.x = FALSE, k = 2)
m2 <- update(m0, families = c("BCPEo"), trans.x = FALSE, k = 2)
m1
m2
GAIC(m0, m1, m2)
centile.pred(m0, data = grip)
centiles.pred(m0, data = grip)
centiles.pred(m0, xvalues = grip$age)
mat1 <- centiles.pred(m0, xname = "age", xvalues = grip$age, plot=TRUE, legend = FALSE, xlab = "age", ylab = "grip")
mat1
m1 <- lms(mat1$C50, grip$age, families = c("BCTo"), trans.x = FALSE, k = 2)
grip$m0_pred <- mat1$C50
m1 <- lms(m0_pred, age, data = grip, families = c("BCTo"), trans.x = FALSE, k = 2)
m1 <- lms(grip, m0_pred, data = grip, families = c("BCTo"), trans.x = FALSE, k = 2)
help(gamlss)
m0
names(m0)
m0$mu.coefficients
mu.start <- m0$mu.coefficients
sigma.start <- m0$sigma.coefficients
nu.start <- m0$nu.coefficients
tau.start <- m0$tau.coefficients
tau.start
nu.start
m0$mu.coefficients[1]
mu.start <- m0$mu.coefficients[1]
mu.start
tau.start <- m0$tau.coefficients[1]
tau.start
nu.start <- m0$nu.coefficients[1]
nu.start
m0
show.link
show.link("BCCGo")
m1 <- gamlss(grip ~ pb(grip), sigma.fo = ~pb(grip), nu.fo = ~pb(grip), family = BCTo, data = grip, mu.start = mu.start, sigma.start = sigma.start, nu.start = nu.start)
sigma.start
sigma.start <- m0$sigma.coefficients[1]
sigma.start
nu.start <- m0$nu.coefficients[1]
nu.start
mu.start <- m0$mu.coefficients[1]
sigma.start <- m0$sigma.coefficients[1]
nu.start <- m0$nu.coefficients[1]
m1 <- gamlss(grip ~ pb(grip), sigma.fo = ~pb(grip), nu.fo = ~pb(grip), family = BCTo, data = grip,
mu.start = mu.start, sigma.start = sigma.start, nu.start = nu.start)
m1 <- gamlss(grip ~ pb(grip), sigma.fo = ~pb(grip), nu.fo = ~pb(grip), tau.fo = ~pb(grip), family = BCTo, data = grip,
mu.start = mu.start, sigma.start = log(sigma.start), nu.start = nu.start)
log(sigma.start)
(m0$sigma.coefficients[1])
sigma.start <- (m0$sigma.coefficients[1])
sigma.start
sigma.start <- unname(m0$sigma.coefficients[1])
mu.start <- unname(m0$mu.coefficients[1])
sigma.start <- unname(m0$sigma.coefficients[1])
nu.start <- unname(m0$nu.coefficients[1])
sigma.start
mu.start <- log(unname(m0$mu.coefficients[1]))
sigma.start <- log(unname(m0$sigma.coefficients[1]))
nu.start <- unname(m0$nu.coefficients[1])
# ------------------------------------------------------------------------------
# Extract fitted values from LMS model using BCCGo distribution
# ------------------------------------------------------------------------------
m1 <- gamlss(grip ~ pb(grip), sigma.fo = ~pb(grip), nu.fo = ~pb(grip), tau.fo = ~pb(grip), family = BCTo, data = grip,
mu.start = mu.start, sigma.start = sigma.start, nu.start = nu.start)
mu.start
mu.start <- exp(unname(m0$mu.coefficients[1]))
sigma.start <- exp(unname(m0$sigma.coefficients[1]))
nu.start <- unname(m0$nu.coefficients[1])
# ------------------------------------------------------------------------------
# Extract fitted values from LMS model using BCCGo distribution
# ------------------------------------------------------------------------------
m1 <- gamlss(grip ~ pb(grip), sigma.fo = ~pb(grip), nu.fo = ~pb(grip), tau.fo = ~pb(grip), family = BCTo, data = grip,
mu.start = mu.start, sigma.start = sigma.start, nu.start = nu.start)
m1 <- gamlss(grip ~ pb(grip), sigma.fo = ~pb(grip), nu.fo = ~pb(grip), tau.fo = ~pb(grip), family = BCTo, data = grip)
m1 <- gamlss(grip ~ pb(age), sigma.fo = ~pb(age), nu.fo = ~pb(age), tau.fo = ~pb(age), family = BCTo, data = grip)
m1_s <- gamlss(grip ~ pb(age), sigma.fo = ~pb(age), nu.fo = ~pb(age), tau.fo = ~pb(age), family = BCTo, data = grip, start.from = m0)
m1_s2 <- gamlss(grip ~ pb(age), sigma.fo = ~pb(age), nu.fo = ~pb(age), tau.fo = ~pb(age), family = BCTo, data = grip,
mu.start = mu.start, sigma.start = sigma.start, nu.start = nu.start)
m2 <- gamlss(grip ~ pb(age), sigma.fo = ~pb(age), nu.fo = ~pb(age), tau.fo = ~pb(age), family = BCPEo, data = grip)
m2_s <- gamlss(grip ~ pb(age), sigma.fo = ~pb(age), nu.fo = ~pb(age), tau.fo = ~pb(age), family = BCPEo, data = grip, start.from = m0)
m2_s2 <- gamlss(grip ~ pb(age), sigma.fo = ~pb(age), nu.fo = ~pb(age), tau.fo = ~pb(age), family = BCPEo, data = grip,
mu.start = mu.start, sigma.start = sigma.start, nu.start = nu.start)
GAIC(m0, m1, m1_s, m1_s2, m2, m2_s, m2_s2, k = log(nrow(grip)))
GAIC(m0, m1, m1_s, m1_s2, m2, m2_s, m2_s2, k = 2)
nrow(grip)
edfAll(m0)
edfAll(m1)
edfAll(m2)
edfAll(m1)
fittedPlot(m0)
fitted.Plot(m0)
fittedPlot(m0)
fittedPlot(m0, xvar = grip$age)
help(fittedPlot)
fittedPlot(m0, x = grip$age)
GAIC(m0, m1, m1_s, m1_s2, m2, m2_s, m2_s2, k = 2)
GAIC(m0, m1, m1_s, m1_s2, m2, m2_s, m2_s2, k = log(nrow(grip)))
fittedPlot(m1_s, x = grip$age)
fittedPlot(m2_s, x = grip$age)
fittedPlot(m1_s, x = grip$age)
centiles(m0, grip$age, legend = FALSE)
centiles(m1_s2, grip$age, legend = FALSE)
centiles(m0, grip$age, legend = FALSE)
centiles(m1_s2, grip$age, legend = FALSE)
centiles(m2_s2, grip$age, legend = FALSE)
centiles.split(m0, xvar = grip$age, xcut.points = c(12,14))
centiles.split(m0, xvar = grip$age, xcut.points = c(12,14,16))
centiles.split(m0, xvar = grip$age, xcut.points = c(12,14,16))
centiles.split(m0, xvar = grip$age, xcut.points = c(12,14))
centiles.split(m1_s1, xvar = grip$age, xcut.points = c(12,14))
centiles.split(m1_s2, xvar = grip$age, xcut.points = c(12,14))
centiles.split(m2_s2, xvar = grip$age, xcut.points = c(12,14))
round(Q.stats(m0, xvar = grip$age, n.inter = 20), 3)
round(Q.stats(m1_s2, xvar = grip$age, n.inter = 20), 3)
round(Q.stats(m2_s2, xvar = grip$age, n.inter = 20), 3)
round(Q.stats(m1_s2, xvar = grip$age, n.inter = 20), 3)
round(Q.stats(m0, xvar = grip$age, n.inter = 20), 3)
round(Q.stats(m1_s2, xvar = grip$age, n.inter = 20), 3)
round(Q.stats(m2_s2, xvar = grip$age, n.inter = 20), 3)
round(Q.stats(m1_s2, xvar = grip$age, n.inter = 20), 3)
wp(m0, ylim.all = 1)
wp(m0, ylim.all = 3.5)
wp(m0, ylim.all = 3.5, n.inter = 4)
wp(m0, ylim.all = 3.5, n.inter = 4)
wp(m0, ylim.all = 3.5, n.inter = 10)
wp(m0, ylim.all = 3.5, n.inter = 9)
wp(m0, n.inter = 9)
wp(m0, xvar = grip$age, ylim.worm = 1.5, n.inter = 4)
wp(m0, xvar = grip$age, ylim.worm = 2.5, n.inter = 4)
wp(m2_s1, xvar = grip$age, ylim.worm = 1.5, n.inter = 4)
wp(m2_s2, xvar = grip$age, ylim.worm = 1.5, n.inter = 4)
wp(m1_s2, xvar = grip$age, ylim.worm = 1.5, n.inter = 4)
plot(m0)
plot(m1_s2)
plot(m2_s2)
plot(m1_s2)
plot(m0)
