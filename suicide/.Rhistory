#  - In World War II, all workers in the UK Royal Ordnance factories were given test of visual acuity (unaided distance vision) of
#    their left and right eyes on a 1 (high) to 4 (low) scale.
#    The dataset VisualAcuity in vcd gives the results for 10,719 workers (3,242 men, 7,477 women) aged 30-39
# ------------------------------------------------------------------------------
data("VisualAcuity", package = "vcd")
data <- VisualAcuity
packages <- c("dplyr", "vcd", "MASS", "vcdExtra")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
data
car::some(data)
dimnames(dat)[1:2] <- list(c("high", 2, 3, "low"))
dat <- xtabs(Freq ~ right + left + gender, data = VisualAcuity)
dimnames(dat)[1:2] <- list(c("high", 2, 3, "low"))
names(dimnames(dat))[1:2] <- paste(c("Right", "Left"), "eye grade")
dat
structable(aperm(dat))
setwd("//media//kswada//MyFiles//R//visual_acuity")
packages <- c("dplyr", "vcd", "MASS", "vcdExtra")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
# ------------------------------------------------------------------------------
# data:  Visual Acuity
# ------------------------------------------------------------------------------
data("VisualAcuity", package = "vcd")
data <- VisualAcuity
car::some(data)
# Convert frequency data frame to table form
dat <- xtabs(Freq ~ right + left + gender, data = VisualAcuity)
dimnames(dat)[1:2] <- list(c("high", 2, 3, "low"))
names(dimnames(dat))[1:2] <- paste(c("Right", "Left"), "eye grade")
dat
structable(aperm(dat))
sieve(dat[, , "female"])
setwd("//media//kswada//MyFiles//R//visual_acuity")
packages <- c("dplyr", "vcd", "MASS", "vcdExtra")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
# ------------------------------------------------------------------------------
# data:  Visual Acuity
# ------------------------------------------------------------------------------
data("VisualAcuity", package = "vcd")
data <- VisualAcuity
car::some(data)
# Convert frequency data frame to table form
dat <- xtabs(Freq ~ right + left + gender, data = VisualAcuity)
dimnames(dat)[1:2] <- list(c("high", 2, 3, "low"))
names(dimnames(dat))[1:2] <- paste(c("Right", "Left"), "eye grade")
dat
structable(aperm(dat))
# ------------------------------------------------------------------------------
# ------------------------------------------------------------------------------
sieve(dat[, , "female"])
sieve(Freq ~ right + left, data = data, shade = TRUE)
sieve(dat[, , "female"], shade=TRUE)
sieve(Freq ~ right + left | gender, data = data, shade = TRUE, set_varnames = c(right = "Right eye grade", left = "Left eye grade"))
cotabplot(dat, cond = "gender", panel = cotab_sieve, shade = TRUE)
setwd("//media//kswada//MyFiles//R//sexual_fun")
packages <- c("dplyr", "vcd", "MASS", "datasets")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
data("SexualFun", package = "vcd")
data <- SexualFun
data
sieve(data)
sieve(data, shade=TRUE)
Kappa(data)
confint(Kappa(data))
psych::ICC(data)
help(Kappa)
Kappa(data, weights = "Fleiss-Cohen")
confint(Kappa(data, weights = "Fleiss-Cohen"))
agreementplot(data, main = "Unweighted", weights = 1)
agreementplot(data, main = "weighted")
B <- agreementplot(data)
B
unlist(B)[1:2]
data("Mommograms", package = "vcdExtra")
data("Mammograms", package = "vcdExtra")
data <- Mammograms
data
sieve(data, shade=TRUE)
Kappa(data)
Kappa(data, weights = "Fleiss-Cohen")
confint(Kappa(data, weights = "Fleiss-Cohen"))
agreementplot(data, main = "Unweighted", weights = 1)
agreementplot(data, main = "weighted")
B <- agreementplot(data)
unlist(B)[1:2]
data("MSPatients", package = "vcdExtra")
data("MSPatients", package = "vcd")
data("MSPatients", package = "vcd")
data <- MSPatients
data
sieve(data, shade=TRUE)
data[, , "Winnipeg"]
data[, , "New Orleans"]
sieve(data[, , "Winnipeg"], shade=TRUE)
sieve(data[, , "New Orleans"], shade=TRUE)
sieve(data[, , "Winnipeg"], shade=TRUE)
sieve(data[, , "New Orleans"], shade=TRUE)
apply(data, 3, sum)
sieve(data[, , "Winnipeg"], shade=TRUE)
data[, , "Winnipeg"]
data
sieve(data[, , "Winnipeg"], shade=TRUE)
sieve(data[, , "New Orleans"], shade=TRUE)
cotabplot(data, cond = "patients", panel = cotab_agreementplot, text_gp ~ gpar(fontsize = 18), xlab_rot = 20)
cotabplot(data, cond = "patients", panel = cotab_agreementplot, text_gp = gpar(fontsize = 18), xlab_rot = 20)
cotabplot(data, cond = "Patients", panel = cotab_agreementplot, text_gp = gpar(fontsize = 18), xlab_rot = 20)
agreementplot(data, main = "weighted")
agreementplot(data[, , "Winnigpeg"], main = "weighted")
agreementplot(data[, , "Winnipeg"], main = "weighted")
rbind(Winnipeg = unlist(agr1), Neworleans = uilist(agr2), [, 1:2])
rbind(Winnipeg = unlist(agr1), Neworleans = uilist(agr2)) [, 1:2]
agr1 <- agreementplot(data[, , "Winnipeg"])
agr2 <- agreementplot(data[, , "New Orleans"])
rbind(Winnipeg = unlist(agr1), Neworleans = uilist(agr2)) [, 1:2]
rbind(Winnipeg = unlist(agr1), Neworleans = unlist(agr2)) [, 1:2]
setwd("//media//kswada//MyFiles//R//cmhdemo")
packages <- c("dplyr", "vcd", "MASS", "vcdExtra")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
data("cmhdemo1", package = "vcd")
data("cmhdemo1", package = "vcdExtra")
cmhdemo1
data("cmhdemo1", package = "vcdExtra")
help(cmhdemo1)
cmhdemo1??
??cmhdemo1
??cmhdemo
setwd("//media//kswada//MyFiles//R//titanic_lifeboats")
packages <- c("dplyr", "vcd", "MASS", "vcdExtra")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
data("Lifeboats", package = "vcd")
data <- Lifeboats
car::some(data)
data$id <- ifelse(data$men / data$total > 0.1, as.character(data$boat), "")
data$id
AES <- aes(x = womenm, y = men, z = crew, color = side, shape = side, label = id)
ggtern(data = data, mapping = AES) + geom_text() + geom_point(size=2) + geom_smooth_tern(method = "lm", alpha = 0.2)
packages <- c("dplyr", "vcd", "MASS", "ggplot2")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
ggtern(data = data, mapping = AES) + geom_text() + geom_point(size=2) + geom_smooth_tern(method = "lm", alpha = 0.2)
packages <- c("dplyr", "vcd", "MASS", "ggplot2")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
help(ggtern)
??ggtern
nrow(data)
data
install.packages("ggtern", dependencies = T)
setwd("//media//kswada//MyFiles//R//titanic_lifeboats")
packages <- c("dplyr", "vcd", "MASS", "ggtern")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
data("Lifeboats", package = "vcd")
data <- Lifeboats
car::some(data)
# ----------
# Label boats with more than 10% men
data$id <- ifelse(data$men / data$total > 0.1, as.character(data$boat), "")
AES <- aes(x = womenm, y = men, z = crew, color = side, shape = side, label = id)
AES
ggtern(data = data, mapping = AES) + geom_text() + geom_point(size=2) + geom_smooth_tern(method = "lm", alpha = 0.2)
AES <- aes(x = women, y = men, z = crew, color = side, shape = side, label = id)
AES
ggtern(data = data, mapping = AES) + geom_text() + geom_point(size=2) + geom_smooth_tern(method = "lm", alpha = 0.2)
AES <- aes(x = women, y = men, z = crew, colour = side, shape = side, label = id)
AES
ggtern(data = data, mapping = AES) + geom_text() + geom_point(size=2) + geom_smooth_tern(method = "lm", alpha = 0.2)
ggtern(data = data, mapping = AES) + theme_rgbw() + geom_point(size=2) + labs(title = "Lifeboats on the Titanic") + labs(T="Women and children") +
geom_smooth_tern(method="lm", size=1.5, alpha=.2, aes(fill=side)) + geom_text(vjust=1, color="black") +
theme(legend.position=c(.85, .85), axis.tern.vshift=unit(5,"mm"))
ggtern(data = data, mapping = AES) + theme_rgbw() + geom_point(size=2) + labs(title = "Lifeboats on the Titanic") + labs(T="Women and children") +
geom_smooth_tern(method="lm", size=1.5, alpha=.2, aes(fill=side)) + geom_text(vjust=1, color="black")
ggtern(data = data, mapping = AES) + theme_rgbw() + geom_point(size=2) + labs(title = "Lifeboats on the Titanic") + labs(T="Women and children") +
geom_smooth_tern(method="lm", size=1.5, alpha=.2, aes(fill=side)) + geom_text(vjust=1, color="black") +
theme(legend.position=c(.85, .85))
ggtern(data = data, mapping = AES) + theme_rgbw() + geom_point(size=2) + labs(title = "Lifeboats on the Titanic") + labs(T="Women and children") +
geom_smooth_tern(method="lm", size=1.5, alpha=.2, aes(fill=side)) + geom_text(vjust=1, color="black") +
theme(legend.position=c(.85, .85), axis.tern.vshift=unit(5,"mm"))
ggtern(data = data, mapping = AES) + theme_rgbw() + geom_point(size=2) + labs(title = "Lifeboats on the Titanic") + labs(T="Women and children") +
geom_smooth_tern(method="lm", size=1.5, alpha=.2, aes(fill=side)) + geom_text(vjust=1, color="black") +
theme(legend.position=c(.85, .85), axis.tern.vshift=unit(5,"mm"))
ggtern(data = data, mapping = AES) + theme_rgbw() + geom_point(size=2) + labs(title = "Lifeboats on the Titanic") + labs(T="Women and children") +
geom_smooth_tern(method="lm", size=1.5, alpha=.2, aes(fill=side)) + geom_text(vjust=1, color="black") +
theme(legend.position=c(.85, .85))
ggplot(data = data, aes(x=launch, y=total, colour=side,  label=boat)) + geom_smooth(method="lm", aes(fill=side), size=1.5) +
geom_smooth(method="loess", aes(fill=side), se=FALSE, size=1.2) + geom_point() + ylim(c(0,100)) + geom_text(vjust=-.5, color="black") +
labs(y="Total loaded", x="Launch time")
ggplot(data = data, aes(x=launch, y=total, colour=side,  label=boat)) + geom_smooth(method="lm", aes(fill=side), size=1.5) +
geom_smooth(method="loess", aes(fill=side), se=FALSE, size=1.2) + geom_point() + ylim(c(0,100)) + geom_text(vjust=-.5, color="black")
ggplot(data = data, aes(x=launch, y=total, colour=side,  label=boat)) + geom_text() + geom_smooth(method="lm", aes(fill=side), size=1.5) +
geom_smooth(method="loess", aes(fill=side), se=FALSE, size=1.2)
str(data)
data$launch <- POSIXct(data$launch)
data$launch <- as.POSIXct(data$launch)
ggplot(data = data, aes(x=launch, y=total, colour=side,  label=boat)) + geom_text() + geom_smooth(method="lm", aes(fill=side), size=1.5) +
geom_smooth(method="loess", aes(fill=side), se=FALSE, size=1.2)
ggplot(data = data,
aes(x=launch, y=total, colour=side,  label=boat)) +
geom_smooth(method="lm", aes(fill=side), size=1.5) +
geom_smooth(method="loess", aes(fill=side), se=FALSE, size=1.2) +
geom_point() + ylim(c(0,100)) +
geom_text(vjust=-.5, color="black") +
labs(y="Total loaded", x="Launch time")
ggplot(data = data, aes(x=launch, y=total, colour=side,  label=boat)) + geom_smooth(method="lm", aes(fill=side), size=1.5) +
geom_smooth(method="loess", aes(fill=side), se=FALSE, size=1.2) + geom_point() + ylim(c(0,100)) +
geom_text(vjust=-.5, color="black") + labs(y="Total loaded", x="Launch time")
setwd("//media//kswada//MyFiles//R//cmhdemo")
setwd("//media//kswada//MyFiles//R//cmhdemo")
packages <- c("dplyr", "vcd", "MASS")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
cmhdemo1 <- read.table(header=TRUE, sep="", text="
b1  b2   b3  b4  b5
a1    0  15   25  15   0
a2    5  20    5  20   5
a3   20   5    5   5  20
")
( cmhdemo1 <- as.matrix(cmhdemo1) )
# linear association
cmhdemo2 <- read.table(header=TRUE, sep="", text="
b1  b2   b3  b4  b5
a1    2   5    8   8   8
a2    2   8    8   8   5
a3    5   8    8   8   2
a4    8   8    8   5   2
")
( cmhdemo2 <- as.matrix(cmhdemo2) )
assocstats(cmhdemo1)
assocstats(cmhdemo2)
sieve(cmhdemo1, shade=TRUE, main="General association",
gp = shading_sieve(interpolate = 0, lty = c("solid", "longdash")))
sieve(cmhdemo2, shade=TRUE, main="Linear association",
gp = shading_sieve(interpolate = 0, lty = c("solid", "longdash")))
sieve(cmhdemo1, shade=TRUE, main="General association",
gp = shading_sieve(interpolate = 0, lty = c("solid", "longdash")))
sieve(cmhdemo2, shade=TRUE, main="Linear association",
gp = shading_sieve(interpolate = 0, lty = c("solid", "longdash")))
CMHtest(cmhdemo1)
CMHtest(cmhdemo2)
setwd("//media//kswada//MyFiles//R//fat")
packages <- c("dplyr", "vcd", "MASS", "datasets")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
fat <- matrix(c(6,4,2,11), 2, 2)
dimnames(fat) <- list(diet = c("LoChol", "HiChol"), disease = c("No", "Yes"))
fat
chisq.test(fat)
sieve(fat, shade = TRUE)
fourfold(fat, margin = 1)
fourfold(fat, margin = 2)
fourfold(fat, margin = 1)
fourfold(fat, margin = 2)
fourfold(fat)
fourfold(fat, margin = 1)
fourfold(fat, margin = 2)
fourfold(fat)
oddsratio(fat, log=FALSE)
fisher.test(fat)
setwd("//media//kswada//MyFiles//R//abortion")
packages <- c("dplyr", "vcd", "MASS", "vcdExtra")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
# ------------------------------------------------------------------------------
# data:  Abortion
#  - created below, gives a 2 * 2 table recording the level of cholesterol in diet and the presence of symptoms of heart desease for a sample of 23 people.
# ------------------------------------------------------------------------------
data("Abortion", package = "vcdExtra")
data <- Abortion
str(data)
data
cotabplot(data, cond="Support_Abortion", panel = cotab_sieve, shade = TRUE)
fourfold(fat, std = "ind.max")
fourfold(data)
dat <- aperm(data, c(1,3,2))
dat
cotabplot(data, cond="Status", panel = cotab_sieve, shade = TRUE)
fourfold(data)
cotabplot(dat, cond="Status", panel = cotab_sieve, shade = TRUE)
cotabplot(data, cond="Sex", panel = cotab_sieve, shade = TRUE)
fourfold(data)
fourfold(dat)
dat
fourfold(dat)
aperm(data, c(2,3,1))
fourfold(aperm(data, c(2,3,1)))
fourfold(dat)
oddsratio(aperm(dat), log=FALSE)
oddsratio(dat, log=FALSE)
confint(oddsratio(dat, log=FALSE))
oddsratio(dat, log=FALSE)
confint(oddsratio(dat, log=FALSE))
oddsratio(aperm(data,c(2,3,1)), log=FALSE)
confint(oddsratio(aperm(data,c(2,3,1)), log=FALSE))
data <- matrix(c(1, 2, 1, 0, 3, 3, 6, 1, 10, 10, 14, 9, 6, 7, 12, 11), nrow = 4, ncol = 4)
data
data <- matrix(c(1, 2, 1, 0, 3, 3, 6, 1, 10, 10, 14, 9, 6, 7, 12, 11), nrow = 4, ncol = 4)
data
dimnames(data) <- list(income = c("< 15k", "15-25k", "25-40k", "> 40k"), satisfaction = c("VeryD", "LittleD", "ModerateS", "VeryS"))
data <- as.table(data)
data
chisq.test(data)
sieve(data, shade=TRUE)
chisq.test(data)
data
chisq.test(data, simulate.p.value = TRUE)
chisq.test(data)
chisq.test(data, simulate.p.value = TRUE)
CMHtest(data)
help("CMHtest")
assocrats(data)
assocstats(data)
assocstats(data)
data("Hospital", package = "vcd")
data <- Hospital
data
sieve(data, shade=TRUE)
assocstats(data)
chisq.test(data)
chisq.test(data, simulate.p.value = TRUE)
assocstats(data)
data
assoc(~ Visit frequency, data = data, shade = TRUE)
assoc(data = data, shade = TRUE)
assoc(data = data, shade = TRUE)
assoc(~ "Visit frequency", data = data, shade = TRUE)
assoc(~ Visit frequency, data = data, shade = TRUE)
dimnames(data) <- c("VisitFrequency", "LengthOfStay")
dimnames(data) <- list("VisitFrequency", "LengthOfStay")
dimnames(data) <- list(c("VisitFrequency"), c("LengthOfStay"))
help(dimnames)
dimnames(data)
dimnames(data) <- list(VisitFrequency=c("Regular", "Less Than Monthly", "Never"), LenghOfStay = c("2-9", "10-19", "20+"))
data
assoc(~ VisitFrequency, data = data, shade = TRUE)
assoc(~ VisitFrequency + LengthOfStay, data = data, shade = TRUE)
dimnames(data) <- list(VisitFrequency=c("Regular", "Less Than Monthly", "Never"), LengthOfStay = c("2-9", "10-19", "20+"))
assoc(~ VisitFrequency + LengthOfStay, data = data, shade = TRUE)
CMHtest(data)
sieve(data, shade=TRUE)
data
plot(data)
tile(data)
spineplot(data)
mosaic(data)
spineplot(data)
spineplot(data, shade=TRUE)
tile(data, shade=TRUE)
plot(data, shade=TRUE)
mosaic(data, shade=TRUE)
plot(data, shade=TRUE)
tile(data, shade=TRUE)
plot(data, shade=TRUE)
tile(data, shade=TRUE)
plot(data, shade=TRUE)
mosaic(data, shade=TRUE)
# ------------------------------------------------------------------------------
# data:  Mammogram ratings
# ------------------------------------------------------------------------------
data("Mammograms", package = "vcdExtra")
data <- Mammograms
data
# ----------
sieve(data, shade=TRUE)
Kappa(data)
Kappa(data, weights = "Fleiss-Cohen")
assocstats(data)
data <- matrix(c(24, 8, 13, 8, 13, 11, 10, 9, 64), nrow=3, ncol=3)
dimnames(data) <- list(Siskel = c("Con", "Mixed", "Pro"), Ebert = c("Con", "Mixed", "Pro"))
data
plot(data, shade=TRUE)
data <- as.table(data)
data
data <- matrix(c(24, 8, 13, 8, 13, 11, 10, 9, 64), nrow=3, ncol=3)
data <- as.table(data)
dimnames(data) <- list(Siskel = c("Con", "Mixed", "Pro"), Ebert = c("Con", "Mixed", "Pro"))
data
plot(data, shade=TRUE)
sieve(data, shade=TRUE)
Kappa(data)
Kappa(data, weights = "Fleiss-Cohen")
confint(Kappa(data, weights = "Fleiss-Cohen"))
Kappa(data, weights = "Fleiss-Cohen")
assocstats(data)
agreementplot(data, main = "Unweighted", weights = 1)
agreementplot(data, main = "weighted")
B <- agreementplot(data)
unlist(B)[1:2]
agreementplot(data, main = "Unweighted", weights = 1)
agreementplot(data, main = "weighted")
help(macnemar.test)
help(mcnemar.test)
mcnemar.test(data)
setwd("//media//kswada//MyFiles//R//visual_acuity")
packages <- c("dplyr", "vcd", "MASS", "vcdExtra")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
# ------------------------------------------------------------------------------
# data:  Visual Acuity
# ------------------------------------------------------------------------------
data("VisualAcuity", package = "vcd")
data <- VisualAcuity
car::some(data)
# Convert frequency data frame to table form
dat <- xtabs(Freq ~ right + left + gender, data = VisualAcuity)
dimnames(dat)[1:2] <- list(c("high", 2, 3, "low"))
names(dimnames(dat))[1:2] <- paste(c("Right", "Left"), "eye grade")
dat
structable(aperm(dat))
dat
sieve(data, shade=TRUE)
sieve(dat, shade=TRUE)
assocstats(dat)
chisq.test(dat[,"male"])
dat
chisq.test(dat[,,"male"])
CMHtest(dat[,,"male"])
CMHtest(dat)
CMHtest(dat[,,"female"])
CMHtest(dat)
plot(data, shade=TRUE)
tile(data, shade=TRUE)
spineplot(data)
woolf_test(dat)
setwd("//media//kswada//MyFiles//R//visual_acuity")
packages <- c("dplyr", "vcd", "MASS", "vcdExtra")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
# ------------------------------------------------------------------------------
# data:  Visual Acuity
# ------------------------------------------------------------------------------
data("VisualAcuity", package = "vcd")
data <- VisualAcuity
car::some(data)
# Convert frequency data frame to table form
dat <- xtabs(Freq ~ right + left + gender, data = VisualAcuity)
dimnames(dat)[1:2] <- list(c("high", 2, 3, "low"))
names(dimnames(dat))[1:2] <- paste(c("Right", "Left"), "eye grade")
dat
structable(aperm(dat))
data
woolf_test(data)
dat
woolf_test(dat)
dat
woolf_test(dat)
setwd("//media//kswada//MyFiles//R//titanic_lifeboats")
packages <- c("dplyr", "vcd", "MASS", "ggtern")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
# ------------------------------------------------------------------------------
# data:  Lifeboats on the Titanic
# ------------------------------------------------------------------------------
data("Lifeboats", package = "vcd")
data <- Lifeboats
car::some(data)
# ----------
# Label boats with more than 10% men
data$id <- ifelse(data$men / data$total > 0.1, as.character(data$boat), "")
data$pctloaded <- data$total / data$cap
data$pctloaded
ggplot(data = data, aes(x=launch, y=pctloaded, colour=side,  label=boat)) + geom_smooth(method="lm", aes(fill=side), size=1.5) +
geom_smooth(method="loess", aes(fill=side), se=FALSE, size=1.2) + geom_point() + ylim(c(0,100)) +
geom_text(vjust=-.5, color="black") + labs(y="Total loaded", x="Launch time")
data$launch <- as.POSIXct(data$launch)
ggplot(data = data, aes(x=launch, y=total, colour=side,  label=boat)) + geom_smooth(method="lm", aes(fill=side), size=1.5) +
geom_smooth(method="loess", aes(fill=side), se=FALSE, size=1.2) + geom_point() + ylim(c(0,100)) +
geom_text(vjust=-.5, color="black") + labs(y="Total loaded", x="Launch time")
ggplot(data = data, aes(x=launch, y=pctloaded, colour=side,  label=boat)) + geom_smooth(method="lm", aes(fill=side), size=1.5) +
geom_smooth(method="loess", aes(fill=side), se=FALSE, size=1.2) + geom_point() + ylim(c(0,100)) +
geom_text(vjust=-.5, color="black") + labs(y="Total loaded", x="Launch time")
ggplot(data = data, aes(x=launch, y=pctloaded, colour=side,  label=boat)) + geom_smooth(method="lm", aes(fill=side), size=1.5) +
geom_smooth(method="loess", aes(fill=side), se=FALSE, size=1.2) + geom_point() + ylim(c(0,1)) +
geom_text(vjust=-.5, color="black") + labs(y="Total loaded", x="Launch time")
ggplot(data = data, aes(x=launch, y=total, colour=side,  label=boat)) + geom_smooth(method="lm", aes(fill=side), size=1.5) +
geom_smooth(method="loess", aes(fill=side), se=FALSE, size=1.2) + geom_point() + ylim(c(0,100)) +
geom_text(vjust=-.5, color="black") + labs(y="Total loaded", x="Launch time")
ggplot(data = data, aes(x=launch, y=pctloaded, colour=side,  label=boat)) + geom_smooth(method="lm", aes(fill=side), size=1.5) +
geom_smooth(method="loess", aes(fill=side), se=FALSE, size=1.2) + geom_point() + ylim(c(0,1)) +
geom_text(vjust=-.5, color="black") + labs(y="Total loaded", x="Launch time")
data("HairEyeColor", package = "datasets")
dim(HairEyeColor)
str(HairEyeColor)
dimnames(HairEyeColor)
data <- HairEyeColor
data
( hec <- margin.table(data, 2:1) )
( hec2 <- margin.table(data, 1:2) )
graphics.off();  par(mfrow=c(1,1));
barplot(hec, beside = TRUE, legend = TRUE)
vcd::tile(hec)
graphics.off();  par(mfrow=c(1,1));
barplot(hec, beside = TRUE, legend = TRUE)
vcd::tile(hec)
( hec <- margin.table(data, 2:1) )
barplot(hec, beside = TRUE, legend = TRUE)
vcd::tile(hec)
vcd::tile(hec, shade=TRUE)
spineplot(hec)
spineplot(hec2)
spineplot(hec)
haireye <- margin.table(data, 1:2)
expected <- vcd::independence_table(haireye)
expected
round(expected, 1)
vcd::sieve(haireye, sievetype = "expected", shade = TRUE, main="Expected frequencies", labeling = labeling_values, value_type = "expected",
gp_text = gpar(fontface = 2), gp = shading_sieve(interpolate = 0, line_col="darkgrey",eps=Inf,lty="dashed"))
vcd::sieve(haireye, shade = TRUE, main="Observed frequencies", labeling = labeling_values, value_type = "observed",
gp_text = gpar(fontface = 2))
vcd::sieve(haireye, shade = TRUE, main="Observed frequencies", labeling = labeling_values, value_type = "observed",
gp_text = gpar(fontface = 2))
setwd("//media//kswada//MyFiles//R//haireye_color")
packages <- c("dplyr", "datasets", "vcd", "vcdExtra", "MASS")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
# ------------------------------------------------------------------------------
# data:  HairEyeColor
# ------------------------------------------------------------------------------
data("HairEyeColor", package = "datasets")
data <- data
data
assoc(~ Hair + Eye, data = data, shade = TRUE)
assoc(data, shade = TRUE)
