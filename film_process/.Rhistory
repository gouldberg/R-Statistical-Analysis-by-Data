fUnitRoots::adfTest(data[,1], lags = 3, type = "c")
fUnitRoots::adfTest(data[,2], lags = 3, type = "c")
pacf(data[,1])
pacf(data[,2])
fUnitRoots::adfTest(data[,1], lags = 3, type = "c")
fUnitRoots::adfTest(data[,2], lags = 2, type = "c")
setwd("C:\\Users\\kswad\\OneDrive\\デスクトップ\\技術力強化_統計解析\\51_解析スクリプト\\z_for_demo_uncompleted\\q_ungdp_4812")
packages <- c("dplyr", "astsa", "tseries", "forecast", "MTS")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
data <- read.table("q_ungdp_4812.txt", header = FALSE, sep = "")
str(data)
setwd("C:\\Users\\kswad\\OneDrive\\デスクトップ\\技術力強化_統計解析\\51_解析スクリプト\\z_for_demo_uncompleted\\q_ungdp_4812")
packages <- c("dplyr", "astsa", "tseries", "forecast", "MTS")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
data <- read.table("q_ungdp_4812.txt", header = FALSE, sep = "")
data <- read.table("q-ungdp-4812.txt", header = FALSE, sep = "")
str(data)
car::some(data)
data <- read.table("q-ungdp-4812.txt", header = FALSE, sep = "")
str(data)
car::some(data)
data <- read.table("q-ungdp-4812.txt", header = TRUE, sep = "")
str(data)
car::some(data)
graphics.off()
MTSplot(data)
apply(data[,c("unemp","gdp")], 2, ndiffs)
m1 <- ar(diff(data$gdp), method = "mle")
m1
m1$order
( m1 <- ar(diff(data$gdp), method = "mle") )
m1$order
pacf(data$gdp)
pacf(diff(data$gdp))
acf2(diff(data$gdp))
pacf(diff(data$gdp))
astsa::acf2(diff(data$gdp))
sarima(diff(data$gdp), p = 3, d = 0, q = 0)
sarima(diff(data$gdp), p = 1, d = 0, q = 0)
sarima(diff(data$gdp), p = 3, d = 0, q = 0)
astsa::acf2(diff(data$gdp))
( m1 <- ar(diff(data$gdp), method = "mle") )
m1$order
fUnitRoots::adfTest(data$gdp, lags = 3, type = "c")
fUnitRoots::adfTest(data$gdp, lags = 3, type = "nc")
fUnitRoots::adfTest(data$gdp, lags = 3, type = "nc")
fUnitRoots::adfTest(data[,2], lags = 2, type = "c")
fUnitRoots::adfTest(data[,2], lags = 2, type = "ct")
fUnitRoots::adfTest(data[,2], lags = 2, type = "c")
fUnitRoots::adfTest(data$gdp, lags = 3, type = "c")
fUnitRoots::adfTest(data$gdp, lags = 3, type = "ct")
urca::urppTest(gdp)
library(urca)
urca::urppTest(gdp)
urppTest(gdp)
help(urppTest)
funitRoots::urppTest(gdp)
fUnitRoots::urppTest(gdp)
fUnitRoots::urppTest(gdp)
help(urca)
help(urppTest)
fUnitRoots::urppTest(data$gdp)
( tst <- fUnitRoots::urppTest(data$gdp) )
tst
names(tst)
fUnitRoots::urppTest(data$gdp)
helP(urppTest)
help(urppTest)
fUnitRoots::urppTest(data$gdp, type = "Z-alpha")
library(urca)
fUnitRoots::urppTest(data$gdp, type = "Z-alpha")
help(urca)
??`urca-class`
fUnitRoots::urppTest(data$gdp, type = "Z-alpha")
help(urppTest)
fUnitRoots::urppTest(data$gdp, type = "Z-alpha")
fUnitRoots::adfTest(data[,1], lags = 3, type = "c")
fUnitRoots::adfTest(data[,2], lags = 2, type = "c")
setwd("C:\\Users\\kswad\\OneDrive\\デスクトップ\\技術力強化_統計解析\\51_解析スクリプト\\z_for_demo_uncompleted\\m_bnd")
packages <- c("dplyr", "astsa", "tseries", "forecast", "MTS")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
# ------------------------------------------------------------------------------
# data:  m_bnd
# ------------------------------------------------------------------------------
data <- read.table("m-bnd.txt", header = FALSE, sep = "")
str(data)
car::some(data)
# ----------
data <- data[,c(4:5)]
colnames(data) <- c("Aaa", "Baa")
# ------------------------------------------------------------------------------
# Test for unit root test by Augmented Dickey-Fuller Test
# ------------------------------------------------------------------------------
library(forecast)
apply(data, 2, ndiffs)
# ----------
# Assuming that the bivariate series of bond yields follows a VAR model,
# we applied the information criteria to specify the order.
# select VAR order
m1 <- MTS::VARorder(data)
# -->
# p = 3 is selected by both BIC and HQ.
# ----------
pacf(data[,1])
pacf(data[,2])
# -->
# AR order for Aaa = 3
# AR order for Baa = 2
# ----------
library(fUnitRoots)
library(urca)
# lags = 3:  maximum number of lags used for error term correction = 3
# type = "nc" for a regression with no intercept (constant) nor time trend
# type = "c":  regression with an intercept (constant) but no time trend
# type = "ct":  regression with an intercept (constant) and a time trend
fUnitRoots::adfTest(data[,1], lags = 3, type = "c")
fUnitRoots::adfTest(data[,2], lags = 2, type = "c")
fUnitRoots::adfTest(data[,1], lags = 3, type = "c")
fUnitRoots::adfTest(data[,2], lags = 2, type = "c")
astsa::acf2(diff(data$Aaa))
sarima(diff(data$Aaa), p = 2, d = 0, q = 0)
sarima(diff(data$Aaa), p = 3, d = 0, q = 0)
sarima(data$Aaa, p = 3, d = 0, q = 0)
astsa::acf2(data$Aaa)
astsa::acf2(diff(data$Aaa))
sarima(data$Aaa, p = 2, d = 0, q = 3)
sarima(data$Aaa, p = 2, d = 0, q = 1)
astsa::acf2(diff(data$Aaa))
sarima(data$Aaa, p = 2, d = 1, q = 1)
astsa::acf2(diff(data$Aaa))
sarima(data$Aaa, p = 2, d = 1, q = 3)
( m1 <- ar(diff(data$Aaa), method = "mle") )
m1$order
( m1 <- ar(diff(data$gdp), method = "mle") )
m1$order
( m1 <- ar(diff(data$Aaa), method = "mle") )
m1$order
astsa::acf2(diff(data$Aaa))
sarima(data$Aaa, p = 12, d = 1, q = 0)
sarima(data$Aaa, p = 12, d = 1, q = 2)
sarima(data$Aaa, p = 12, d = 1, q = 1)
apply(data, 2, ndiffs)
m1 <- MTS::VARorder(data)
pacf(data[,1])
pacf(data[,2])
library(fUnitRoots)
# lags = 3:  maximum number of lags used for error term correction = 3
# type = "nc" for a regression with no intercept (constant) nor time trend
# type = "c":  regression with an intercept (constant) but no time trend
# type = "ct":  regression with an intercept (constant) and a time trend
fUnitRoots::adfTest(data[,1], lags = 3, type = "c")
fUnitRoots::adfTest(data[,2], lags = 2, type = "c")
m2 <- ca.jo(data, K = 2, ecdet = c("non"))
help(ca.jo)
m2 <- ca.jo(data, K = 2, ecdet = c("none"))
summary(m2)
m3 <- ca.jo(data, K = 2, ecdet = c("none"), sepc = "transitory")
summary(m3)
m3 <- ca.jo(data, K = 2, ecdet = c("none"), spec = "transitory")
summary(m3)
m4 <- ca.jo(data, K = 2, ecdet = c("none"), type = "trace", spec = "transitory")
summary(m4)
wt <- data[,1] - 0.886 * data[,2]
fUnitRoots::adfTest(wt, lags = 3, type = "c")
wt <- data[,1] - 0.886 * data[,2]
# ----------
fUnitRoots::adfTest(wt, lags = 3, type = "c")
help(ca.po)
m1 <- MTS::ECMvar1(data, 3, wt)
summary(m1)
m2 <- MTS::refECMvar1(m1)
m3 <- MTS::ECMvar(data, 3, beta, include.const = F)
data
m3 <- MTS::ECMvar(data, 3, beta, include.const = F)
help(ECMvar)
m3 <- MTS::ECMvar(data, p = 3, include.const = F)
m3 <- MTS::ECMvar(data, p = 3, ibeta = 2, include.const = F)
m3 <- MTS::ECMvar(data, p = 3, ibeta = 1, include.const = F)
m3 <- MTS::ECMvar(data, p = 3, ibeta = m1, include.const = F)
m3 <- MTS::ECMvar(data, p = 3, ibeta = m2, include.const = F)
m3 <- MTS::ECMvar(data, p = 3, ibeta = data$Aaa, include.const = F)
m2
names(m2)
m2$coef
m2
summary(m2)
m2
m2$coef
beta <- m2$coef
m3 <- MTS::ECMvar(data, p = 3, ibeta = beta, include.const = F)
beta <- m2$coef[2:3,1:2]
beta
( beta <- m2$coef[2:3,1:2] )
m3 <- MTS::ECMvar(data, p = 3, ibeta = beta, include.const = F)
( beta <- t(m2$coef[2:3,1:2]) )
m3 <- MTS::ECMvar(data, p = 3, ibeta = beta, include.const = F)
( beta <- c(1, -0.886) )
m3 <- MTS::ECMvar(data, p = 3, ibeta = beta, include.const = F)
m1 <- MTS::ECMvar1(data, 3, wt)
m2 <- MTS::refECMvar1(m1)
apply(data, 2, ndiffs)
astsa::acf2(diff(data$Aaa))
sarima(diff(data$Aaa), p = 2, d = 1, q = 2)
( m1 <- ar(diff(data$Aaa), method = "mle") )
m1$order
( m1 <- ar(data$Aaa, method = "mle") )
fUnitRoots::adfTest(diff(data$Aaa), lags = 12, type = "nc")
fUnitRoots::adfTest(diff(data$Aaa), lags = 12, type = "c")
fUnitRoots::adfTest(diff(data$Aaa), lags = 12, type = "ct")
plot(diff(data$Aaa))
plot(diff(data$Aaa),type = "l")
help(adfTest)
MTSplot(data)
data <- read.table("q-ungdp-4812.txt", header = TRUE, sep = "")
str(data)
car::some(data)
# ------------------------------------------------------------------------------
# data exploration:  multivariate time series plot
# ------------------------------------------------------------------------------
graphics.off()
MTSplot(data)
setwd("C:\\Users\\kswad\\OneDrive\\デスクトップ\\技術力強化_統計解析\\51_解析スクリプト\\z_for_demo_uncompleted\\q_ungdp_4812")
packages <- c("dplyr", "astsa", "tseries", "forecast", "MTS")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
# ------------------------------------------------------------------------------
# data:  q_ungdp_4812
# ------------------------------------------------------------------------------
data <- read.table("q-ungdp-4812.txt", header = TRUE, sep = "")
str(data)
car::some(data)
# ------------------------------------------------------------------------------
# data exploration:  multivariate time series plot
# ------------------------------------------------------------------------------
graphics.off()
MTSplot(data)
MTSplot(data[,4])
MTSplot(data[,4], type = "b")
plot(data[,4], type = "b")
plot(data[,4])
plot(data[,4], type = "l")
plot(data[,4], type = "l", ylab = "")
setwd("C:\\Users\\kswad\\OneDrive\\デスクトップ\\技術力強化_統計解析\\51_解析スクリプト\\00_basics\\10_time_series_basics")
packages <- c("dplyr", "astsa", "tseries", "forecast", "MTS")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
# ------------------------------------------------------------------------------
# read data
# ------------------------------------------------------------------------------
hakusan <- as.ts(read.csv(".\\data\\HAKUSAN.txt", header = T, sep = "\t"))
sunspot <- as.ts(read.csv(".\\data\\Sunspot.txt", header = T, sep = "\t"))
maxtemp <- as.ts(read.csv(".\\data\\maxtemp.txt", header = T, sep = "\t"))
blsfood <- as.ts(read.csv(".\\data\\BLSALLFOOD.txt", header = T, sep = "\t"))
whard <- as.ts(read.csv(".\\data\\WHARD.txt", header = T, sep = "\t"))
nikkei225 <- as.ts(read.csv(".\\data\\nikkei225.txt", header = T, sep = "\t"))
mye1f <- as.ts(read.csv(".\\data\\MYE1F.txt", header = T, sep = "\t"))
haibara <- as.ts(read.csv(".\\data\\haibara.txt", header = T, sep = "\t"))
linx <- as.ts(read.csv(".\\data\\Lynx.txt", header = T, sep = "\t"))
temperature <- as.ts(read.csv(".\\data\\Temperature.txt", header = T, sep = "\t"))
# average in 2 years
rainfall <- as.ts(read.csv(".\\data\\rainfall.txt", header = T, sep = "\t") / 2)
# ----------
head(hakusan)
head(sunspot)
head(maxtemp)
head(blsfood)
head(whard)
head(nikkei225)
head(mye1f)
head(haibara)
head(linx)
head(temperature)
head(rainfall)
# ------------------------------------------------------------------------------
# plot all data:  various characteristics
# ------------------------------------------------------------------------------
graphics.off()
par(mfcol = c(2,3))
# stationary, periodic
plot(hakusan[,"YawRate"], main = "船舶の方向角速度", ylab = "")
# positive, asymmetric (upper, lower, right, left), Periodic
plot(sunspot, main = "太陽黒点数データ", ylab = "")
# trend (long-term Periodic),  stationary around trend
plot(maxtemp, main = "東京の日最高気温データ", ylab = "")
# yearly periodic, trend
plot(blsfood, main = "アメリカの食品産業に従事する労働者人口", ylab = "")
# yearly periodic, positive, trend + variance increasing
plot(whard, main = "工業製品の卸売り高", ylab = "")
# No trend, variance non-stationary, covariance non-stationary, locally stationary
plot(mye1f, main = " 地震データ(東西方向)", ylab = "")
# ----------
# trend, variance change, increasing in down trending
plot(nikkei225, main = "日経225", ylab = "")
# mean stationary, periodic, asymmetric (left, right)
plot(linx, main = "カナダオオヤマネコ生息数", ylab = "")
# discrete, mean probability non-stationary
plot(rainfall, main = "東京降水量データ", ylab = "")
# ----------
# multi-variate, negative cross-correlation, outliers, missing values
plot(haibara[,c("地下水位", "気圧")], main = "榛原地下水位データ")
# ----------
# multi-variate
# Input:  Rudder
# Output: Rolling and Pitching
plot(hakusan[,c("Rolling", "Pitching", "Rudder")], main = "船舶データ 縦揺れ 横揺れ 舵角")
# ------------------------------------------------------------------------------
# Data Transformation for WHARD
# ------------------------------------------------------------------------------
graphics.off()
par(mfcol = c(3,2))
# ----------
plot(whard, main = "original WHARD")
plot(log(whard), main = "log")
plot(diff(log(whard)), main = "log and diff")
# ----------
plot(whard, main = "original WHARD")
plot(diff(log(whard)), main = "log and diff")
plot(diff(log(whard), 12), main = "log and diff12 (seasonalily removed)")
# ----------
plot(whard, main = "original WHARD")
plot(whard / stats::lag(whard, -1), main = "ratio to previous")
plot(whard / stats::lag(whard, -12), main = "ratio to previous year")
# ------------------------------------------------------------------------------
# Data Transformation for nikkei225
# ------------------------------------------------------------------------------
graphics.off()
par(mfcol = c(3,1))
plot(nikkei225, main = "original nikkei225")
plot(log(nikkei225), main = "log")
plot(diff(log(nikkei225)), main = "log and diff")
astsa::acf2(diff(nikkei225))
( m1 <- ar(diff(nikkei225), method = "mle") )
m1$order
nikkei225
head(nikkei225)
( m1 <- ar(diff(nikkei225$nikkei225), method = "mle") )
diff(nikkei225)
( m1 <- ar(diff(nikkei225), method = "mle") )
( m1 <- ar(diff(c(nikkei225)), method = "mle") )
m1$order
fUnitRoots::adfTest(diff(nikkei225)), lags = 10, type = "nc")
fUnitRoots::adfTest(diff(nikkei225), lags = 10, type = "nc")
fUnitRoots::adfTest(diff(nikkei225), lags = 10, type = "c")
fUnitRoots::adfTest(diff(nikkei225), lags = 10, type = "ct")
( m1 <- ar(c(nikkei225), method = "mle") )
m1$order
fUnitRoots::adfTest(nikkei225, lags = 11, type = "nc")
fUnitRoots::adfTest(nikkei225, lags = 11, type = "c")
fUnitRoots::adfTest(nikkei225, lags = 11, type = "ct")
fUnitRoots::adfTest(nikkei225, lags = 11, type = "nc")
fUnitRoots::adfTest(nikkei225, lags = 11, type = "c")
fUnitRoots::adfTest(nikkei225, lags = 11, type = "ct")
( m1 <- ar(c(nikkei225), method = "mle") )
sarima(nikkei225, p = 11, d = 0, q = 0)
sarima(nikkei225, p = 3, d = 0, q = 0)
acf2(nikkei225)
fUnitRoots::adfTest(nikkei225, lags = 11, type = "c")
fUnitRoots::adfTest(nikkei225, lags = 11, type = "ct")
fUnitRoots::adfTest(nikkei225[1:500], lags = 11, type = "nc")
( m1 <- ar(c(nikkei225[1:500]), method = "mle") )
m1$order
( m1 <- ar(c(nikkei225)[1:500], method = "mle") )
c(nikkei225)[1:500]
plot(nikkei225[1:500], type = "l")
( m1 <- ar(c(nikkei225)[1:500], method = "mle") )
fUnitRoots::adfTest(nikkei225[1:500], lags = 3, type = "nc")
fUnitRoots::adfTest(nikkei225[1:500], lags = 3, type = "c")
fUnitRoots::adfTest(nikkei225[1:500], lags = 3, type = "ct")
setwd("C:\\Users\\kswad\\OneDrive\\デスクトップ\\技術力強化_統計解析\\51_解析スクリプト\\z_for_demo_uncompleted\\film_process")
packages <- c("dplyr", "astsa", "tseries", "forecast", "MTS")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
# ------------------------------------------------------------------------------
# data:  Film Extrusion Process
# ------------------------------------------------------------------------------
film <- read.table("FilmProcess.txt", sep = "", header = F, colClasses = "numeric")
head(film)
# ----------
hc <- film$V1
vp <- film$V2
prs <- film$V3
wid <- film$V4
# ------------------------------------------------------------------------------
# Lagged regression
# ------------------------------------------------------------------------------
summary(fit_var)
hc <- ts(hc)
vp <- ts(vp)
prs <- ts(prs)
prs_m2 <- ts.intersect(prs = stats::lag(prs, 0),
prs1 = stats::lag(prs, -1), hc1 = stats::lag(hc, -1), vp1 = stats::lag(vp, -1),
prs2 = stats::lag(prs, -2), hc2 = stats::lag(hc, -2), vp2 = stats::lag(vp, -2),
trend = time(prs), prs10 = stats::lag(prs, -10), dframe = TRUE)
( u <- lm(prs ~ prs1 + prs2 + hc1 + hc2 + vp1 + vp2 + trend, data = prs_m2) )
( u <- lm(prs ~ prs1 + prs2 + hc2 + vp1 + vp2 + trend, data = prs_m2) )
( u <- lm(prs ~ prs1 + prs2 + vp1 + vp2 + trend, data = prs_m2) )
summary(u)
# ----------
acf2(resid(u))
setwd("C:\\Users\\kswad\\OneDrive\\デスクトップ\\技術力強化_統計解析\\51_解析スクリプト\\film_process")
packages <- c("dplyr", "astsa", "tseries", "forecast", "MTS")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
# ------------------------------------------------------------------------------
# data:  Film Extrusion Process
# ------------------------------------------------------------------------------
film <- read.table("FilmProcess.txt", sep = "", header = F, colClasses = "numeric")
head(film)
# ----------
hc <- film$V1
vp <- film$V2
prs <- film$V3
wid <- film$V4
summary(fit_var)
hc <- ts(hc)
vp <- ts(vp)
prs <- ts(prs)
prs_m2 <- ts.intersect(prs = stats::lag(prs, 0),
prs1 = stats::lag(prs, -1), hc1 = stats::lag(hc, -1), vp1 = stats::lag(vp, -1),
prs2 = stats::lag(prs, -2), hc2 = stats::lag(hc, -2), vp2 = stats::lag(vp, -2),
trend = time(prs), prs10 = stats::lag(prs, -10), dframe = TRUE)
( u <- lm(prs ~ prs1 + prs2 + hc1 + hc2 + vp1 + vp2 + trend, data = prs_m2) )
( u <- lm(prs ~ prs1 + prs2 + hc2 + vp1 + vp2 + trend, data = prs_m2) )
( u <- lm(prs ~ prs1 + prs2 + vp1 + vp2 + trend, data = prs_m2) )
summary(u)
acf2(resid(u))
# ----------
# add prs10 to remove partial auto-correlation at lag 10
( u <- lm(prs ~ prs1 + prs2 + hc2 + hc2 + vp1 + vp2 + trend + prs10, data = prs_m2) )
acf2(resid(u))
pred_lagr <- predict(u)
par(mfrow = c(1,1))
plot(pred_lagr, type = "l", ylab = "Extrusion Process: Pressure", lwd = 2, col = 4)
points(prs[11:351])
mod_itoo <- astsa::LagReg(input = hc, output = prs, L = 15, M = 40, threshold = 0.02)
mod_otoi <- astsa::LagReg(input = prs, output = hc, L = 15, M = 40, inverse = TRUE,  threshold = 0.02)
input <- ts(hc)
output <- ts(prs)
prs_m <- ts.intersect(prs = output,
hc1 = stats::lag(hc, 1),
hc6 = stats::lag(hc, 6),
hc7 = stats::lag(hc, 7),
hc8 = stats::lag(hc, 8), dframe = TRUE)
( u <- lm(prs ~ hc1 + hc6 + hc7 + hc8, data = prs_m) )
( u <- lm(prs ~ hc1, data = prs_m) )
summary(u)
# -->
# it seems not good fit
plot(varve)
plot(log(varve))
plot(diff(log(varve)))
plot(diff(log(varve)))
plot(varve)
plot(log(varve))
plot(log(varve))
plot(diff(log(varve)))
nbdiffs(log(varve))
ndiffs(log(varve))
acf2(log(varve))
acf2(log(varve), max.lag = 100)
acf2(varve, max.lag = 100)
temp <- tempr - mean(tempr)
temp2 <- temp ^ 2
trend <- time(cmort)
part7 <- stats::lag(part.pw, -7)
# ----------
dat2 <- ts.intersect(cmort.fil, trend, temp, temp2, part7, part.pw)
head(dat2)
# ------------------------------------------------------------------------------
# Regression with lagged variables with align lagged series
# ------------------------------------------------------------------------------
fit7 <- lm(cmort.fil ~ trend + temp + temp2 + part7 + part.pw, data = dat2)
# ----------
summary(fit7)
summary(fit5)
# -->
# fit7 is worse than fit5 in terms of Multiple R-squared
car::residualPlots(fit7)
data(cmort, package = "astsa")
data(tempr, package = "astsa")
data(part, package = "astsa")
str(cmort)
str(tempr)
str(part)
cmort
tempr
part
# ------------------------------------------------------------------------------
# Regression with lagged variables with align lagged series
#   - preparation
# ------------------------------------------------------------------------------
temp <- tempr - mean(tempr)
temp2 <- temp ^ 2
trend <- time(cmort)
part7 <- stats::lag(part.pw, -7)
# ----------
dat2 <- ts.intersect(cmort.fil, trend, temp, temp2, part7, part.pw)
head(dat2)
# ------------------------------------------------------------------------------
# Regression with lagged variables with align lagged series
# ------------------------------------------------------------------------------
fit7 <- lm(cmort.fil ~ trend + temp + temp2 + part7 + part.pw, data = dat2)
# ----------
summary(fit7)
summary(fit5)
# -->
# fit7 is worse than fit5 in terms of Multiple R-squared
car::residualPlots(fit7)
trend <- time(cmort) - mean(time(cmort))
# This model is different from previous model in that the mortality process is NOT detrended,
# but trend appears as an exogeneous variable
u <- ts.intersect(M = cmort, M1 = stats::lag(cmort, -1), M2 = stats::lag(cmort, -2),
T1 = stats::lag(tempr, -1), P = part, P4 = stats::lag(part, -4), trend)
# ----------
sarima(u[,1], 0, 0, 0, xreg = u[,2:7])
rm(list=ls())
