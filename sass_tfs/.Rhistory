balanceTable_asm <- rbind(balanceTable_asm, balanceTable_asm2)
balanceTable_asm
balanceTable_asm2 <- data.frame()
for(i in 1:length(col_fac)){
obj_col <- col_fac[i]
tmp0_p <- prop.table(table(tmp0[,obj_col])) %>% data.frame()
tmp1_p <- prop.table(table(tmp1[,obj_col])) %>% data.frame()
names(tmp0_p) <- c("Variable", "prop0")
names(tmp1_p) <- c("Variable", "prop1")
tmp_df <- data.frame(Variable = unique(c(as.character(tmp0_p$Variable), as.character(tmp1_p$Variable))))
tmp_df <- tmp_df %>% left_join(., tmp0_p, by = "Variable") %>% left_join(., tmp1_p, by = "Variable")
tmp_df <- tmp_df %>% mutate(ASM = round(abs(prop1 - prop0), 3)) %>% dplyr::select(Variable, asm)
balanceTable_asm2 <- rbind(balanceTable_asm2, tmp_df)
}
i <- 1
obj_col <- col_fac[i]
tmp0_p <- prop.table(table(tmp0[,obj_col])) %>% data.frame()
tmp1_p <- prop.table(table(tmp1[,obj_col])) %>% data.frame()
names(tmp0_p) <- c("Variable", "prop0")
names(tmp1_p) <- c("Variable", "prop1")
tmp_df <- data.frame(Variable = unique(c(as.character(tmp0_p$Variable), as.character(tmp1_p$Variable))))
tmp_df <- tmp_df %>% left_join(., tmp0_p, by = "Variable") %>% left_join(., tmp1_p, by = "Variable")
tmp_df <- tmp_df %>% mutate(ASM = round(abs(prop1 - prop0), 3)) %>% dplyr::select(Variable, asm)
tmp_df
tmp_df <- tmp_df %>% mutate(ASM = round(abs(prop1 - prop0), 3)) %>% dplyr::select(Variable, asm)
balanceTable_asm2 <- data.frame()
for(i in 1:length(col_fac)){
obj_col <- col_fac[i]
tmp0_p <- prop.table(table(tmp0[,obj_col])) %>% data.frame()
tmp1_p <- prop.table(table(tmp1[,obj_col])) %>% data.frame()
names(tmp0_p) <- c("Variable", "prop0")
names(tmp1_p) <- c("Variable", "prop1")
tmp_df <- data.frame(Variable = unique(c(as.character(tmp0_p$Variable), as.character(tmp1_p$Variable))))
tmp_df <- tmp_df %>% left_join(., tmp0_p, by = "Variable") %>% left_join(., tmp1_p, by = "Variable")
tmp_df <- tmp_df %>% mutate(ASM = round(abs(prop1 - prop0), 3)) %>% dplyr::select(Variable, ASM)
balanceTable_asm2 <- rbind(balanceTable_asm2, tmp_df)
}
# ----------
balanceTable_asm <- rbind(balanceTable_asm, balanceTable_asm2)
balanceTable_asm
balanceTable_asm2 <- data.frame()
for(i in 1:length(col_fac)){
obj_col <- col_fac[i]
tmp0_p <- prop.table(table(tmp0[,obj_col])) %>% data.frame()
tmp1_p <- prop.table(table(tmp1[,obj_col])) %>% data.frame()
names(tmp0_p) <- c("Variable", "prop0")
names(tmp1_p) <- c("Variable", "prop1")
tmp_df <- data.frame(Variable = unique(c(as.character(tmp0_p$Variable), as.character(tmp1_p$Variable))))
tmp_df <- tmp_df %>% left_join(., tmp0_p, by = "Variable") %>% left_join(., tmp1_p, by = "Variable")
tmp_df <- tmp_df %>% mutate(ASM = round(abs(prop1 - prop0), 3))
tmp_df$ASM[is.na(tmp_df$ASM)] <- 0
tmp_df <- tmp_df %>% dplyr::select(Variable, ASM)
balanceTable_asm2 <- rbind(balanceTable_asm2, tmp_df)
}
# ----------
balanceTable_asm <- rbind(balanceTable_asm, balanceTable_asm2)
balanceTable_asm
covariateNames0 <- colnames(data)
covariateNames0 <- setdiff(covariateNames0, c("re78", "treat"))
col_type <- sapply(1:length(covariateNames0), function(x) class(data[,covariateNames0[x]]))
col_num <- covariateNames0[col_type %in% c("numeric", "integer")]
col_fac <- covariateNames0[col_type %in% c("character", "factor")]
# ----------
tmp0 <- data %>% filter(treat == 0)
tmp1 <- data %>% filter(treat == 1)
balanceTable_asm <- data.frame()
for(i in 1:length(col_num)){
obj_col <- col_num[i]
obj <- round(abs(mean(tmp1[,obj_col]) - mean(tmp0[,obj_col])) / sd(data[,obj_col]), 4)
balanceTable_asm <- rbind(balanceTable_asm, c(i, obj))
}
names(balanceTable_asm) <- c("Variable", "ASM")
balanceTable_asm$Variable <- col_num
# ----------
balanceTable_asm2 <- data.frame()
for(i in 1:length(col_fac)){
obj_col <- col_fac[i]
tmp0_p <- prop.table(table(tmp0[,obj_col])) %>% data.frame()
tmp1_p <- prop.table(table(tmp1[,obj_col])) %>% data.frame()
names(tmp0_p) <- c("Variable", "prop0")
names(tmp1_p) <- c("Variable", "prop1")
tmp_df <- data.frame(Variable = unique(c(as.character(tmp0_p$Variable), as.character(tmp1_p$Variable))))
tmp_df <- tmp_df %>% left_join(., tmp0_p, by = "Variable") %>% left_join(., tmp1_p, by = "Variable")
tmp_df <- tmp_df %>% mutate(ASM = round(abs(prop1 - prop0), 3))
tmp_df$ASM[is.na(tmp_df$ASM)] <- 0
tmp_df <- tmp_df %>% dplyr::select(Variable, ASM)
balanceTable_asm2 <- rbind(balanceTable_asm2, tmp_df)
}
# ----------
balanceTable_asm <- rbind(balanceTable_asm, balanceTable_asm2)
balanceTable_asm
i <- 1
obj_col <- col_fac[i]
tmp0_p <- prop.table(table(tmp0[,obj_col])) %>% data.frame()
tmp1_p <- prop.table(table(tmp1[,obj_col])) %>% data.frame()
names(tmp0_p) <- c("Variable", "prop0")
names(tmp1_p) <- c("Variable", "prop1")
tmp_df <- data.frame(Variable = unique(c(as.character(tmp0_p$Variable), as.character(tmp1_p$Variable))))
tmp_df <- tmp_df %>% left_join(., tmp0_p, by = "Variable") %>% left_join(., tmp1_p, by = "Variable")
tmp_df <- tmp_df %>% mutate(ASM = round(abs(prop1 - prop0), 3))
tmp_df
covariateNames0 <- colnames(data)
covariateNames0 <- setdiff(covariateNames0, c("re78", "treat"))
col_type <- sapply(1:length(covariateNames0), function(x) class(data[,covariateNames0[x]]))
col_num <- covariateNames0[col_type %in% c("numeric", "integer")]
col_fac <- covariateNames0[col_type %in% c("character", "factor")]
# ----------
tmp0 <- data %>% filter(treat == 0)
tmp1 <- data %>% filter(treat == 1)
balanceTable_asm <- data.frame()
for(i in 1:length(col_num)){
obj_col <- col_num[i]
obj <- round(abs(mean(tmp1[,obj_col]) - mean(tmp0[,obj_col])) / sd(data[,obj_col]), 4)
balanceTable_asm <- rbind(balanceTable_asm, c(i, obj))
}
names(balanceTable_asm) <- c("Variable", "ASM")
balanceTable_asm$Variable <- col_num
# ----------
balanceTable_asm2 <- data.frame()
for(i in 1:length(col_fac)){
obj_col <- col_fac[i]
tmp0_p <- prop.table(table(tmp0[,obj_col])) %>% data.frame()
tmp1_p <- prop.table(table(tmp1[,obj_col])) %>% data.frame()
names(tmp0_p) <- c("Variable", "prop0")
names(tmp1_p) <- c("Variable", "prop1")
tmp_df <- data.frame(Variable = unique(c(as.character(tmp0_p$Variable), as.character(tmp1_p$Variable))))
tmp_df <- tmp_df %>% left_join(., tmp0_p, by = "Variable") %>% left_join(., tmp1_p, by = "Variable")
tmp_df$prop0[is.na(tmp_df$prop0)] <- 0
tmp_df$prop1[is.na(tmp_df$prop1)] <- 0
tmp_df <- tmp_df %>% mutate(ASM = round(abs(prop1 - prop0), 3)) %>% dplyr::select(Variable, ASM)
balanceTable_asm2 <- rbind(balanceTable_asm2, tmp_df)
}
# ----------
balanceTable_asm <- rbind(balanceTable_asm, balanceTable_asm2)
balanceTable_asm
balanceTable_asm %>% filter(ASM > 0.1)
data <- as.data.frame(cps3_nsw_data)
covariateNames0 <- colnames(data)
covariateNames0 <- setdiff(covariateNames0, c("re78", "treat"))
col_type <- sapply(1:length(covariateNames0), function(x) class(data[,covariateNames0[x]]))
col_num <- covariateNames0[col_type %in% c("numeric", "integer")]
col_fac <- covariateNames0[col_type %in% c("character", "factor")]
# ----------
tmp0 <- data %>% filter(treat == 0)
tmp1 <- data %>% filter(treat == 1)
balanceTable_asm <- data.frame()
for(i in 1:length(col_num)){
obj_col <- col_num[i]
obj <- round(abs(mean(tmp1[,obj_col]) - mean(tmp0[,obj_col])) / sd(data[,obj_col]), 4)
balanceTable_asm <- rbind(balanceTable_asm, c(i, obj))
}
names(balanceTable_asm) <- c("Variable", "ASM")
balanceTable_asm$Variable <- col_num
# ----------
balanceTable_asm2 <- data.frame()
for(i in 1:length(col_fac)){
obj_col <- col_fac[i]
tmp0_p <- prop.table(table(tmp0[,obj_col])) %>% data.frame()
tmp1_p <- prop.table(table(tmp1[,obj_col])) %>% data.frame()
names(tmp0_p) <- c("Variable", "prop0")
names(tmp1_p) <- c("Variable", "prop1")
tmp_df <- data.frame(Variable = unique(c(as.character(tmp0_p$Variable), as.character(tmp1_p$Variable))))
tmp_df <- tmp_df %>% left_join(., tmp0_p, by = "Variable") %>% left_join(., tmp1_p, by = "Variable")
tmp_df$prop0[is.na(tmp_df$prop0)] <- 0
tmp_df$prop1[is.na(tmp_df$prop1)] <- 0
tmp_df <- tmp_df %>% mutate(ASM = round(abs(prop1 - prop0), 3)) %>% dplyr::select(Variable, ASM)
balanceTable_asm2 <- rbind(balanceTable_asm2, tmp_df)
}
# ----------
balanceTable_asm <- rbind(balanceTable_asm, balanceTable_asm2)
balanceTable_asm
balanceTable_asm %>% filter(ASM > 0.1)
setwd("C:\\Users\\kswad\\OneDrive\\デスクトップ\\技術力強化_統計解析\\51_解析スクリプト\\email")
packages <- c("dplyr", "tidyverse")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
# ------------------------------------------------------------------------------
# data:  email
# ------------------------------------------------------------------------------
email <- read_csv("Kevin_Hillstrom_MineThatData_E-MailAnalytics_DataMiningChallenge_2008.03.20.csv")
str(email)
dim(email)
car::some(email)
# ------------------------------------------------------------------------------
# generate biased data
# ------------------------------------------------------------------------------
# excluding Womens E-Mail
# Mens E-Mail as treatment
# RCT data
male_df <- email %>% filter(segment != "Womens E-Mail") %>% mutate(treatment = if_else(segment == "Mens E-Mail", 1, 0))
# ----------
# biased data:  more treated for potential users (history and recency)
set.seed(1)
obs_rate_c <- 0.5
obs_rate_t <- 0.5
biased_data <- male_df %>% mutate(obs_rate_c = if_else((history > 300) | (recency < 6) | (channel == "Multichannel"), obs_rate_c, 1),
obs_rate_t = if_else((history > 300) | (recency < 6) | (channel == "Multichannel"), 1, obs_rate_t),
random_number = runif(n = NROW(male_df))) %>% as.data.frame()
head(biased_data)
biased_data <- biased_data %>% filter((treatment == 0 & random_number < obs_rate_c) | (treatment == 1 & random_number < obs_rate_t))
head(biased_data)
data <- as.data.frame(biased_data)
# ----------
covariateNames0 <- colnames(data)
covariateNames0 <- setdiff(covariateNames0, c("spend", "treatment"))
col_type <- sapply(1:length(covariateNames0), function(x) class(data[,covariateNames0[x]]))
col_num <- covariateNames0[col_type %in% c("numeric", "integer")]
col_fac <- covariateNames0[col_type %in% c("character", "factor")]
# ----------
tmp0 <- data %>% filter(treat == 0)
tmp1 <- data %>% filter(treat == 1)
balanceTable_asm <- data.frame()
for(i in 1:length(col_num)){
obj_col <- col_num[i]
obj <- round(abs(mean(tmp1[,obj_col]) - mean(tmp0[,obj_col])) / sd(data[,obj_col]), 4)
balanceTable_asm <- rbind(balanceTable_asm, c(i, obj))
}
names(balanceTable_asm) <- c("Variable", "ASM")
balanceTable_asm$Variable <- col_num
# ----------
balanceTable_asm2 <- data.frame()
for(i in 1:length(col_fac)){
obj_col <- col_fac[i]
tmp0_p <- prop.table(table(tmp0[,obj_col])) %>% data.frame()
tmp1_p <- prop.table(table(tmp1[,obj_col])) %>% data.frame()
names(tmp0_p) <- c("Variable", "prop0")
names(tmp1_p) <- c("Variable", "prop1")
tmp_df <- data.frame(Variable = unique(c(as.character(tmp0_p$Variable), as.character(tmp1_p$Variable))))
tmp_df <- tmp_df %>% left_join(., tmp0_p, by = "Variable") %>% left_join(., tmp1_p, by = "Variable")
tmp_df$prop0[is.na(tmp_df$prop0)] <- 0
tmp_df$prop1[is.na(tmp_df$prop1)] <- 0
tmp_df <- tmp_df %>% mutate(ASM = round(abs(prop1 - prop0), 3)) %>% dplyr::select(Variable, ASM)
balanceTable_asm2 <- rbind(balanceTable_asm2, tmp_df)
}
# ----------
balanceTable_asm <- rbind(balanceTable_asm, balanceTable_asm2)
balanceTable_asm
balanceTable_asm %>% filter(ASM > 0.1)
data <- as.data.frame(biased_data)
covariateNames0 <- colnames(data)
covariateNames0 <- setdiff(covariateNames0, c("spend", "treatment"))
col_type <- sapply(1:length(covariateNames0), function(x) class(data[,covariateNames0[x]]))
col_num <- covariateNames0[col_type %in% c("numeric", "integer")]
col_fac <- covariateNames0[col_type %in% c("character", "factor")]
tmp0 <- data %>% filter(treatment == 0)
tmp1 <- data %>% filter(treatment == 1)
balanceTable_asm <- data.frame()
for(i in 1:length(col_num)){
obj_col <- col_num[i]
obj <- round(abs(mean(tmp1[,obj_col]) - mean(tmp0[,obj_col])) / sd(data[,obj_col]), 4)
balanceTable_asm <- rbind(balanceTable_asm, c(i, obj))
}
names(balanceTable_asm) <- c("Variable", "ASM")
balanceTable_asm$Variable <- col_num
# ----------
balanceTable_asm2 <- data.frame()
for(i in 1:length(col_fac)){
obj_col <- col_fac[i]
tmp0_p <- prop.table(table(tmp0[,obj_col])) %>% data.frame()
tmp1_p <- prop.table(table(tmp1[,obj_col])) %>% data.frame()
names(tmp0_p) <- c("Variable", "prop0")
names(tmp1_p) <- c("Variable", "prop1")
tmp_df <- data.frame(Variable = unique(c(as.character(tmp0_p$Variable), as.character(tmp1_p$Variable))))
tmp_df <- tmp_df %>% left_join(., tmp0_p, by = "Variable") %>% left_join(., tmp1_p, by = "Variable")
tmp_df$prop0[is.na(tmp_df$prop0)] <- 0
tmp_df$prop1[is.na(tmp_df$prop1)] <- 0
tmp_df <- tmp_df %>% mutate(ASM = round(abs(prop1 - prop0), 3)) %>% dplyr::select(Variable, ASM)
balanceTable_asm2 <- rbind(balanceTable_asm2, tmp_df)
}
# ----------
balanceTable_asm <- rbind(balanceTable_asm, balanceTable_asm2)
balanceTable_asm
balanceTable_asm %>% filter(ASM > 0.1)
load("SASS_TFS_data_imputed.Rdata")
str(imputedData)
names(imputedData)
# setwd("//media//kswada//MyFiles//R//lalonde_nswcps")
setwd("C:\\Users\\kswad\\OneDrive\\デスクトップ\\技術力強化_統計解析\\51_解析スクリプト\\z_for_demo_uncompleted\\sass_tfs")
packages <- c("dplyr", "tidyverse", "MatchIt", "Matching", "survey")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
# ------------------------------------------------------------------------------
# data:  SASS and TFS
# ------------------------------------------------------------------------------
load("SASS_TFS_data_imputed.Rdata")
str(imputedData)
names(imputedData)
dim(imputedData)
data <- as.data.frame(imputedData)
setwd("C:\\Users\\kswad\\OneDrive\\デスクトップ\\技術力強化_統計解析\\51_解析スクリプト\\z_for_demo_uncompleted\\sass_tfs")
packages <- c("dplyr", "tidyverse", "MatchIt", "Matching", "survey")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
# ------------------------------------------------------------------------------
# data:  SASS and TFS
# ------------------------------------------------------------------------------
load("SASS_TFS_data_imputed.Rdata")
str(imputedData)
names(imputedData)
covariateNames <- c(
"TCHEXPER", #Total years of the principals's experience as a teacher
# PRIOR to this school year, how many years were you employed in each of the following positions?
"A0053",#a. As the principal of THIS school
"A0054",#As the principal of other schools
#6d. BEFORE you became a principal, did you hold the following school positions?
"A0058",#department head
"A0059",#(2) Curriculum specialist or coordinator
"A0060",#(3) Assistant principal or program director
"A0061",# (4) Guidance counselor
"A0062",#(5) Library media specialist/Librarian
"A0063",#6) Athletic coach/athletic director
"A0065",#did you participate in any district or school training or development program for ASPIRING school principals?
"TOTTEACH", #how many staff held PART-TIME or FULL-TIME positions
"URBANIC", #Urbanicity of school
"S0104",# Absent 0-9days
"S0105",#Absent 10-20 days
"S0106",#Absent 21+ days
"S0107",#Average daily attendance (number of students categorized)
"MINENR",#Percent minority students (categorized)
"MINTCH",#Percent minority teachers (categorized)
"PGMTYPE", #School type with respect to special programs (6 categories)
"REGION", #ensus Region (4 categories)
"S0284", # Eligible K-12 students for free or reduced lunch
"STU_TCH" ,#Estimated student-teacher ratio
"LEP_T",#Percent of students with limited English proficiency taught in most recent full week, for teachers with self-contained or departmental classes.
"PLAN", #Percentage of scheduled school time teacher had for planning during most recent full week of teaching.
"PUPILS", #total number of pupins in self-contained or departamentalized classes
"T0059",#What was your MAIN activity LAST school year?
"T0106",#How did you earn your regular or standard state certificate or advanced professional certificate in your MAIN teaching assignment field?
"T0120",#What was your main teaching assignment field LAST school year?
"T0124",#Did your preparation for teaching include- (1) Coursework in how to select and adapt instructional materials?
"T0125",#Did your preparation for teaching include- (2) Coursework in learning theory or psychology appropriate to the age of students you teach?
"T0126",#Did your preparation for teaching include- (3) Your observation of other classroom teaching?
"T0127",#Did your preparation for teaching include- (4) Feedback on your teaching?
##In the past 12 months, have you participated in the following activities RELATED TO TEACHING?
"T0150",# a. University course(s) taken for recertification or advanced certification
"T0153",#d. Individual or collaborative research on a topic of interest to you professionally
"T0154",#Regularly-scheduled collaboration with other teachers on issues of instruction
"T0156",#Participating in a network of teachers (e.g., one organized by an outside agency or over the Internet)
"T0158",#Workshops, conferences or training in which you were the presenter
"T0208",#At THIS school, what is the total number of students enrolled in the class you taught during your most recent FULL WEEK of teaching?
#how much control do you think you have IN YOUR CLASSROOM at this school
#over each of the following areas of your planning and teaching?
"T0293",#a. Selecting textbooks and other instructional materials
"T0294",#b. Selecting content, topics, and skills to be taught
"T0295",# c. Selecting teaching techniques
"T0296",#d. Evaluating and grading students
"T0297",#e. Disciplining students
"T0298",#f. Determining the amount of homework to be assigned
#Do you agree or disagree with each of the following statements?
"T0299", #The principal lets staff members know what is expected of them.
"T0300", #The school administration's behavior toward the staff is supportive and encouraging.
"T0301", #I am satisfied with my teaching salary.
"T0303",#e. I receive a great deal of support from parents for the work I do.
"T0306", #My principal enforces school rules for student conduct and backs me up when I need it.
"T0307", #The principal talks with me frequently about my instructional practices.
"T0308", #Rules for student behavior are consistently enforced by teachers in this school, even for students who are not in their classes.
"T0309", #Most of my colleagues share my beliefs and values about what the central mission of the school should be.
"T0310",#The principal knows what kind of school he/she wants and has communicated it to the staff.
"T0311",#There is a great deal of cooperative effort among the staff members.
"T0312",#In this school, staff members are recognized for a job well done.
"T0315",#I am satisfied with my class size(s).
"T0320",#I am generally satisfied with being a teacher at this school.
"T0321",#Problem - Student tardiness
"T0322",#Problem-student absenteeism
"T0324",#Problem-class cutting
"T0325",#Problem-phys conflicts
"T0326",#Problem-theft
"T0327",#Problem-vandalism
"T0331",#Problem-weapons
"T0332",#Problem-disrespect for tchrs
"T0335",#Problem-parental involvement
"T0336",#Problem-poverty
"T0337",#Problem-unprepared students
"T0338",#Problem-student health
"T0339",#If you could go back to your college days and start over again, would you become a teacher or not?
"T0340",#How long do you plan to remain in teaching?
#indicators of data imputed by NCES
"teachImputed",    #imputed teacher
"principalImputed", #imputed principal
"schoolImputed", #imputed school
#indicators of data imputed by me
"missingPrincipal",
"missingSchool" )
psFormula <- paste(covariateNames, collapse = "+")
psFormula <- formula(paste("Treat ~ ", psFormula, sep = ""))
print(psFormula)
require(VGAM)
ps.model <- vglm(psFormula, weights = imputedData$TFNLWGT, family = multinomial, data = imputedData)
summary(ps.model)
ps <- data.frame(fitted(ps.model))
head(ps)
by(ps, imputedData$Treat, summary)
library(lattice)
lattice.options(default.theme = standard.theme(color = FALSE))
# tiff("Chapter6_figure6-1.tif", res = 600, compression = "lzw", height = 6, width = 15, units = "in")
tmp <- reshape(data.frame(ps,imputedData[,c("CNTLNUM","Treat")]),
idvar = "CNTLNUM",
varying = c("noMentor","sameArea","otherArea"),
v.names = "ps",
times = c("GPS of No Mentor","GPS of Same Area","GPS of Other Area"),
direction="long")
head(tmp)
densityplot(~ ps | time, groups = Treat, plot.points = F, auto.key = T, data = tmp,
ylab = "Generalized Propensity Scores", xlab = "Treatment Conditions")
start_time <- system.time()
start_time
start_time <- System.time()
start_time <- Sys.time()
start_time
# IT TAKES TIME !!!:
start_time <- Sys.time()
boost.ps <- mnps(psFormula, data = imputedData,
estimand = "ATE", verbose = FALSE,
stop.method = c("es.max"),
n.trees = 10000,
sampw = imputedData$TFNLWGT)
end_time <- Sys.time()
print(end_time - start_time)
library(twang)
set.seed(2016)
# stop criterion: maximum effect size
# number of trees = 10000
# sampw: sampling weights
# IT TAKES TIME !!!:
start_time <- Sys.time()
boost.ps <- mnps(psFormula, data = imputedData,
estimand = "ATE", verbose = FALSE,
stop.method = c("es.max"),
n.trees = 10000,
sampw = imputedData$TFNLWGT)
end_time <- Sys.time()
print(end_time - start_time)
summary(boost.ps)
plot(boost.ps, color = F, plots = 1, pairwiseMax = F)
ps2 <- data.frame(noMentor = boost.ps$psList$noMentor$ps,
sameArea = boost.ps$psList$sameArea$ps,
otherArea = boost.ps$psList$otherArea$ps)
# assign names
names(ps2) <- c("noMentor", "sameArea", "otherArea")
# ------------------------------------------------------------------------------
# Assess commmon support
# ------------------------------------------------------------------------------
by(ps2, imputedData$Treat, summary)
# ----------
plot(boost.ps, color = F, plots = 2, figureRows = 1)
lattice.options(default.theme = standard.theme(color = FALSE))
tmp <- reshape(data.frame(ps2,imputedData[,c("CNTLNUM","Treat")]),
idvar = "CNTLNUM",
varying = c("noMentor","sameArea","otherArea"),
v.names="ps",
times = c("GPS of No Mentor","GPS of Same Area","GPS of Other Area"),
direction="long")
head(tmp)
densityplot(~ps | time, groups = Treat, plot.points = F, auto.key = T, data = tmp,
ylab = "Generalized Propensity Scores", xlab = "Treatment Conditions")
imputedData$IPTW <- ifelse(imputedData$Treat == "noMentor", 1 / ps$noMentor,
ifelse(imputedData$Treat == "sameArea", 1 / ps$sameArea, 1 / ps$otherArea))
with(imputedData, by(IPTW, Treat, summary))
save(boot.ps, file = "boot.ps", compress = T)
save(boost.ps, file = "boost.ps", compress = T)
imputedData$IPTW <- ifelse(imputedData$Treat == "noMentor", 1 / ps$noMentor,
ifelse(imputedData$Treat == "sameArea", 1 / ps$sameArea, 1 / ps$otherArea))
with(imputedData, by(IPTW, Treat, summary))
imputedData$IPTW.TFNLWGT <- with(imputedData, IPTW * TFNLWGT)
with(imputedData, by(IPTW.TFNLWGT, Treat, summary))
imputedData$finalWeightATE <- with(imputedData, IPTW.TFNLWGT / mean(IPTW.TFNLWGT))
with(imputedData, by(finalWeightATE, Treat, summary))
# ------------------------------------------------------------------------------
# calculate the IPTW from the propensity scores obtained with generalized boosting,
# ------------------------------------------------------------------------------
# calculate the IPTW from the propensity scores obtained with generalized boosting, and multiply by the sampling weights
imputedData$finalWeightATE2 <- get.weights(boost.ps, stop.method = "es.max",
estimand = "ATE",
withSampW = TRUE)
imputedData$finalWeightATE2 <- with(imputedData, finalWeightATE2 / mean(finalWeightATE2))
# ----------
# check distribution of weights
with(imputedData, by(finalWeightATE2, Treat, summary))
pairwise.balance <- function(condition1, condition2, data, iptw){
require(twang)
data <- subset(data, Treat == condition1 | Treat == condition2)
data$Treat <- as.numeric(data$Treat == condition1)
balance.iptw <- bal.stat(data = data,
vars = covariateNames, #list of the covariates that are used in the treatment assignment model
treat.var = "Treat", #treatment assignment indicator
w.all = data[,iptw],   #This time, PS weight times Sampling weight is defined
get.ks = F,            #Avoid estimating KS statistic
sampw = data$TFNLWGT,   #indicate the sampling weight
estimand = "ATE",     #Define proper estimand
multinom = F)         #Indicate that we make pairwise comparisons,
return( balance.iptw$results) }
# ----------
#obtain balance for all groups pairwise
balance.iptw <- list(pair12 <- pairwise.balance("noMentor", "sameArea", imputedData, "finalWeightATE"),
pair13 <- pairwise.balance("noMentor", "otherArea", imputedData, "finalWeightATE"),
pair23 <- pairwise.balance("sameArea", "otherArea", imputedData, "finalWeightATE"))
balance.iptw <- list(pair12 <- pairwise.balance("noMentor", "sameArea", imputedData, "finalWeightATE"),
pair13 <- pairwise.balance("noMentor", "otherArea", imputedData, "finalWeightATE"),
pair23 <- pairwise.balance("sameArea", "otherArea", imputedData, "finalWeightATE"))
# obtain a dataset with just standardized effect sizes
std.eff.iptw <- data.frame(abs(balance.iptw[[1]][5]),
abs(balance.iptw[[2]][5]),
abs(balance.iptw[[3]][5]))
summary(std.eff.iptw)
unbalanced.covariates <- row.names(std.eff.iptw)[as.logical(apply(std.eff.iptw > 0.1, 1, max))]
unbalanced.covariates <- strsplit(unbalanced.covariates, ":")
unbalanced.covariates <- unique(sapply(unbalanced.covariates, "[", 1))
print(unbalanced.covariates)
# ------------------------------------------------------------------------------
# evaluate covariate balance with the twang function using the generalized propensity scores obtained with generalized boosted regression
# ------------------------------------------------------------------------------
# visual inspection of covariate balance
require(twang)
plot(boost.ps, plots = 3, color = F, pairwiseMax = F)
