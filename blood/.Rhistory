X1 <- Z[,1] * ind1
X2 <- Z[,2] * ind2
summary(fit1 <- lm(X1 ~ Z[,2:5]))
summary(fit2 <- lm(X2 ~ Z[,2:5]))
summary(fit1 <- lm(X1 ~ Z[,2:5]))
p1 <- D %*% coef(fit1)
p2 <- D %*% coef(fit2)
prd <- ifelse(Z[,2] < thrsh, p1, p2)
plot(dflu, ylim = c(-0.5, 0.5), type = "p", pch = 3)
lines(prd)
prde1
prde2
prd <- ifelse(Z[,2] < thrsh, p1, p2)
prde <- ifelse(Z[,2] < thrsh, prde1, prde2)
plot(dflu, ylim = c(-0.5, 0.5), type = "p", pch = 3)
lines(prd)
tx <- time(dflu)[-c(1:4)]
xx <- c(tx, rev(tx))
yy <- c(prd - 2 * prde, rev(prd + 2 * prde))
polygon(xx, yy, border = 8, col = gray(0.6, alpha = 0.25))
abline(h = 0.05, col = 4, lty = 6)
plot(dflu, ylim = c(-0.5, 0.5), type = "p", pch = 3)
lines(prd)
polygon(xx, yy, border = 8, col = gray(0.6, alpha = 0.25))
abline(h = 0.05, col = 4, lty = 6)
dflu <- diff(flu)
# ----------
# Lag 1 - 4
Z <- ts.intersect(dflu, stats::lag(dflu, -1), stats::lag(dflu, -2), stats::lag(dflu, -3), stats::lag(dflu, -4))
# ----------
# 2 regime by threshold = 0.05
thrsh <- 0.05
ind1 <- ifelse(Z[,2] < thrsh, 1, NA)
ind2 <- ifelse(Z[,2] < thrsh, NA, 1)
X1 <- Z[,1] * ind1
X2 <- Z[,2] * ind2
# ----------
# regression by each regime with lag 1 - 4
summary(fit1 <- lm(X1 ~ Z[,2:5]))
summary(fit2 <- lm(X2 ~ Z[,2:5]))
# -->
# where sigma1 = 0.046 and sigma
# ----------
# design matrix
D <- cbind(rep(1, nrow(Z)), Z[,2:5])
# ----------
# get predictions
p1 <- D %*% coef(fit1)
p2 <- D %*% coef(fit2)
# ----------
prde1 <- sqrt(sum(resid(fit1)^2) / df.residual(fit1))
prde2 <- sqrt(sum(resid(fit2)^2) / df.residual(fit2))
# ----------
prd <- ifelse(Z[,2] < thrsh, p1, p2)
prde <- ifelse(Z[,2] < thrsh, prde1, prde2)
tx <- time(dflu)[-c(1:4)]
xx <- c(tx, rev(tx))
yy <- c(prd - 2 * prde, rev(prd + 2 * prde))
# ----------
# (+): First differenced U.S. monthly pneumonia and influenza deaths
# one-month-ahead predictions (solid line) with +-2 prediction error bounds
# horizontal line is the threshold
plot(dflu, ylim = c(-0.5, 0.5), type = "p", pch = 3)
lines(prd)
polygon(xx, yy, border = 8, col = gray(0.6, alpha = 0.25))
abline(h = 0.05, col = 4, lty = 6)
library(tsDyn)
install.packages("tsDyn", dep = T)
dflu <- diff(flu)
# ----------
# Lag 1 - 4
Z <- ts.intersect(dflu, stats::lag(dflu, -1), stats::lag(dflu, -2), stats::lag(dflu, -3), stats::lag(dflu, -4))
# ----------
# 2 regime by threshold = 0.05
thrsh <- 0.05
ind1 <- ifelse(Z[,2] < thrsh, 1, NA)
ind2 <- ifelse(Z[,2] < thrsh, NA, 1)
X1 <- Z[,1] * ind1
X2 <- Z[,2] * ind2
# ----------
# regression by each regime with lag 1 - 4
summary(fit1 <- lm(X1 ~ Z[,2:5]))
summary(fit2 <- lm(X2 ~ Z[,2:5]))
D <- cbind(rep(1, nrow(Z)), Z[,2:5])
# ----------
# get predictions
p1 <- D %*% coef(fit1)
p2 <- D %*% coef(fit2)
# ----------
prde1 <- sqrt(sum(resid(fit1)^2) / df.residual(fit1))
prde2 <- sqrt(sum(resid(fit2)^2) / df.residual(fit2))
# ----------
prd <- ifelse(Z[,2] < thrsh, p1, p2)
prde <- ifelse(Z[,2] < thrsh, prde1, prde2)
tx <- time(dflu)[-c(1:4)]
xx <- c(tx, rev(tx))
yy <- c(prd - 2 * prde, rev(prd + 2 * prde))
plot(dflu, ylim = c(-0.5, 0.5), type = "p", pch = 3)
lines(prd)
polygon(xx, yy, border = 8, col = gray(0.6, alpha = 0.25))
abline(h = 0.05, col = 4, lty = 6)
thrsh <- 0.04
ind1 <- ifelse(Z[,2] < thrsh, 1, NA)
ind2 <- ifelse(Z[,2] < thrsh, NA, 1)
X1 <- Z[,1] * ind1
X2 <- Z[,2] * ind2
# ----------
# regression by each regime with lag 1 - 4
summary(fit1 <- lm(X1 ~ Z[,2:5]))
summary(fit2 <- lm(X2 ~ Z[,2:5]))
thrsh <- 0.05
ind1 <- ifelse(Z[,2] < thrsh, 1, NA)
ind2 <- ifelse(Z[,2] < thrsh, NA, 1)
X1 <- Z[,1] * ind1
X2 <- Z[,1] * ind2
# ----------
# regression by each regime with lag 1 - 4
summary(fit1 <- lm(X1 ~ Z[,2:5]))
summary(fit2 <- lm(X2 ~ Z[,2:5]))
# -->
# where sigma1 = 0.046 and sigma
# ----------
# design matrix
D <- cbind(rep(1, nrow(Z)), Z[,2:5])
# ----------
# get predictions
p1 <- D %*% coef(fit1)
p2 <- D %*% coef(fit2)
# ----------
prde1 <- sqrt(sum(resid(fit1)^2) / df.residual(fit1))
prde2 <- sqrt(sum(resid(fit2)^2) / df.residual(fit2))
# ----------
prd <- ifelse(Z[,2] < thrsh, p1, p2)
prde <- ifelse(Z[,2] < thrsh, prde1, prde2)
tx <- time(dflu)[-c(1:4)]
xx <- c(tx, rev(tx))
yy <- c(prd - 2 * prde, rev(prd + 2 * prde))
plot(dflu, ylim = c(-0.5, 0.5), type = "p", pch = 3)
lines(prd)
polygon(xx, yy, border = 8, col = gray(0.6, alpha = 0.25))
abline(h = 0.05, col = 4, lty = 6)
summary(fit1 <- lm(X1 ~ Z[,2:5]))
summary(fit2 <- lm(X2 ~ Z[,2:5]))
plot(fit1)
thrsh <- 0.04
ind1 <- ifelse(Z[,2] < thrsh, 1, NA)
ind2 <- ifelse(Z[,2] < thrsh, NA, 1)
X1 <- Z[,1] * ind1
X2 <- Z[,1] * ind2
# ----------
# regression by each regime with lag 1 - 4
summary(fit1 <- lm(X1 ~ Z[,2:5]))
summary(fit2 <- lm(X2 ~ Z[,2:5]))
# -->
# where sigma1 = 0.046 and sigma2 = 0.072, the threshold of 0.05 was exceeded 17 times.
# ----------
plot(fit1)
# ----------
# design matrix
D <- cbind(rep(1, nrow(Z)), Z[,2:5])
# ----------
# get predictions
p1 <- D %*% coef(fit1)
p2 <- D %*% coef(fit2)
# ----------
prde1 <- sqrt(sum(resid(fit1)^2) / df.residual(fit1))
prde2 <- sqrt(sum(resid(fit2)^2) / df.residual(fit2))
# ----------
prd <- ifelse(Z[,2] < thrsh, p1, p2)
prde <- ifelse(Z[,2] < thrsh, prde1, prde2)
tx <- time(dflu)[-c(1:4)]
xx <- c(tx, rev(tx))
yy <- c(prd - 2 * prde, rev(prd + 2 * prde))
# ----------
# (+): First differenced U.S. monthly pneumonia and influenza deaths
# one-month-ahead predictions (solid line) with +-2 prediction error bounds
# horizontal line is the threshold
plot(dflu, ylim = c(-0.5, 0.5), type = "p", pch = 3)
lines(prd)
polygon(xx, yy, border = 8, col = gray(0.6, alpha = 0.25))
abline(h = 0.05, col = 4, lty = 6)
library(tsDyn)
u <- setar(dflu, m = 4, thDelay = 0, th = 0.05)
library(tsDyn)
u <- setar(dflu, m = 4, thDelay = 0, th = 0.05)
u <- setar(dflu, m = 4, thDelay = 0, th = .05)
plot(u)
help(setar)
u2 <- setar(dflu, m = 4, thDelay = 0)
plot(u2)
names(u2)
u2$k
u2$model
u2$str
mames(u2)
names(u2)
u2$coefficients
u2$coefficients
?plot.setar
BIC(u, u2)
BIC(u)
BIC(u2)
u3 <- setar(dflu, m = 3, thDelay)
u3 <- setar(dflu, m = 3, thDelay = 0)
u3$coefficients
u3 <- setar(dflu, m = 3, thDelay = 0)
u3$coefficients
u2$coefficients
u3 <- setar(dflu, m = 3, thDelay = 0)
u3$coefficients
plot(u3)
BIC(u)
BIC(u2)
BIC(u3)
AIC(u)
AIC(u2)
AIC(u3)
data(sunspotz, package = "astsa")
str(sunspotz)
head(sunspotz)
head(sunspotz)
graphics.off()
par(cex = 1.4, mar = c(4,4,2,1), lwd = 1.6, mfrow=c(1,1))
plot(sunspotz)
plot(sunspots[1:(12*11)], type = "l")
plot(sunspots[1:(12*22)], type = "l")
plot(sunspots[1:(12*11)], type = "l")
dsun <- diff(sunspot)
par(mfrow=c(1,2))
plot(dsun, type = "l")
dsun <- diff(sunspotz)
# ----------
par(mfrow=c(1,2))
plot(dsun, type = "l")
par(mfrow=c(1,1))
plot(dsun, type = "l")
# scatterplot with lowess fit
lag1.plot(dsun, max.lag = 1, corr = FALSE)
lag1.plot(dsun, max.lag = -1, corr = FALSE)
help(lag1.plot)
lag1.plot(dsun, max.lag = 1, corr = FALSE)
Z <- ts.intersect(dsun, stats::lag(dsun, -1), stats::lag(dsun, -2), stats::lag(dsun, -3), stats::lag(dsun, -4))
thrsh <- 0.05
# thrsh <- 0.04
ind1 <- ifelse(Z[,2] < thrsh, 1, NA)
ind2 <- ifelse(Z[,2] < thrsh, NA, 1)
X1 <- Z[,1] * ind1
X2 <- Z[,1] * ind2
# ----------
# regression by each regime with lag 1 - 4
summary(fit1 <- lm(X1 ~ Z[,2:5]))
summary(fit2 <- lm(X2 ~ Z[,2:5]))
# -->
summary(fit1 <- lm(X1 ~ Z[,2:5]))
summary(fit2 <- lm(X2 ~ Z[,2:5]))
plot(fit1)
plot(fit2)
thrsh <- 0
# thrsh <- 0.04
ind1 <- ifelse(Z[,2] < thrsh, 1, NA)
ind2 <- ifelse(Z[,2] < thrsh, NA, 1)
X1 <- Z[,1] * ind1
X2 <- Z[,1] * ind2
# ----------
# regression by each regime with lag 1 - 4
summary(fit1 <- lm(X1 ~ Z[,2:5]))
summary(fit2 <- lm(X2 ~ Z[,2:5]))
summary(fit1 <- lm(X1 ~ Z[,2:5]))
summary(fit2 <- lm(X2 ~ Z[,2:5]))
thrsh <- 0
ind1 <- ifelse(Z[,2] < thrsh, 1, NA)
ind2 <- ifelse(Z[,2] < thrsh, NA, 1)
X1 <- Z[,1] * ind1
X2 <- Z[,1] * ind2
# ----------
# regression by each regime with lag 1 - 4
summary(fit1 <- lm(X1 ~ Z[,2:5]))
summary(fit2 <- lm(X2 ~ Z[,2:5]))
D <- cbind(rep(1, nrow(Z)), Z[,2:5])
p1 <- D %*% coef(fit1)
p2 <- D %*% coef(fit2)
prde1 <- sqrt(sum(resid(fit1)^2) / df.residual(fit1))
prde2 <- sqrt(sum(resid(fit2)^2) / df.residual(fit2))
prd <- ifelse(Z[,2] < thrsh, p1, p2)
prde <- ifelse(Z[,2] < thrsh, prde1, prde2)
tx <- time(dflu)[-c(1:4)]
xx <- c(tx, rev(tx))
yy <- c(prd - 2 * prde, rev(prd + 2 * prde))
plot(dsun, type = "p", pch = 3)
lines(prd)
polygon(xx, yy, border = 8, col = gray(0.6, alpha = 0.25))
abline(h = 0.05, col = 4, lty = 6)
prd <- ifelse(Z[,2] < thrsh, p1, p2)
prde <- ifelse(Z[,2] < thrsh, prde1, prde2)
tx <- time(dsun)[-c(1:4)]
xx <- c(tx, rev(tx))
yy <- c(prd - 2 * prde, rev(prd + 2 * prde))
# ----------
# (+): First differenced U.S. monthly pneumonia and influenza deaths
# one-month-ahead predictions (solid line) with +-2 prediction error bounds
# horizontal line is the threshold
plot(dsun, type = "p", pch = 3)
lines(prd)
polygon(xx, yy, border = 8, col = gray(0.6, alpha = 0.25))
abline(h = 0, col = 4, lty = 6)
library(tsDyn)
dsun <- diff(sun)
u <- setar(dsun, m = 4, thDelay = 0, th = .0)
plot(u)
u <- setar(dsun, m = 10, thDelay = 0, th = .0)
plot(u)
u <- setar(dsun, m = 10, thDelay = 1, th = .0)
plot(u)
graphics.off()
u2 <- setar(dsun, m = 4, thDelay = 0)
u2$coefficients
plot(u2)
u2 <- setar(dsun, m = 10, thDelay = 0)
u2$coefficients
# -->
# threshold = 5.0
# ----------
plot(u2)
astsa::acf2(sunspotz, 48, main = "Smoothed number of sunspots")
# let program fit threshold
u2 <- setar(dsun, m = 4, thDelay = 0)
u2$coefficients
u <- setar(dsun, m = 10, thDelay = 0, th = 4.0)
plot(u)
BIC(u)
BIC(u2)
u3 <- setar(dflu, m = 3, thDelay = 0)
u3$coefficients
u3 <- setar(dsun, m = 3, thDelay = 0)
u3$coefficients
thrsh <- 5
ind1 <- ifelse(Z[,2] < thrsh, 1, NA)
ind2 <- ifelse(Z[,2] < thrsh, NA, 1)
X1 <- Z[,1] * ind1
X2 <- Z[,1] * ind2
# ----------
# regression by each regime with lag 1 - 4
summary(fit1 <- lm(X1 ~ Z[,2:5]))
summary(fit2 <- lm(X2 ~ Z[,2:5]))
# -->
# fit1 is better (samller residual standard error)
# ----------
plot(fit1)
# ----------
# design matrix
D <- cbind(rep(1, nrow(Z)), Z[,2:5])
# ----------
# get predictions
p1 <- D %*% coef(fit1)
p2 <- D %*% coef(fit2)
# ----------
prde1 <- sqrt(sum(resid(fit1)^2) / df.residual(fit1))
prde2 <- sqrt(sum(resid(fit2)^2) / df.residual(fit2))
# ----------
prd <- ifelse(Z[,2] < thrsh, p1, p2)
prde <- ifelse(Z[,2] < thrsh, prde1, prde2)
tx <- time(dsun)[-c(1:4)]
xx <- c(tx, rev(tx))
yy <- c(prd - 2 * prde, rev(prd + 2 * prde))
# ----------
# (+): First differenced
# one-month-ahead predictions (solid line) with +-2 prediction error bounds
# horizontal line is the threshold
plot(dsun, type = "p", pch = 3)
lines(prd)
polygon(xx, yy, border = 8, col = gray(0.6, alpha = 0.25))
abline(h = 0, col = 4, lty = 6)
abline(h = 5, col = 4, lty = 6)
monthplot(dsun)
lag1.plot(dsun, max.lag = 1, corr = FALSE)
rm(list=ls())
graphics.off()
data(cmort, package = "astsa")
str(cmort)
cmort
setwd("//media//kswada//MyFiles//R//cmort")
packages <- c("dplyr", "astsa", "tseries", "forecast", "MTS")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
# ------------------------------------------------------------------------------
# data:  cmort (Pollution, Temperature and Mortality)
# ------------------------------------------------------------------------------
data(cmort, package = "astsa")
data(tempr, package = "astsa")
data(part, package = "astsa")
str(cmort)
str(tempr)
str(part)
cmort
tempr
part
par(mfrow = c(3,1))
plot(cmort, main = "Cardiovascular Mortality", xlab = "", ylab = "")
plot(tempr, main = "Temerature", xlab = "", ylab = "")
plot(part, main = "Particulates", xlab = "", ylab = "")
par(mfrow = c(1,1))
ts.plot(cmort, tempr, part, col = 1:3)
pairs(cbind(Mortality = cmort, Temperature = tempr,  Particulates = part))
psych::pairs.panels(cbind(Mortality = cmort, Temperature = tempr,  Particulates = part))
plot(tempr, cmort, xlab = "Temperature", ylab = "Mortality", pch = 20, col = gray(0.7))
lines(lowess(tempr, cmort), col = "blue")
temp <- tempr - mean(tempr)
temp2 <- temp ^ 2
trend <- time(cmort)
# Here we use of na.action in lm() is to retain the time series attributes for the residuals and fitted values
# ----------
# trend only model:  Mt = beta0 + beta1 * t + wt
fit1 <- lm(cmort ~ trend, na.action = NULL)
summary(fit1)
# liniear temperature:  Mt = beta0 + beta1 * t + beta2 * (Tt - T.) + wt
fit2 <- lm(cmort ~ trend + temp, na.action = NULL)
summary(fit1)
summary(fit2)
fit3 <- lm(cmort ~ trend + temp + temp2, na.action = NULL)
# -->
# The quadratic effect of temperature can clearly be seen in the scatterplots
# ----------
# curvilinear temperature and pollution:  Mt = beta0 + beta1 * t + beta2 * (Tt - T.) + beta3 * (Tt - T.)^2 + beta4 * Pt + wt
fit4 <- lm(cmort ~ trend + temp + temp2 + part, na.action = NULL)
# -->
# Pollution weights positively and can be interpreted as the incremental contribution to daily deaths per unit of particulate pollution.
# ----------
library(stargazer)
stargazer(fit1, fit2, fit3, fit4, type = "text")
AIC(fit1, fit2, fit3, fit4, k = log(length(cmort)))
fit4 <- lm(cmort ~ trend + temp + temp2 + part, na.action = NULL)
num <- length(cmort)
AIC(fit4) / num - log(2 * pi)
BIC(fit4) / num - log(2 * pi)
log(sum(resid(fit4) ^ 2) / num) + (num + 5) / (num - 5 - 2)
# ----------
summary(aov(fit4))
drop1(fit4)
par(mfrow = c(3,1))
forecast::Acf(cmort, lag.max = 50, plot=TRUE)
forecast::Acf(tempr, lag.max = 50, plot=TRUE)
forecast::Acf(part, lag.max = 50, plot=TRUE)
par(mfrow = c(3,1))
Ccf(cmort, tempr, lag = 50, main = "Mortality and Temperature")
Ccf(cmort, part, lag = 50, main = "Mortality and Pollution")
Ccf(tempr, part, lag = 50, main = "Temperature and Pollution")
forecast::Acf(diff(cmort), lag.max = 50, plot=TRUE)
par(mfrow = c(3,1))
forecast::Acf(diff(cmort), lag.max = 50, plot=TRUE)
forecast::Acf(diff(tempr), lag.max = 50, plot=TRUE)
forecast::Acf(diff(part), lag.max = 50, plot=TRUE)
par(mfrow = c(3,1))
Ccf(cmort, tempr, lag = 50, main = "Mortality and Temperature")
Ccf(cmort, part, lag = 50, main = "Mortality and Pollution")
Ccf(tempr, part, lag = 50, main = "Temperature and Pollution")
graphics.off()
astsa::lag2.plot(part, cmort, max.lag = 20)
Ccf(part, cmort, lag.max = 20, plot=FALSE)
Ccf(part, cmort, lag.max = 20, plot=TRUE)
astsa::lag2.plot(part, cmort, max.lag = 20)
psych::pairs.panels(cbind(cmort, tempr, part, stats::lag(part, -4)))
library(vars)
summary(VAR(x, p = 1, type = "both"))
x <- cbind(cmort, tempr, part)
summary(VAR(x, p = 1, type = "both"))
VARselect(x, lag.max = 10, type = "both")
summary(fit <- VAR(x, p = 2, type = "both"))
acf2(resid(fit), max.lag = 52)
resid(fit)
acf2(resid(fit), max.lag = 52)
acf(resid(fit), max.lag = 52)
acf(resid(fit), 52)
help(acf)
acf(resid(fit), lag.max = 52)
help(serial.test)
help(acf)
help(serial.test)
vars::serial.test(fit, lags.pt = 12, type = "PT.adjusted")
acf(resid(fit), lag.max = 52)
acf(resid(fit), 52)$acf
vars::serial.test(fit, lags.pt = 12, type = "PT.adjusted")
fit.pr <- prediction(fit, n.ahead = 24, ci = 0.95)
fit.pr <- predict(fit, n.ahead = 24, ci = 0.95)
plot(fit.pr)
vars::fanchart(fit.pr)
library(marima)
install.packages("marima", dep = T)
library(marima)
library(marima)
model <- define.model(kvar = 3, ar = c(1,2), ma = c(1))
arp <- model$ar.pattern
map <- model$ma.pattern
cmort.d <- resid(detr <- lm(cmort = time(cmort), na.action = NULL))
model <- define.model(kvar = 3, ar = c(1,2), ma = c(1))
arp <- model$ar.pattern
map <- model$ma.pattern
cmort.d <- resid(detr <- lm(cmort = time(cmort), na.action = NULL))
cmort.d <- resid(detr <- lm(cmort ~ time(cmort), na.action = NULL))
xdata <- matrix(cbind(cmort.d, tempr, part), ncol = 3)
fit <- marima(xdta, ar.pattern = arp, ma.pattern = map, means = c(0, 1, 1), penalty = 1)
fit <- marima(xdata, ar.pattern = arp, ma.pattern = map, means = c(0, 1, 1), penalty = 1)
plot(fit)
innov <- t(resid(fit))
plot.ts(innov)
acf(innov, na.action = na.pass)
pred <- ts(t(fitted(fit))[,1], start = start(cmort), freq = frequency(cmort)) + detr$coef[1] + detr$coef[2] * time(cmort)
plot(pred, ylab = "Cardiovascular Mortality", lwd = 2, col = 4)
points(cmort)
short.form(fit$ar.estimates, leading = FALSE)
short.form(fit$ar.fvalues, leading = FALSE)
short.form(fit$ma.estimates, leading = FALSE)
short.form(fit$ma.fvalues, leading = FALSE)
fit$resid.cov
