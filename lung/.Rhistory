panel.xyplot(x, y, pch = 21, fill = fill, ...)
},
legend = list(right = list(fun = draw.colorkey,
args = list(key = list(col = grey.colors, at = depth.breaks), draw = FALSE))),
xlab = "Longitude", ylab = "Latitude")
library(shapes)
library(help = shapes)
help(commandname)
setwd("//media//kswada//MyFiles//R//macaques")
packages <- c("dplyr", "shapes")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
source(file = "//media//kswada//MyFiles//R_basics//functions_for_morphometrics.R")
shapes::macaques.dat
macaques.dat
macaques
data(macaques, package = "shapes")
str(macaques)
str(macaques)
dim(macaques)
macacues[[1]]
macaques[[1]]
dim(macaques[[1]])
dim(macaques[[2]])
dim(macaques)
str(macaques)
data(macaques, package = "shapes")
str(macaques)
data(macaques, package = "shapes")
str(macaques)
dim(macaques)
dim(macaques[[1]])
macaques
names(macaques)
joins <- c(1,2,5,2,3,4,1,6,5,3,7,6,4,7)
colpts <- rep(1:7, times = 18)
shape3d(macaques$x, col = colpts, joinline = joins)
shapes3d(macaques$x, col = colpts, joinline = joins)
shapes3d(macaques$x[,,1], col = colpts, joinline = joins)
shapes3d(macaques$x[,,1], col = colpts, joinline = joins)
( colpts <- rep(1:7, times = 18) )
data(macaques, package = "shapes")
data(macf.dat, package = "shapes")
data(macm.dat, package = "shapes")
dim(macaques$x)
dim(macf.dat)
dim(macm.dat)
data(mice, package = "shapes")
mixw
mice
names(mice)
mice$x
dim(mice$X)
mice$X
mice
names(mice)
dim(mice$x)
joins <- c(1,6,2:5,1)
par(mfrow=c(1,3))
plotshapes(mice$x[,,mice$group == "c"], joinline = joins)
title("Control")
plotshapes(mice$x[,,mice$group == "l"], joinline = joins)
title("Large")
plotshapes(mice$x[,,mice$group == "s"], joinline = joins)
title("Small")
joins <- c(1:60, 1)
par(mfrow=c(1,3))
plotshapes(mice$outlines[,,mice$group == "c"], joinline = joins, col = 2)
title("Control")
plotshapes(mice$outlines[,,mice$group == "l"], joinline = joins, col = 2)
title("Large")
plotshapes(mice$outlines[,,mice$group == "s"], joinline = joins, col = 2)
title("Small")
data(gcet2.dat, package = "shapes")
data(glet2.dat, package = "shapes")
data(gset2.dat, package = "shapes")
data(qcet2.dat, package = "shapes")
data(qlet2.dat, package = "shapes")
data(qset2.dat, package = "shapes")
rm(list=ls())
graphics.off()
setwd("//media//kswada//MyFiles//R//lung")
packages <- c("dplyr", "gamlss")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
data("lung", package = "gamlss.data")
str(lung)
car::some(lung)
data("lung", package = "gamlss.data")
lung <- read.csv("data.csv", header = T)
str(lung)
car::some(lung)
dm <- subset(lung, sex == 1)
dim(dm)
lattice::xyplot(fev ~ height, data = dm, type = c("g", "p", "smooth"), col.line = "black", pch = 20, col = gray(0.8))
plot(fev ~ height, data = dm)
lattice::xyplot(fev ~ age, data = dm, type = c("g", "p", "smooth"), col.line = "black", pch = 20, col = gray(0.8))
cloud(fev ~ height * age, data = dm)
plot3d(height, age, fev)
rgl::plot3d(height, age, fev)
rgl::plot3d(height, age, fev, data = dm)
rgl::plot3d(dm$height, dm$age, dm$fev)
car::scatter3d(dm$height, dm$age, dm$fev, xlab = "height", ylab = "age", zlab = "fev", ticktype = "detailed")
dm <- transform(da, la = log(age), lh = height)
dm <- transform(dm, la = log(age), lh = height)
dm
lattice::xyplot(fev ~ lh, data = dm, type = c("g", "p", "smooth"), col.line = "black", pch = 20, col = gray(0.8))
dm <- transform(dm, la = log(age), lh = log(height))
lattice::xyplot(fev ~ lh, data = dm, type = c("g", "p", "smooth"), col.line = "black", pch = 20, col = gray(0.8))
lattice::xyplot(fev ~ height, data = dm, type = c("g", "p", "smooth"), col.line = "black", pch = 20, col = gray(0.8))
lattice::xyplot(fev ~ lh, data = dm, type = c("g", "p", "smooth"), col.line = "black", pch = 20, col = gray(0.8))
lattice::xyplot(fev ~ la, data = dm, type = c("g", "p", "smooth"), col.line = "black", pch = 20, col = gray(0.8))
lattice::xyplot(fev ~ age, data = dm, type = c("g", "p", "smooth"), col.line = "black", pch = 20, col = gray(0.8))
lattice::xyplot(fev ~ la, data = dm, type = c("g", "p", "smooth"), col.line = "black", pch = 20, col = gray(0.8))
lattice::xyplot(fev ~ age, data = dm, type = c("g", "p", "smooth"), col.line = "black", pch = 20, col = gray(0.8))
lung <- read.csv("\\media\\kswada\\MyFiles\\R\\lung\\data.csv", header = T)
lung <- read.csv("\\media\\kswada\\MyFiles\\R\\lung\\data.csv", header = T)
lung <- read.csv("//media//kswada//MyFiles//R//lung//data.csv", header = T)
str(lung)
m1 <- gamlss(fev ~ 1, sigma.fo = ~1, nu.fo = ~1, tau.fo = ~1, family = BCTo, data = dm, n.cyc = 100)
k1 <- log(5723)
m2 <- stepGAICALL.A(m1, scope = list(lower = ~1, upper = ~pb(lh, medhot = "GAIC", k = k1) + pb(la, method = "GAIC", k = k1)), k = k1)
m2 <- stepGAICAll.A(m1, scope = list(lower = ~1, upper = ~pb(lh, medhot = "GAIC", k = k1) + pb(la, method = "GAIC", k = k1)), k = k1)
summary(m2)
m3 <- gamlss(fev ~ pb((log(height), method = "GAIC", k = k1) + pb((log(age)), method = "GAIC", k = k1),
sigma.fo = ~pb((log(height)), method = "GAIC", k = k1) + pb((log(age)), method = "GAIC", k = k1),
nu.for = ~1, tau.fo = ~1, family = BCTo, data = dm, n.cyc = 100))
m3 <- gamlss(fev ~ pb((log(height)), method = "GAIC", k = k1) + pb((log(age)), method = "GAIC", k = k1),
sigma.fo = ~pb((log(height)), method = "GAIC", k = k1) + pb((log(age)), method = "GAIC", k = k1),
nu.for = ~1, tau.fo = ~1, family = BCTo, data = dm, n.cyc = 100))
m3 <- gamlss(fev ~ pb((log(height)), method = "GAIC", k = k1) + pb((log(age)), method = "GAIC", k = k1),
sigma.fo = ~pb((log(height)), method = "GAIC", k = k1) + pb((log(age)), method = "GAIC", k = k1),
nu.for = ~1, tau.fo = ~1, family = BCTo, data = dm, n.cyc = 100))
m3 <- gamlss(fev ~ pb((log(height)), method = "GAIC", k = k1) + pb((log(age)), method = "GAIC", k = k1),
sigma.fo = ~pb((log(height)), method = "GAIC", k = k1) + pb((log(age)), method = "GAIC", k = k1),
nu.for = ~1, tau.fo = ~1, family = BCTo, data = dm, n.cyc = 100)
summary(m3)
m4 <- gamlss(fev ~ pb((log(height)), method = "GAIC", k = k1) + pb((log(age)), method = "GAIC", k = k1),
sigma.fo = ~pb((log(height)), method = "GAIC", k = k1) + pb((log(age)), method = "GAIC", k = k1),
nu.for = ~1, tau.fo = ~1, family = BCCGo, data = dm, n.cyc = 100)
m5 <- gamlss(fev ~ pb((log(height)), method = "GAIC", k = k1) + pb((log(age)), method = "GAIC", k = k1),
sigma.fo = ~pb((log(height)), method = "GAIC", k = k1) + pb((log(age)), method = "GAIC", k = k1),
nu.for = ~1, tau.fo = ~1, family = BCPEo, data = dm, n.cyc = 100)
GAIC(m3, m4, m5, k = log(nrow(dm)))
plot(m3)
wp(m3, ylim.all = 0.6)
wp(m3, xvar = ~age, n.inter = 9, ylim.worm = 0.8)
wp(m3, xvar = ~height, n.inter = 9, ylim.worm = 0.8)
wp(m3, xvar = ~age + height, n.inter = 4, ylim.worm = 1)
Q.stats(m3, xvar = dm$height, n.inter = 25)
edfAll(m3)
term.plot(m3, what = "mu", pages = 1)
term.plot(m3, what = "sigma", pages = 1, ask = FALSE)
term.plot(m3, what = "mu", pages = 1, ask = FALSE)
term.plot(m3, what = "sigma", pages = 1, ask = FALSE)
mod <- quote(gamlss(fev ~ cs((log(height)), df ~ p[1]) + cs((log(age)), df = p[2]),
sigma.fo = ~cs((log(height)), df = p3[3]) + cs((log(age)), df = p[4]),
nu.fo = ~1, tau.fo = ~1,
family = BCTo, data = dm, control = gamlss.control(trace = FALSE, n.cyc = 100)))
best <- find.hyper(model = mod, par = c(6, 6, 3, 3), lower = c(0.01, 0.01, 0.01, 0.01), steps = c(0.1, 0.1, 0.1, 0.1), k = k1)
mod <- quote(gamlss(fev ~ cs((log(height)), df = p[1]) + cs((log(age)), df = p[2]),
sigma.fo = ~cs((log(height)), df = p3[3]) + cs((log(age)), df = p[4]),
nu.fo = ~1, tau.fo = ~1,
family = BCTo, data = dm, control = gamlss.control(trace = FALSE, n.cyc = 100)))
best <- find.hyper(model = mod, par = c(6, 6, 3, 3), lower = c(0.01, 0.01, 0.01, 0.01), steps = c(0.1, 0.1, 0.1, 0.1), k = k1)
k1 <- log(nrow(dm))
k1
nrow(dm)
mod <- quote(gamlss(fev ~ cs((log(height)), df = p[1]) + cs((log(age)), df = p[2]),
sigma.fo = ~cs((log(height)), df = p3[3]) + cs((log(age)), df = p[4]),
nu.fo = ~1, tau.fo = ~1,
family = BCTo, data = dm, control = gamlss.control(trace = FALSE, n.cyc = 100)))
best <- find.hyper(model = mod, par = c(6, 6, 3, 3), lower = c(0.01, 0.01, 0.01, 0.01), steps = c(0.1, 0.1, 0.1, 0.1), k = k1)
mod <- quote(gamlss(fev ~ cs((log(height)), df = p[1]) + cs((log(age)), df = p[2]),
sigma.fo = ~cs((log(height)), df = p3[3]) + cs((log(age)), df = p[4]),
nu.fo = ~1, tau.fo = ~1,
family = BCTo, data = dm, control = gamlss.control(trace = FALSE, n.cyc = 100)))
best <- find.hyper(model = mod, par = c(6, 6, 3, 3), lower = c(0.01, 0.01, 0.01, 0.01), steps = c(0.1, 0.1, 0.1, 0.1), k = k1)
k1 <- log(nrow(dm))
mod <- quote(gamlss(fev ~ cs((log(height)), df = p[1]) + cs((log(age)), df = p[2]),
sigma.fo = ~cs((log(height)), df = p3[3]) + cs((log(age)), df = p[4]),
nu.fo = ~1, tau.fo = ~1,
family = BCTo, data = dm, control = gamlss.control(trace = FALSE, n.cyc = 100)))
best <- find.hyper(model = mod, par = c(6, 6, 3, 3), lower = c(0.01, 0.01, 0.01, 0.01), steps = c(0.1, 0.1, 0.1, 0.1), k = k1)
mod
mod <- quote(gamlss(fev ~ cs((log(height)), df = p[1]) + cs((log(age)), df = p[2]),
sigma.fo = ~cs((log(height)), df = p[3]) + cs((log(age)), df = p[4]),
nu.fo = ~1, tau.fo = ~1,
family = BCTo, data = dm, control = gamlss.control(trace = FALSE, n.cyc = 100)))
best <- find.hyper(model = mod, par = c(6, 6, 3, 3), lower = c(0.01, 0.01, 0.01, 0.01), steps = c(0.1, 0.1, 0.1, 0.1), k = k1)
best
m3
edfAll(best)
edfAll(m3)
best
best
edfAll(m3)
k1 <- log(nrow(dm))
mh <- gamlss(height ~ pb(log(age), method = "GAIC", k = k1),
sigma.fo = ~pb(log(age), method = "GAIC", k = k1),
nu.fo = ~pb(log(age), method = "GAIC", k = k1),
tau.fo = ~pb(log(age), method = "GAIC", k = k1),
family = BCTo, data = dm)
centiles(mh, xvar = dm$age, cent = c(0.1, 0.4, 2, 10, 25, 50, 75, 90, 98, 99.6, 99.9), ylab = "height", xlab = "age", legend = FALSE)
mn
mh
term.plot(mh)
term.plot(mh, what = "sigma", pages = 1, ask = FALSE)
term.plot(mh, what = "sigma")
centiles(mh, xvar = dm$age, cent = c(0.1, 0.4, 2, 10, 25, 50, 75, 90, 98, 99.6, 99.9), ylab = "height", xlab = "age", legend = FALSE)
snewage <- seq(5, 90, 0.1)
newcent <- c(0.1, 50, 99.9)
maty <- centiles.pred(mh, xname = "age", xvalues = newage, cent = newcent, plot = TRUE)
maty[1:10,]
newage <- seq(5, 90, 0.1)
newcent <- c(0.1, 50, 99.9)
maty <- centiles.pred(mh, xname = "age", xvalues = newage, cent = newcent, plot = TRUE)
maty[1:10,]
m3p <- predctAll(m3, newdata = newdata, type = "respone")
m3p <- predictAll(m3, newdata = newdata, type = "respone")
m3p <- predictAll(m3, newdata = newdata, type = "response")
newdata <- expand.grid(age = seq(5, 90, 0.1), height = seq(100, 210, 1))
m3p <- predictAll(m3, newdata = newdata, type = "response")
mp3
m3p
names(m3p)
fev5 <- qBCPE(0.05, m3p$mu, m3p$sigma, m3p$nu, m3p$tau)
lower <- rep(maty[,2], 111)
upper <- rep(maty[,4], 111)
fev5a <- ifelse(((newdata$height < lower) | (newdata$height > upper)), NaN, fev5)
newheight <- seq(100, 210, 1)
newage <- seq(5, 90, 0.1)
mfev5 <- matrix(data = fev5a, nrow = 851, ncol = 111)
contour(newage, newheight, mfev5, nlevels = 40, xlab = "age(years)", ylab = "height(cm)")
df <- subset(lung, sex == 2)
dim(df)
df <- transform(df, la = log(age), lh = log(height))
m1_f <- gamlss(fev ~ 1, sigma.fo = ~1, nu.fo = ~1, tau.fo = ~1, family = BCTo, data = df, n.cyc = 100)
k1 <- log(nrow(df))
m2_f <- stepGAICAll.A(m1_f, scope = list(lower = ~1, upper = ~pb(lh, medhot = "GAIC", k = k1) + pb(la, method = "GAIC", k = k1)), k = k1)
summary(m2_f)
m3_f <- gamlss(fev ~ pb((log(height)), method = "GAIC", k = k1) + pb((log(age)), method = "GAIC", k = k1),
sigma.fo = ~pb((log(height)), method = "GAIC", k = k1) + pb((log(age)), method = "GAIC", k = k1),
nu.for = ~1, tau.fo = ~1, family = BCTo, data = df, n.cyc = 100)
summary(m3_f)
m4_f <- gamlss(fev ~ pb((log(height)), method = "GAIC", k = k1) + pb((log(age)), method = "GAIC", k = k1),
sigma.fo = ~pb((log(height)), method = "GAIC", k = k1) + pb((log(age)), method = "GAIC", k = k1),
nu.for = ~1, tau.fo = ~1, family = BCCGo, data = df, n.cyc = 100)
m5_f <- gamlss(fev ~ pb((log(height)), method = "GAIC", k = k1) + pb((log(age)), method = "GAIC", k = k1),
sigma.fo = ~pb((log(height)), method = "GAIC", k = k1) + pb((log(age)), method = "GAIC", k = k1),
nu.for = ~1, tau.fo = ~1, family = BCPEo, data = df, n.cyc = 100)
GAIC(m3_f, m4_f, m5_f, k = log(nrow(df)))
lattice::xyplot(fev ~ height, data = df, type = c("g", "p", "smooth"), col.line = "black", pch = 20, col = gray(0.8))
lattice::xyplot(fev ~ lh, data = df, type = c("g", "p", "smooth"), col.line = "black", pch = 20, col = gray(0.8))
lattice::cloud(fev ~ height * age, data = df)
GAIC(m3_f, m4_f, m5_f, k = log(nrow(df)))
plot(m3_f)
wp(m3_f, ylim.all = 0.6)
wp(m3_f, xvar = ~age, n.inter = 9, ylim.worm = 0.8)
wp(m3_f, ylim.all = 0.6)
GAIC(m3_f, m4_f, m5_f, k = log(nrow(df)))
plot(m3_f)
wp(m3_f, ylim.all = 0.6)
wp(m3, ylim.all = 0.6)
wp(m3_f, ylim.all = 0.6)
wp(m3_f, xvar = ~age + height, n.inter = 4, ylim.worm = 1)
Q.stats(m3_f, xvar = dm$height, n.inter = 25)
wp(m3_f, xvar = ~height, n.inter = 9, ylim.worm = 0.8)
edfAll(m3_f)
term.plot(m3_f, what = "mu", pages = 1, ask = FALSE)
term.plot(m3_f, what = "sigma", pages = 1, ask = FALSE)
k1 <- log(nrow(df))
mod_f <- quote(gamlss(fev ~ cs((log(height)), df = p[1]) + cs((log(age)), df = p[2]),
sigma.fo = ~cs((log(height)), df = p[3]) + cs((log(age)), df = p[4]),
nu.fo = ~1, tau.fo = ~1,
family = BCTo, data = df, control = gamlss.control(trace = FALSE, n.cyc = 100)))
best_f <- find.hyper(model = mod_f, par = c(6, 6, 3, 3), lower = c(0.01, 0.01, 0.01, 0.01), steps = c(0.1, 0.1, 0.1, 0.1), k = k1)
dfe <- subset(lung, sex == 2)
dim(dfe)
dfe <- transform(dfe, la = log(age), lh = log(height))
lattice::cloud(fev ~ height * age, data = dfe)
rgl::plot3d(dfe$height, dfe$age, dfe$fev)
m1_fe <- gamlss(fev ~ 1, sigma.fo = ~1, nu.fo = ~1, tau.fo = ~1, family = BCTo, data = dfe, n.cyc = 100)
k1 <- log(nrow(dfe))
m2_fe <- stepGAICAll.A(m1_fe, scope = list(lower = ~1, upper = ~pb(lh, medhot = "GAIC", k = k1) + pb(la, method = "GAIC", k = k1)), k = k1)
summary(m2_fe)
m3_fe <- gamlss(fev ~ pb((log(height)), method = "GAIC", k = k1) + pb((log(age)), method = "GAIC", k = k1),
sigma.fo = ~pb((log(height)), method = "GAIC", k = k1) + pb((log(age)), method = "GAIC", k = k1),
nu.for = ~1, tau.fo = ~1, family = BCTo, data = dfe, n.cyc = 100)
summary(m3_fe)
m4_fe <- gamlss(fev ~ pb((log(height)), method = "GAIC", k = k1) + pb((log(age)), method = "GAIC", k = k1),
sigma.fo = ~pb((log(height)), method = "GAIC", k = k1) + pb((log(age)), method = "GAIC", k = k1),
nu.for = ~1, tau.fo = ~1, family = BCCGo, data = dfe, n.cyc = 100)
m5_fe <- gamlss(fev ~ pb((log(height)), method = "GAIC", k = k1) + pb((log(age)), method = "GAIC", k = k1),
sigma.fo = ~pb((log(height)), method = "GAIC", k = k1) + pb((log(age)), method = "GAIC", k = k1),
nu.for = ~1, tau.fo = ~1, family = BCPEo, data = dfe, n.cyc = 100)
GAIC(m3_fe, m4_fe, m5_fe, k = log(nrow(dfe)))
plot(m3_fe)
wp(m3_fe, ylim.all = 0.6)
wp(m3_fe, xvar = ~age, n.inter = 9, ylim.worm = 0.8)
wp(m3_fe, xvar = ~height, n.inter = 9, ylim.worm = 0.8)
wp(m3_fe, xvar = ~age + height, n.inter = 4, ylim.worm = 1)
Q.stats(m3_fe, xvar = dm$height, n.inter = 25)
edfAll(m3_fe)
term.plot(m3_fe, what = "mu", pages = 1, ask = FALSE)
term.plot(m3_fe, what = "sigma", pages = 1, ask = FALSE)
k1 <- log(nrow(dfe))
mod_fe <- quote(gamlss(fev ~ cs((log(height)), df = p[1]) + cs((log(age)), df = p[2]),
sigma.fo = ~cs((log(height)), df = p[3]) + cs((log(age)), df = p[4]),
nu.fo = ~1, tau.fo = ~1,
family = BCTo, data = dfe, control = gamlss.control(trace = FALSE, n.cyc = 100)))
best_fe <- find.hyper(model = mod_fe, par = c(6, 6, 3, 3), lower = c(0.01, 0.01, 0.01, 0.01), steps = c(0.1, 0.1, 0.1, 0.1), k = k1)
summary(m3)
edfAll(m3)
edfAll(m3_fe)
k1 <- log(nrow(dfe))
k1
nrow(dfe)
mod_fe <- quote(gamlss(fev ~ cs((log(height)), df = p[1]) + cs((log(age)), df = p[2]),
sigma.fo = ~cs((log(height)), df = p[3]) + cs((log(age)), df = p[4]),
nu.fo = ~1, tau.fo = ~1,
family = BCTo, data = dfe, control = gamlss.control(trace = FALSE, n.cyc = 100)))
best_fe <- find.hyper(model = mod_fe, par = c(6, 4, 3, 3), lower = c(0.01, 0.01, 0.01, 0.01), steps = c(0.1, 0.1, 0.1, 0.1), k = k1)
k1 <- log(nrow(dfe))
mh_fe <- gamlss(height ~ pb(log(age), method = "GAIC", k = k1),
sigma.fo = ~pb(log(age), method = "GAIC", k = k1),
nu.fo = ~pb(log(age), method = "GAIC", k = k1),
tau.fo = ~pb(log(age), method = "GAIC", k = k1),
family = BCTo, data = dfe)
mh_fe
term.plot(mh_fe)
term.plot(mh_fe, what = "sigma")
centiles(mh_fe, xvar = dm$age, cent = c(0.1, 0.4, 2, 10, 25, 50, 75, 90, 98, 99.6, 99.9), ylab = "height", xlab = "age", legend = FALSE)
centiles(mh_fe, xvar = dfe$age, cent = c(0.1, 0.4, 2, 10, 25, 50, 75, 90, 98, 99.6, 99.9), ylab = "height", xlab = "age", legend = FALSE)
newage <- seq(5, 90, 0.1)
newcent <- c(0.1, 50, 99.9)
maty_fe <- centiles.pred(mh_fe, xname = "age", xvalues = newage, cent = newcent, plot = TRUE)
maty_fe[1:10,]
newdata <- expand.grid(age = seq(5, 90, 0.1), height = seq(100, 210, 1))
# Use the chosen model m3_fe for fev to predict all the parameters mu, sigma, nu and tau of the distribution BCTo for the values of age and height in newdata.
m3p_fe <- predictAll(m3_fe, newdata = newdata, type = "response")
m3p_fe
# Calculate the 5th centile of fev for all cases in newdata
fev5_fe <- qBCPE(0.05, m3p_fe$mu, m3p_fe$sigma, m3p_Fe$nu, m3p$tau)
maty[,2]
lattice::xyplot(fev ~ age, data = dfe, type = c("g", "p", "smooth"), col.line = "black", pch = 20, col = gray(0.8))
lattice::xyplot(fev ~ height, data = dfe, type = c("g", "p", "smooth"), col.line = "black", pch = 20, col = gray(0.8))
par(mfrow=c(2,1))
lattice::xyplot(fev ~ height, data = dm, type = c("g", "p", "smooth"), col.line = "black", pch = 20, col = gray(0.8))
lattice::xyplot(fev ~ height, data = dfe, type = c("g", "p", "smooth"), col.line = "black", pch = 20, col = gray(0.8))
lattice::xyplot(fev ~ height, data = dm, type = c("g", "p", "smooth"), col.line = "black", pch = 20, col = gray(0.8))
lattice::xyplot(fev ~ height, data = dfe, type = c("g", "p", "smooth"), col.line = "black", pch = 20, col = gray(0.8))
lower <- rep(maty[,2], 111)
upper <- rep(maty[,4], 111)
fev5a_fe <- ifelse(((newdata$height < lower) | (newdata$height > upper)), NaN, fev5_fe)
newheight <- seq(100, 210, 1)
newage <- seq(5, 90, 0.1)
mfev5_fe <- matrix(data = fev5a_fe, nrow = 851, ncol = 111)
contour(newage, newheight, mfev5_fe, nlevels = 40, xlab = "age(years)", ylab = "height(cm)")
fev5a_fe <- ifelse(((newdata$height < lower) | (newdata$height > upper)), NaN, fev5_fe)
fev5_fe <- qBCPE(0.05, m3p_fe$mu, m3p_fe$sigma, m3p_Fe$nu, m3p$tau)
fev5_fe <- qBCPE(0.05, m3p_fe$mu, m3p_fe$sigma, m3p_fe$nu, m3p_fe$tau)
lower <- rep(maty[,2], 111)
upper <- rep(maty[,4], 111)
fev5a_fe <- ifelse(((newdata$height < lower) | (newdata$height > upper)), NaN, fev5_fe)
# ----------
# Obtain a contour plot of the 5th centile of fev against height and age.
newheight <- seq(100, 210, 1)
newage <- seq(5, 90, 0.1)
mfev5_fe <- matrix(data = fev5a_fe, nrow = 851, ncol = 111)
contour(newage, newheight, mfev5_fe, nlevels = 40, xlab = "age(years)", ylab = "height(cm)")
par(mfrow=c(1,1))
contour(newage, newheight, mfev5_fe, nlevels = 40, xlab = "age(years)", ylab = "height(cm)")
par(mfrow=c(1,2))
contour(newage, newheight, mfev5, nlevels = 40, xlab = "age(years)", ylab = "height(cm)")
contour(newage, newheight, mfev5_fe, nlevels = 40, xlab = "age(years)", ylab = "height(cm)")
par(mfrow=c(1,2))
contour(newage, newheight, mfev5, nlevels = 40, xlab = "age(years)", ylab = "height(cm)", main = "male"
contour(newage, newheight, mfev5_fe, nlevels = 40, xlab = "age(years)", ylab = "height(cm)", main = "female")
par(mfrow=c(1,2))
contour(newage, newheight, mfev5, nlevels = 40, xlab = "age(years)", ylab = "height(cm)", main = "male")
contour(newage, newheight, mfev5_fe, nlevels = 40, xlab = "age(years)", ylab = "height(cm)", main = "female")
head(dm)
str(dm)
k1 <- log(nrow(dm))
m6 <- stepGAICAll.A(m1, scope = list(lower = ~1,
upper = ~pb(lh, medhot = "GAIC", k = k1) + pb(la, method = "GAIC", k = k1)) +
pvc(lh, by = as.factor(centre), method = "GAIC", k = k1) +
pvc(la, by = as.factor(centre), method = "GAIC", k = k1), k = k1)
m6 <- stepGAICAll.A(m1, scope = list(lower = ~1,
upper = ~pb(lh, medhot = "GAIC", k = k1) + pb(la, method = "GAIC", k = k1)) +
pvc(lh, by = factor(centre), method = "GAIC", k = k1) +
pvc(la, by = factor(centre), method = "GAIC", k = k1), k = k1)
m6 <- stepGAICAll.A(m1, scope = list(lower = ~1,
upper = ~pb(lh, medhot = "GAIC", k = k1) + pb(la, method = "GAIC", k = k1)) +
pvc(lh, by = centre, method = "GAIC", k = k1) +
pvc(la, by = centre, method = "GAIC", k = k1), k = k1)
m1
m1 <- gamlss(fev ~ 1, sigma.fo = ~1, nu.fo = ~1, tau.fo = ~1, family = BCTo, data = dm, n.cyc = 100)
k1 <- log(nrow(dm))
m6 <- stepGAICAll.A(m1, scope = list(lower = ~1,
upper = ~pb(lh, medhot = "GAIC", k = k1) + pb(la, method = "GAIC", k = k1)) +
pvc(lh, by = centre, method = "GAIC", k = k1) +
pvc(la, by = centre, method = "GAIC", k = k1), k = k1)
m6 <- stepGAICAll.A(m1, scope = list(lower = ~1,
upper = ~pb(lh, medhot = "GAIC", k = k1) + pb(la, method = "GAIC", k = k1) +
pvc(lh, by = centre, method = "GAIC", k = k1) +
pvc(la, by = centre, method = "GAIC", k = k1), k = k1)
m6 <- stepGAICAll.A(m1, scope = list(lower = ~1,
upper = ~pb(lh, medhot = "GAIC", k = k1) + pb(la, method = "GAIC", k = k1) +
pvc(lh, by = centre, method = "GAIC", k = k1) +
pvc(la, by = centre, method = "GAIC", k = k1)), k = k1)
m6 <- stepGAICAll.A(m1, scope = list(lower = ~1,
upper = ~pb(lh, medhot = "GAIC", k = k1) + pb(la, method = "GAIC", k = k1) +
pvc(lh, by = centre, method = "GAIC", k = k1) +
pvc(la, by = centre, method = "GAIC", k = k1)), k = k1)
m6 <- stepGAICAll.A(m1, scope = list(lower = ~1,
upper = ~pb(lh, medhot = "GAIC", k = k1) + pb(la, method = "GAIC", k = k1) +
pvc(lh, by = as.factor(centre), method = "GAIC", k = k1) +
pvc(la, by = as.factor(centre), method = "GAIC", k = k1)), k = k1)
m6 <- stepGAICAll.A(m1, scope = list(lower = ~1,
upper = ~pb(lh, medhot = "GAIC", k = k1) + pb(la, method = "GAIC", k = k1) + as.factor(centre)), k = k1)
summary(m7)
summary(m6)
m7 <- gamlss(fev ~ pb((log(height)), method = "GAIC", k = k1) + pb((log(age)), method = "GAIC", k = k1) + as.factor(centre),
sigma.fo = ~pb((log(height)), method = "GAIC", k = k1) + pb((log(age)), method = "GAIC", k = k1) + as.factor(centre),
nu.for = ~1, tau.fo = ~1, family = BCTo, data = dm, n.cyc = 100)
summary(m7)
m8 <- gamlss(fev ~ pb((log(height)), method = "GAIC", k = k1) + pb((log(age)), method = "GAIC", k = k1) + as.factor(centre),
sigma.fo = ~pb((log(height)), method = "GAIC", k = k1) + pb((log(age)), method = "GAIC", k = k1) + as.factor(centre),
nu.for = ~1, tau.fo = ~1, family = BCCGo, data = dm, n.cyc = 100)
m9 <- gamlss(fev ~ pb((log(height)), method = "GAIC", k = k1) + pb((log(age)), method = "GAIC", k = k1) + as.factor(centre),
sigma.fo = ~pb((log(height)), method = "GAIC", k = k1) + pb((log(age)), method = "GAIC", k = k1) + as.factor(centre),
nu.for = ~1, tau.fo = ~1, family = BCPEo, data = dm, n.cyc = 100)
GAIC(m3, m4, m5, m6, m7, m8 = log(nrow(dm)))
GAIC(m3, m4, m5, m6, m7, m8 = log(nrow(dm)))
GAIC(m3, m4, m5, m6, m7, m8, k = log(nrow(dm)))
GAIC(m3, m4, m5, m7, m8, m9, k = log(nrow(dm)))
plot(m7)
wp(m7, ylim.all = 0.6)
wp(m7, xvar = ~age, n.inter = 9, ylim.worm = 0.8)
wp(m7, xvar = ~age + height + centre, n.inter = 4, ylim.worm = 1)
wp(m7, xvar = ~age + height + as.factor(centre), n.inter = 4, ylim.worm = 1)
wp(m7, xvar = ~age + height + centre, n.inter = 4, ylim.worm = 1)
table(dm$centre)
edfAll(m7)
term.plot(m7, what = "mu", pages = 1, ask = FALSE)
term.plot(m7, what = "sigma", pages = 1, ask = FALSE)
dm2 <- subset(dm, centre == 2)
k1 <- log(nrow(dm2))
k1
nrow(dm2)
mh2 <- gamlss(height ~ pb(log(age), method = "GAIC", k = k1),
sigma.fo = ~pb(log(age), method = "GAIC", k = k1),
nu.fo = ~pb(log(age), method = "GAIC", k = k1),
tau.fo = ~pb(log(age), method = "GAIC", k = k1),
family = BCTo, data = dm2)
term.plot(mh2)
term.plot(mh2, what = "sigma")
centiles(mh2, xvar = dm2$age, cent = c(0.1, 0.4, 2, 10, 25, 50, 75, 90, 98, 99.6, 99.9), ylab = "height", xlab = "age", legend = FALSE)
par(mrfow=c(1,1))
centiles(mh2, xvar = dm2$age, cent = c(0.1, 0.4, 2, 10, 25, 50, 75, 90, 98, 99.6, 99.9), ylab = "height", xlab = "age", legend = FALSE)
par(mrfow=c(1,1))
par(mfrow=c(1,1))
centiles(mh2, xvar = dm2$age, cent = c(0.1, 0.4, 2, 10, 25, 50, 75, 90, 98, 99.6, 99.9), ylab = "height", xlab = "age", legend = FALSE)
newage <- seq(5, 90, 0.1)
newcent <- c(0.1, 50, 99.9)
maty2 <- centiles.pred(mh2, xname = "age", xvalues = newage, cent = newcent, plot = TRUE)
maty2[1:10,]
m7p <- predictAll(m7, newdata = newdata, type = "response")
m7p
newdata <- expand.grid(age = seq(5, 90, 0.1), height = seq(100, 210, 1), centre = c(1,2,3,4))
# Use the chosen model m7 for fev to predict all the parameters mu, sigma, nu and tau of the distribution BCTo for the values of age and height in newdata.
m7p <- predictAll(m7, newdata = newdata, type = "response")
m7p
fev52 <- qBCPE(0.05, m7p$mu, m7p$sigma, m7p$nu, m7p$tau)
fev5a2 <- ifelse(((newdata$height < lower) | (newdata$height > upper)), NaN, fev52)
newheight <- seq(100, 210, 1)
newage <- seq(5, 90, 0.1)
mfev52 <- matrix(data = fev5a2, nrow = 851, ncol = 111)
nrow(fev5a2)
length(fev5a2)
851 * 111
fev52
newdata <- expand.grid(age = seq(5, 90, 0.1), height = seq(100, 210, 1), centre = c(2))
# Use the chosen model m7 for fev to predict all the parameters mu, sigma, nu and tau of the distribution BCTo for the values of age and height in newdata.
m7p <- predictAll(m7, newdata = newdata, type = "response")
m7p
fev52 <- qBCPE(0.05, m7p$mu, m7p$sigma, m7p$nu, m7p$tau)
lower <- rep(maty[,2], 111)
upper <- rep(maty[,4], 111)
fev5a2 <- ifelse(((newdata$height < lower) | (newdata$height > upper)), NaN, fev52)
newheight <- seq(100, 210, 1)
newage <- seq(5, 90, 0.1)
851*111
nrow(fev5a2)
length(fev5a2)
newheight <- seq(100, 210, 1)
newage <- seq(5, 90, 0.1)
mfev52 <- matrix(data = fev5a2, nrow = 851, ncol = 111)
contour(newage, newheight, mfev52, nlevels = 40, xlab = "age(years)", ylab = "height(cm)")
par(mfrow=c(1,1))
contour(newage, newheight, mfev5, nlevels = 40, xlab = "age(years)", ylab = "height(cm)")
contour(newage, newheight, mfev52, nlevels = 40, xlab = "age(years)", ylab = "height(cm)")
par(mfrow=c(1,1))
contour(newage, newheight, mfev5, nlevels = 40, xlab = "age(years)", ylab = "height(cm)")
contour(newage, newheight, mfev52, nlevels = 40, xlab = "age(years)", ylab = "height(cm)")
par(mfrow=c(1,2))
contour(newage, newheight, mfev5, nlevels = 40, xlab = "age(years)", ylab = "height(cm)")
contour(newage, newheight, mfev52, nlevels = 40, xlab = "age(years)", ylab = "height(cm)")
BCTo()
linkcheck("BCTo)")
rm(list=ls())
graphics.off()
