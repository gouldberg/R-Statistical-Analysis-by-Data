calibrate::calibrate(fitlms$coef[,"May"], Y[,"May"], tm = seq(-2, 2, by = 0.5), Fr = X, dp = TRUE,
axiscol = "brown", axislab = "May", labpos = 3, verb = FALSE)
graphics.off()
par(mfrow=c(1,2))
res.pca0 <- FactoMineR::PCA(temperature[,1:12])
res.pca0
summary(res.pca0)
names(temperature)
graphics.off()
par(mfrow=c(1,2))
res.pca1 <- FactoMineR::PCA(temperature, ind.sup = 24:35, quanti.sup = 13:16, quali.sup = 17)
summary(res, nb.dec = 2)
summary(res.pca, nb.dec = 2)
res.pca <- FactoMineR::PCA(temperature, ind.sup = 24:35, quanti.sup = 13:16, quali.sup = 17)
# ----------
summary(res.pca, nb.dec = 2)
res.pca$eig
# ----------
par(mfrow=c(1,1))
barplot(res.pca$eig[,1], main = "Eigenvalues", names.arg = paste("dim", 1:nrow(res.pca$eig)))
nrow(temperature)
par(mfrow=c(1,1))
plot(res.pca, invisible = "var")
# ----------
# Coordinate
res.pca$ind$coord
# ----------
# Contribution of individuals for 1st and 2nd dimension
round(sort(res.pca$ind$contrib[,1], decreasing = TRUE), digits = 3)
round(sort(res.pca$ind$contrib[,2], decreasing = TRUE), digits = 3)
plot(res.pca, choix = "ind", axes = 3:4)
round(sort(res.pca$ind$contrib[,3], decreasing = TRUE), digits = 3)
round(sort(res.pca$ind$contrib[,4], decreasing = TRUE), digits = 3)
plot(res.pca, choix = "ind", habillage = 13, cex = 0.7)
names(temperature)
plot(res.pca, choix = "ind", habillage = 17, cex = 0.7)
par(mfrow=c(1,1))
plot(res.pca, invisible = c("ind", "var"))
res.pca$quali.sup
plotellipses(res.pca, cex = 0.8)
par(mfrow=c(1,1))
plot(res.pca, choix = "var")
res.pca$var$coord
round(sort(res.pca$var$contrib[,1], decreasing = TRUE), digits = 3)
round(sort(res.pca$var$contrib[,2], decreasing = TRUE), digits = 3)
plot(res.pca, choix = "var", axes = 3:4)
par(mfrow=c(1,1))
plot(res.pca, choix = "var")
res.pca$quanti.sup$coord
means_ <- round(res.pca$call$centre, digits = 3)
sd_ <- round(res.pca$call$ecart.type, digits = 3)
tmp <- rbind(means_, sd_)
colnames(tmp) <- colnames(decathlon)[1:10]
tmp
# ----------
# standardized data
round(scale(decathlon[,1:12]), digits = 3)
colnames(tmp) <- colnames(temperature)[1:12]
tmp
# ----------
# standardized data
round(scale(decathlon[,1:12]), digits = 3)
round(scale(temperature[,1:12]), digits = 3)
means_ <- round(res.pca$call$centre, digits = 3)
sd_ <- round(res.pca$call$ecart.type, digits = 3)
tmp <- rbind(means_, sd_)
colnames(tmp) <- colnames(temperature)[1:12]
tmp
psych::pairs.panels(temperature[,1:12])
dimdesc(res.pca)
dimdesc(res.pca)$Dim.1
dimdesc(res.pca)$Dim.2
dimdesc(res.pca, proba = 0.2)
dimdesc(res.pca, proba = 0.2)
library(Gifi)
prc <- princals(temperature[, 1:12])
summary(prc)
par(mfrow = c(1,1))
# expand = 0.5 to shorten the vectors for better representation
plot(prc, plot.type = "biplot", main = "Princals Biplot", expand = 0.5, cex.scores = 0.6, col.scores = "gray")
abline(h = 0, v = 0, lty = 2, col = "gray")
par(mar = c(1,1,1,1))
plot(prc, plot.type = "transplot")
library(smacof)
# convert correlation to distance
cormat_v <- psych::cor2dist(cor(decathlon[,1:12]))
# individual
cormat_i <- psych::cor2dist(cor(t(decathlon[,1:12])))
fitv_i <- mds(cormat_v, type = "interval")
fitv_o <- mds(cormat_v, type = "ordinal")
fiti_i <- mds(cormat_i, type = "interval")
fiti_o <- mds(cormat_i, type = "ordinal")
fitv_i
fitv_o
fiti_i
fiti_o
# ----------
par(mfrow = c(2, 2))
plot(fitv_i)
plot(fitv_o)
plot(fiti_i)
plot(fiti_o)
# convert correlation to distance
cormat_v <- psych::cor2dist(cor(temperature[,1:12]))
# individual
cormat_i <- psych::cor2dist(cor(t(temperature[,1:12])))
fitv_i <- mds(cormat_v, type = "interval")
fitv_o <- mds(cormat_v, type = "ordinal")
fiti_i <- mds(cormat_i, type = "interval")
fiti_o <- mds(cormat_i, type = "ordinal")
fitv_i
fitv_o
fiti_i
fiti_o
# ----------
par(mfrow = c(2, 2))
plot(fitv_i)
plot(fitv_o)
plot(fiti_i)
plot(fiti_o)
setwd("//media//kswada//MyFiles//R//decathlon")
packages <- c("dplyr", "MPsychoR", "FactoMineR")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
# ------------------------------------------------------------------------------
# data:  decathlon
# ------------------------------------------------------------------------------
data("decathlon", package = "FactoMineR")
str(decathlon)
dim(decathlon)
decathlon
# ------------------------------------------------------------------------------
# Global Stress of MDS Solution:  Shepard Diagram
#   - Configuration Distances versus Dissimilarities
# ------------------------------------------------------------------------------
# Configuration distances
fitv_i$confdist
# Disparities (transformed proximities, approximated distances, d-hats)
fitv_i$dhat
# ----------
graphics.off()
par(mfrow=c(2,2))
plot(fitv_i, plot.type = "Shepard")
plot(fitv_o, plot.type = "Shepard")
plot(fiti_i, plot.type = "Shepard")
plot(fiti_o, plot.type = "Shepard")
# -->
# This is rare case ??:  ordinal model's stress is less than that of interval model
fitv_i$stress
fitv_o$stress
fiti_i$stress
fiti_o$stress
# ------------------------------------------------------------------------------
# Global Stress of MDS Solution:  Shepard Diagram
#   - Configuration Distances versus Similarities (Proximities)
# ------------------------------------------------------------------------------
graphics.off()
par(mfrow=c(1,2))
plot(fitv_i, plot.type = "Shepard", shepard.x = cormat_v)
plot(fiti_i, plot.type = "Shepard", shepard.x = cormat_i)
# -->
# each gray point is pair-wise proximities
stress_bydim <- c()
ranstress_bydim_med <- c()
ranstress_bydim_q5 <- c()
ranstress_bydim_q95 <- c()
maxdim <- 6
for(ndim in 1:maxdim){
stress <- mds(delta = cormat_v, ndim = ndim, type = "ordinal")$stress
stress_bydim <- c(stress_bydim, stress)
ex <- randomstress(n = dim(cormat_v)[1], ndim = ndim, nrep = 100, type = "ordinal")
ranstress_bydim_med <- c(ranstress_bydim_med, median(ex))
ranstress_bydim_q5 <- c(ranstress_bydim_q5, unname(quantile(ex, 0.05)))
ranstress_bydim_q95 <- c(ranstress_bydim_q95, unname(quantile(ex, 0.95)))
}
graphics.off()
par(mfrow=c(1,1))
plot(1:maxdim, stress_bydim, type = "b", lty = 1, lwd = 1, ylim = c(0, 0.50))
lines(1:maxdim, ranstress_bydim_med, lty = 1, lwd = 1, col = "gray")
lines(1:maxdim, ranstress_bydim_q5, lty = 2, lwd = 1, col = "gray")
lines(1:maxdim, ranstress_bydim_q95, lty = 2, lwd = 1, col = "gray")
stress_bydim <- c()
ranstress_bydim_med <- c()
ranstress_bydim_q5 <- c()
ranstress_bydim_q95 <- c()
maxdim <- 10
for(ndim in 1:maxdim){
stress <- mds(delta = cormat_i, ndim = ndim, type = "interval")$stress
stress_bydim <- c(stress_bydim, stress)
ex <- randomstress(n = dim(cormat_i)[1], ndim = ndim, nrep = 100, type = "interval")
ranstress_bydim_med <- c(ranstress_bydim_med, median(ex))
ranstress_bydim_q5 <- c(ranstress_bydim_q5, unname(quantile(ex, 0.05)))
ranstress_bydim_q95 <- c(ranstress_bydim_q95, unname(quantile(ex, 0.95)))
}
# ----------
graphics.off()
par(mfrow=c(1,1))
plot(1:maxdim, stress_bydim, type = "b", lty = 1, lwd = 1, ylim = c(0, 0.50))
lines(1:maxdim, ranstress_bydim_med, lty = 1, lwd = 1, col = "gray")
lines(1:maxdim, ranstress_bydim_q5, lty = 2, lwd = 1, col = "gray")
lines(1:maxdim, ranstress_bydim_q95, lty = 2, lwd = 1, col = "gray")
fitv_i$confdist
# Disparities (transformed proximities, approximated distances, d-hats)
fitv_i$dhat
# ----------
graphics.off()
par(mfrow=c(2,2))
plot(fitv_i, plot.type = "Shepard")
plot(fitv_o, plot.type = "Shepard")
plot(fiti_i, plot.type = "Shepard")
plot(fiti_o, plot.type = "Shepard")
ex_v <- randomstress(n = dim(cormat_v)[1], ndim = 2, nrep = 500, type = "ordinal")
ex_i <- randomstress(n = dim(cormat_i)[1], ndim = 2, nrep = 500, type = "ordinal")
# ----------
quantile(ex_v, c(0.05, 0.95))
quantile(ex_i, c(0.05, 0.95))
fitv_o$stress
fiti_o$stress
graphics.off()
par(mfrow=c(2,1), mar = c(2,2,2,2))
hist(ex_v)
hist(ex_i)
psych::describe(ex_v)
psych::describe(ex_i)
# ----------
ex_v <- permtest(fitv_o)
ex_i <- permtest(fiti_o)
graphics.off()
par(mfrow=c(2,1), mar = c(2,2,2,2))
hist(ex_v$stressvec, xlim = c(ex_v$stress.obs - 0.05, max(ex_v$stressvec) + 0.05))
abline(v = ex_v$stress.obs, col = "red")
points(ex_v$stress.obs, 0, cex = 2, pch = 16, col = "red")
hist(ex_i$stressvec, xlim = c(ex_i$stress.obs - 0.05, max(ex_i$stressvec) + 0.05))
abline(v = ex_i$stress.obs, col = "red")
points(ex_i$stress.obs, 0, cex = 2, pch = 16, col = "red")
fitv_o$spp
fiti_o$spp
# ----------
# Bubble plot
graphics.off()
par(mfrow=c(1,2))
plot(fitv_o, plot.type = "bubbleplot")
plot(fiti_o, plot.type = "bubbleplot")
graphics.off()
par(mfrow=c(1,2))
plot(fitv_o, plot.type = "stressplot")
plot(fiti_o, plot.type = "stressplot")
library(gplots)
# Representation Errors
RepErr <- as.matrix((fitv_o$dhat - fitv_o$confdist) ^ 2)
yr <- colorRampPalette(c("lightyellow", "red"), space = "rgb")(100)
heatmap.2(RepErr, cellnote = round(RepErr,2), Rowv = NA, Colv="Rowv",
lwid = c(1, 40), lhei = c(1, 40), margins = c(8, 8),
key=FALSE, notecol="black", trace="none", col=yr, symm=TRUE, dendrogram="none" )
JK_v <- jackknife(fitv_o)
JK_i <- jackknife(fiti_o)
JK_v
JK_i
# stability measure
JK_v$stab
JK_i$stab
# ----------
par(mfrow=c(1,2))
plot(JK_v, col.p = "black", col.l = "black", lwd = 1.2)
plot(JK_i, col.p = "black", col.l = "black", lwd = 1.2)
ddr <- rbind(temperature[,1:12], apply(temperature[,1:12], 2, sum))
nrow(temp)
ddr <- rbind(temperature[1:23,1:12], apply(temperature[1:23,1:12], 2, sum))
rownames(ddr)[24] <- "Mean Profile"
ddr
round(addmargins(prop.table(as.matrix(ddr), margin = 1), margin = 2), 3)
ddc <- cbind(decathlon[1:23,1:12], apply(decathlon[1:23,1:12], 1, sum))
colnames(ddc)[13] <- "Mean Profile"
ddc
round(addmargins(prop.table(as.matrix(ddc), margin = 2), margin = 1), 3)
names(temperature)
temp.catd <- catdes(temperature[1:23,], num.var = 17)
temp.catd
temp.catd$test.chi
fit_mds <- mds(cormat_v, type = "interval")
fit_mds
summary(fit_mds)
names(temperature)
extvar <- temperature[,13]
# biplotmds function standardized these external variables and return the standardized regression coefficients
# (as well as the R^2 vector)
mdsbi <- biplotmds(fit_mds, extvar = extvar)
mdsbi$coef
mdsbi$R2vec
# ----------
( X <- fit_mds$conf )
Y <- scale(extvar, scale = TRUE)
extvar <- temperature[,13]
# biplotmds function standardized these external variables and return the standardized regression coefficients
# (as well as the R^2 vector)
mdsbi <- biplotmds(fit_mds, extvar = extvar)
cormat_v <- psych::cor2dist(cor(temperature[,1:12]))
# individual
cormat_i <- psych::cor2dist(cor(t(temperature[,1:12])))
fit_mds <- mds(cormat_v, type = "interval")
fit_mds
summary(fit_mds)
# ----------
# 13: "Annual"
extvar <- temperature[,13]
fit_mds <- mds(cormat_v, type = "interval")
fit_mds
summary(fit_mds)
extvar <- temperature[,13]
mdsbi <- biplotmds(fit_mds, extvar = extvar)
temperature[,13]
mdsbi$coef
res.ca <- CA(temperature[,1:13], ind.sup = 24:35, quanti.sup = 13:16, quali.sup = 17)
# main results: inertia associated with each component, coordinates, contributions,
# and representation qualities of the rows and columns
summary(res.ca)
res.ca <- CA(temperature, ind.sup = 24:35, quanti.sup = 13:16, quali.sup = 17)
summary(res.ca)
res.ca <- CA(temperature[1:23,], quanti.sup = 13:16, quali.sup = 17)
# main results: inertia associated with each component, coordinates, contributions,
# and representation qualities of the rows and columns
summary(res.ca)
par(mfrow = c(1,1))
barplot(res.ca$eig[,1], main = "Eigenvalues", names.arg = paste("dim", 1:nrow(res.ca$eig)))
round(res.ca$col$contrib[rev(order(res.ca$col$contrib[,1])), 1], digits = 5)
round(res.ca$col$contrib[rev(order(res.ca$col$contrib[,2])), 2], digits = 5)
round(res.ca$row$contrib[rev(order(res.ca$row$contrib[,1])), 1], digits = 5)
round(res.ca$row$contrib[rev(order(res.ca$row$contrib[,2])), 2], digits = 5)
round(res.ca$col$cos2[rev(order(res.ca$col$cos2[,1])), 1], digits = 5)
# ----------
# 2nd dimension
round(res.ca$col$cos2[rev(order(res.ca$col$cos2[,2])), 2], digits = 5)
par(mfrow = c(1,1))
plot(res.ca, invisible = c("col"), cex = 0.7)
par(mfrow = c(1,1))
plot(res.ca, invisible = c("row"), cex = 0.7)
par(mfrow = c(1,1))
# ----------
plot(res.ca, choix = "quanti.sup", cex = 0.7)
library(anacor)
# scaling: first one corresponds to the method for row scaling, the second for column scaling
fit_anass <- anacor(temperature[1:23,1:12], scaling = c("standard", "standard"))
fit_anasb <- anacor(temperature[1:23,1:12], scaling = c("standard", "Benzecri"))
fit_anabs <- anacor(temperature[1:23,1:12], scaling = c("Benzecri", "standard"))
fit_anabb <- anacor(temperature[1:23,1:12], scaling = c("Benzecri", "Benzecri"))
graphics.off()
par(mfrow = c(2,2))
plot(fit_anass, main = "Symmetric CA Map", asp = NULL, arrows = c(FALSE, TRUE))
plot(fit_anasb, main = "Asymmetric CA Map", asp = NULL, arrows = c(FALSE, TRUE))
plot(fit_anabs, main = "Asymmetric CA Map", asp = NULL, arrows = c(FALSE, TRUE))
plot(fit_anabb, main = "Symmetric CA Map", asp = NULL, arrows = c(FALSE, TRUE))
fit_anass$eigen.values
fit_anabb$eigen.values
sqrt(fit_anass$eigen.values)
library(ca)
fit_ca <- ca(temperature[1:23,1:12])
graphics.off()
par(mfrow = c(2,2))
plot(fit_ca, arrows = c(FALSE, TRUE))
plot(fit_ca, arrows = c(FALSE, TRUE), map = "rowprincipal", main = "rowprincipal")
plot(fit_ca, arrows = c(TRUE, FALSE), map = "colprincipal", main = "colprincipal")
graphics.off()
par(mfrow = c(2,2))
# rows shown in principal coordinates and the columns in standard coordinates multiplied by the columns mass of the corresponding point
plot(fit_ca, arrows = c(TRUE, FALSE), map = "rowgab", main = "rowgab")
# columns shown in principal coordinates and the rows in standard coordinates multiplied by the rows mass of the corresponding point
plot(fit_ca, arrows = c(FALSE, TRUE), map = "colgab", main = "colgab")
# Show more directly the contributions of the vectors to the low-dimensional solution
# provide a reconstruction of the standardized residuals from independence, using the points in standard coordinates multiplied by the square root of the corresponding masses
plot(fit_ca, arrows = c(TRUE, FALSE), map = "rowgreen", main = "rowgreen")
plot(fit_ca, arrows = c(FALSE, TRUE), map = "colgreen", main = "colgreen")
par(mfrow = c(1,1))
plot(fit_ca, map = "rowgreen", main = "rowgreen")
plot(fit_ca, map = "colgreen", main = "colgreen")
setwd("//media//kswada//MyFiles//R//chicken2")
packages <- c("dplyr", "MPsychoR", "FactoMineR")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
chicken <- read.table("chicken.csv", header = TRUE, sep = ";", dec = ".", row.names = 1)
str(chicken)
dim(chicken)
car::some(chicken)
diet <- as.factor(c(rep("N", 6), rep("F16", 5), rep("F16R5", 8), rep("F16R16", 9), rep("F48", 6), rep("F48R24", 9))
diet <- as.factor(c(rep("N", 6), rep("F16", 5), rep("F16R5", 8), rep("F16R16", 9), rep("F48", 6), rep("F48R24", 9)))
diet <- as.factor(c(rep("N", 6), rep("F16", 5), rep("F16R5", 8), rep("F16R16", 9), rep("F48", 6), rep("F48R24", 9)))
chicken <- read.table("chicken.csv", header = TRUE, sep = ";", dec = ".", row.names = 1)
str(chicken)
dim(chicken)
car::some(chicken)
# ----------
chicken <- as.data.frame(t(chicken))
diet <- as.factor(c(rep("N", 6), rep("F16", 5), rep("F16R5", 8), rep("F16R16", 9), rep("F48", 6), rep("F48R24", 9)))
chicken <- cbind.data.frame(diet, chicken)
colnames(chicken)[1] <- "Diet"
car::some(chicken)
dim(chicken)
hist(apply(chicken, 2, FUN = mean))
apply(chicken, 2, FUN = mean)
dim(chicken)
str(chicken)
apply(chicken, 2, FUN = mean)
apply(chicken, 2, FUN = mean, na.rm = TRUE)
warnings()
apply(chicken, 1, FUN = mean, na.rm = TRUE)
mean(chicken[,1])
mean(chicken[,1], na.rm = TRUE)
str(chicken)
mean(chicken[,2], na.rm = TRUE)
apply(chicken[,-1], 1, FUN = mean, na.rm = TRUE)
apply(chicken[,-1], 2, FUN = mean, na.rm = TRUE)
hist(apply(chicken[,-1], 2, FUN = mean, na.rm = TRUE))
hist(apply(chicken[,-1], 2, FUN = sd, na.rm = TRUE))
pca_chic1 <- prcomp(chicken[,-1])
pca_chic2 <- prcomp(chicken[,-1], scale = TRUE)
summary(pca_chic1)
summary(pca_chic2)
op <- par(mfrow = c(1,2))
biplot(pca_chic1, pc.biplot = TRUE, cex = c(0.6, 0.8), col = c("gray", "coral1"), arrow.len = 0.05,
main = "Biplot (Unstandardized)", xlim = c(-4, 4), asp = 1, cex.axis = 0.8)
biplot(pca_chic2, pc.biplot = TRUE, cex = c(0.6, 0.8), col = c("gray", "coral1"), arrow.len = 0.05,
main = "Biplot (Standardized)", asp = 1, cex.axis = 0.8)
layout(1)
par(op)
op <- par(mfrow = c(2,2), mar = c(4, 3, 4, 1))
biplot(pca_chic1, pc.biplot = TRUE, cex = c(0.6, 0.8), col = c("gray", "coral1"), arrow.len = 0.05,
main = expression(paste("Biplot (Unstandardized, ", alpha, "=0)")), scale = 0, cex.axis = 0.8)
abline(h = 0, v = 0, col = "gray", lty = 2)
biplot(pca_chic1, pc.biplot = TRUE, cex = c(0.6, 0.8), col = c("gray", "coral1"), arrow.len = 0.05,
main = expression(paste("Biplot (Unstandardized, ", alpha, "=1)")), scale = 1, cex.axis = 0.8)
abline(h = 0, v = 0, col = "gray", lty = 2)
biplot(pca_chic2, pc.biplot = TRUE, cex = c(0.6, 0.8), col = c("gray", "coral1"), arrow.len = 0.05,
main = expression(paste("Biplot (Standardized, ", alpha, "=0)")), scale = 0, cex.axis = 0.8)
abline(h = 0, v = 0, col = "gray", lty = 2)
biplot(pca_chic2, pc.biplot = TRUE, cex = c(0.6, 0.8), col = c("gray", "coral1"), arrow.len = 0.05,
main = expression(paste("Biplot (Standardized, ", alpha, "=1)")), scale = 1, cex.axis = 0.8)
abline(h = 0, v = 0, col = "gray", lty = 2)
par(op)
graphics.off()
par(mfrow=c(1,2))
res.pca <- FactoMineR::PCA(chicken, quali.sup = 1)
summary(res.pca, nb.dec = 2)
summary(res.pca, nb.dec = 3)
res.pca$eig
# ----------
par(mfrow=c(1,1))
barplot(res.pca$eig[,1], main = "Eigenvalues", names.arg = paste("dim", 1:nrow(res.pca$eig)))
par(mfrow=c(1,1))
plot(res.pca, invisible = "var")
par(mfrow=c(1,1))
plot(res.pca, habillage = 1, invisible = "var", cex = 0.7)
res.pca$ind$coord
round(sort(res.pca$ind$contrib[,1], decreasing = TRUE), digits = 3)
round(sort(res.pca$ind$contrib[,2], decreasing = TRUE), digits = 3)
round(sort(res.pca$ind$contrib[,3], decreasing = TRUE), digits = 3)
round(sort(res.pca$ind$contrib[,4], decreasing = TRUE), digits = 3)
round(sort(res.pca$ind$contrib[,1], decreasing = TRUE), digits = 3)
round(sort(res.pca$ind$contrib[,2], decreasing = TRUE), digits = 3)
plot(res.pca, choix = "ind", axes = 3:4)
plot(res.pca, habillage = 1, invisible = "var", cex = 0.7, axes = 3:4)
par(mfrow=c(1,1))
plot(res.pca, choix = "var", invisible = "var")
points(res.pca$var$coord[,1:2], cex = 0.5)
par(mfrow=c(1,1))
plot(res.pca, choix = "var", invisible = "var")
points(res.pca$var$coord[,1:2], pch = ".")
par(mfrow=c(1,1))
plot(res.pca, choix = "var", label = "none")
par(mfrow=c(1,1))
plot(res.pca, choix = "var", invisible = "var")
points(res.pca$var$coord[,1:2], pch = ".")
res.pca$quali.sup
res.pca$quali.sup
plotellipses(res.pca, cex = 0.8)
plotellipses(res.pca, cex = 0.8, axes = 3:4)
round(sort(res.pca$var$contrib[,1], decreasing = TRUE), digits = 3)
plot(res.pca, choix = "var", axes = 3:4)
par(mfrow=c(1,1))
plot(res.pca, choix = "var")
res.pca$var$coord
plot(res.pca, choix = "var", axes = 3:4)
plot(res.pca, choix = "var", invisible = "var", axes = 3:4)
points(res.pca$var$coord[,3:4], pch = ".")
plot(res.pca, habillage = 1, invisible = "var", cex = 0.7, axes = 3:4)
res.pca$quali.sup
plotellipses(res.pca, cex = 0.8)
plotellipses(res.pca, cex = 0.8, bary = TRUE)
plotellipses(res.pca, cex = 0.8, axes = 3:4)
plotellipses(res.pca, cex = 0.8, axes = 3:4)
dimdesc(res.pca)
dimdesc(res.pca)$Dim.1
dimdesc(res.pca)$Dim.1
dimdesc(res.pca)
dimdesc(res.pca, proba = 1e-5)
dimdesc(res.pca, proba = 0.2)
cormat_v <- psych::cor2dist(cor(chicken[,-1]))
cormat_i <- psych::cor2dist(cor(t(chicken[,-1])))
fitv_i <- mds(cormat_v, type = "interval")
fiti_i <- mds(cormat_i, type = "interval")
fiti_o <- mds(cormat_i, type = "ordinal")
fiti_i
fiti_o
plot(fiti_i)
plot(fiti_o)
plot(fiti_i)
plot(fiti_o)
res.ca <- CA(chicken, quali.sup = 1)
chicken
res.ca <- CA(chicken, quali.sup = 1)
fit_anass <- anacor(chicken[,-1], scaling = c("standard", "standard"))
load("/tmp/mozilla_kswada0/vouchers.rda")
vouchers
data.frame(vouchers)
write.table(vouchers, file = "vouchers.txt", row.names = F, quote = F)
write.table(vouchers, file = "vouchers.txt", row.names = F, quote = F, sep = "\t")
