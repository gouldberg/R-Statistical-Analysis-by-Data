chisq.test(wine[1:(nrow(wine)-1), 1:(ncol(wine)-1)])
vcd::assocstats(wine[1:(nrow(wine)-1), 1:(ncol(wine)-1)])
vcd::assocstats(data.frame(wine[1:(nrow(wine)-1), 1:(ncol(wine)-1)]))
vcd::assocstats(wine[1:(nrow(wine)-1), 1:(ncol(wine)-1)])
par(mfrow = c(1,1))
barplot(res.ca$eig[,1], main = "Eigenvalues", names.arg = paste("dim", 1:nrow(res.ca$eig)))
par(mfrow = c(1,2))
plot(res.ca, axes = 3:4, invisible = "col")
plot(res.ca, axes = 3:4, invisible = "row")
res.ca$row$coord[,c("Dim 3", "Dim 4")]
res.ca$col$coord[,c("Dim 3", "Dim 4")]
coord.col <- sweep(res.ca$col$coord, 2, sqrt(res.ca$eig[,1]), FUN = "*")
coord.row <- sweep(res.ca$row$coord, 2, sqrt(res.ca$eig[,1]), FUN = "*")
# ----------
graphics.off()
par(mfrow = c(1,2))
plot(res.ca, invisible = "col")
points(coord.col, pch = 17, col = "red")
text(coord.col, rownames(coord.col), col = "red")
plot(res.ca, invisible = "row")
points(coord.row, pch = 20, col = "blue")
text(coord.row, rownames(coord.row), col = "blue")
par(mfrow = c(1,1))
plot(res.ca)
summary(res.ca, nbelements = Inf)
round(res.ca$col$contrib[rev(order(res.ca$col$contrib[,1])), 1], digits = 5)
round(res.ca$col$contrib[rev(order(res.ca$col$contrib[,2])), 2], digits = 5)
sum(wine)
wine
tot <- 245
res.ca$call$marge.row
res.ca$call$marge.row * tot
res.ca$call$marge.col
res.ca$call$marge.col * tot
summary(res.ca, nbelements = Inf, ncp = 2)
help(summary.CA)
distmat <- psych::cor2dist(cor(wine[1:(nrow(wine)-1), 1:(ncol(wine)-1)]))
hist(as.vector(distmat))
distmat2 <- 1 - cor(wine[1:(nrow(wine)-1), 1:(ncol(wine)-1)])
library(smacof)
fit_1i <- mds(distmat, type = "interval")
fit_1o <- mds(distmat, type = "ordinal")
fit_2i <- mds(distmat2, type = "interval")
fit_2o <- mds(distmat2, type = "ordinal")
fit
fit2
# ----------
par(mfrow = c(2, 2))
plot(fit_1i, main = "config 1i")
plot(fit_1o, main = "config 1o")
plot(fit_2i, main = "config 2i")
plot(fit_2o, main = "config 2o")
distmat <- psych::cor2dist(cor(t(wine[1:(nrow(wine)-1), 1:(ncol(wine)-1)])))
distmat2 <- 1 - cor(t(wine[1:(nrow(wine)-1), 1:(ncol(wine)-1)]))
library(smacof)
fit_1i <- mds(distmat, type = "interval")
fit_1o <- mds(distmat, type = "ordinal")
fit_2i <- mds(distmat2, type = "interval")
fit_2o <- mds(distmat2, type = "ordinal")
fit
fit2
# ----------
par(mfrow = c(2, 2))
plot(fit_1i, main = "config 1i")
plot(fit_1o, main = "config 1o")
plot(fit_2i, main = "config 2i")
plot(fit_2o, main = "config 2o")
distmat <- psych::cor2dist(cor(t(wine[1:(nrow(wine)-1), 1:(ncol(wine)-1)])))
distmat2 <- 1 - cor(t(wine[1:(nrow(wine)-1), 1:(ncol(wine)-1)]))
fit_1i <- mds(distmat, type = "interval")
fit_1o <- mds(distmat, type = "ordinal")
fit_2i <- mds(distmat2, type = "interval")
fit_2o <- mds(distmat2, type = "ordinal")
par(mfrow = c(2, 2))
plot(fit_1i, main = "config 1i")
plot(fit_1o, main = "config 1o")
plot(fit_2i, main = "config 2i")
plot(fit_2o, main = "config 2o")
distmat <- psych::cor2dist(cor(wine[1:(nrow(wine)-1), 1:(ncol(wine)-1)]))
# distmat <- psych::cor2dist(cor(t(wine[1:(nrow(wine)-1), 1:(ncol(wine)-1)])))
# but note that distances are clustered around 1.5 ...
hist(as.vector(distmat))
# ----------
# try other distance
distmat2 <- 1 - cor(wine[1:(nrow(wine)-1), 1:(ncol(wine)-1)])
# distmat2 <- 1 - cor(t(wine[1:(nrow(wine)-1), 1:(ncol(wine)-1)]))
# ------------------------------------------------------------------------------
# Multidimensional Scaling by each category:  by dissimilarity matrix calculated from correlations
# ------------------------------------------------------------------------------
library(smacof)
fit_1i <- mds(distmat, type = "interval")
fit_1o <- mds(distmat, type = "ordinal")
fit_2i <- mds(distmat2, type = "interval")
fit_2o <- mds(distmat2, type = "ordinal")
# ----------
par(mfrow = c(2, 2))
plot(fit_1i, main = "config 1i")
plot(fit_1o, main = "config 1o")
plot(fit_2i, main = "config 2i")
plot(fit_2o, main = "config 2o")
# -->
fit_1o$confdist
# Disparities (transformed proximities, approximated distances, d-hats)
fit_1o$dhat
# ----------
graphics.off()
par(mfrow=c(2,2))
plot(fit_1i, plot.type = "Shepard", main = "1-interval")
plot(fit_1o, plot.type = "Shepard", main = "1-ordinal")
plot(fit_2i, plot.type = "Shepard", main = "2-interval")
plot(fit_2o, plot.type = "Shepard", main = "2-ordinal")
fit_1i$stress
fit_1o$stress
fit_2i$stress
fit_2o$stress
ex <- randomstress(n = dim(distmat)[1], ndim = 2, nrep = 500, type = "interval")
ex2 <- randomstress(n = dim(distmat2)[1], ndim = 2, nrep = 500, type = "ordinal")
# ----------
quantile(ex, c(0.05, 0.95))
fit_1i$stress
quantile(ex2, c(0.05, 0.95))
fit_2o$stress
# -->
# The stress value is smaller than these benchmark values.
# ----------
graphics.off()
par(mfrow=c(2,1), mar = c(2,2,2,2))
hist(ex)
hist(ex2)
psych::describe(ex)
psych::describe(ex2)
# ----------
# The stress value is significant at the 5% level by 100 permutation test (stricter than the classical random Stress norms)
ex <- permtest(fit_1i)
ex2 <- permtest(fit_2o)
graphics.off()
par(mfrow=c(2,1), mar = c(2,2,2,2))
hist(ex$stressvec, xlim = c(ex$stress.obs - 0.05, max(ex$stressvec) + 0.05))
abline(v = ex$stress.obs, col = "red")
points(ex$stress.obs, 0, cex = 2, pch = 16, col = "red")
hist(ex2$stressvec, xlim = c(ex2$stress.obs - 0.05, max(ex2$stressvec) + 0.05))
abline(v = ex2$stress.obs, col = "red")
points(ex2$stress.obs, 0, cex = 2, pch = 16, col = "red")
quantile(ex, c(0.05, 0.95))
fit_1i$stress
quantile(ex2, c(0.05, 0.95))
fit_2o$stress
ex <- randomstress(n = dim(distmat)[1], ndim = 2, nrep = 500, type = "interval")
ex2 <- randomstress(n = dim(distmat2)[1], ndim = 2, nrep = 500, type = "ordinal")
# ----------
quantile(ex, c(0.05, 0.95))
fit_1i$stress
quantile(ex2, c(0.05, 0.95))
fit_2o$stress
stress_bydim <- c()
ranstress_bydim_med <- c()
ranstress_bydim_q5 <- c()
ranstress_bydim_q95 <- c()
# we try for distmat2
diss <- distmat2
maxdim <- 10
for(ndim in 1:maxdim){
stress <- mds(delta = diss, ndim = ndim, type = "ordinal")$stress
stress_bydim <- c(stress_bydim, stress)
ex <- randomstress(n = dim(diss)[1], ndim = ndim, nrep = 100, type = "ordinal")
ranstress_bydim_med <- c(ranstress_bydim_med, median(ex))
ranstress_bydim_q5 <- c(ranstress_bydim_q5, unname(quantile(ex, 0.05)))
ranstress_bydim_q95 <- c(ranstress_bydim_q95, unname(quantile(ex, 0.95)))
}
# ----------
graphics.off()
par(mfrow=c(1,1))
plot(1:maxdim, stress_bydim, type = "b", lty = 1, lwd = 1, ylim = c(0, 0.50))
lines(1:maxdim, ranstress_bydim_med, lty = 1, lwd = 1, col = "gray")
lines(1:maxdim, ranstress_bydim_q5, lty = 2, lwd = 1, col = "gray")
lines(1:maxdim, ranstress_bydim_q95, lty = 2, lwd = 1, col = "gray")
stress_bydim <- c()
ranstress_bydim_med <- c()
ranstress_bydim_q5 <- c()
ranstress_bydim_q95 <- c()
# we try for distmat2
diss <- distmat2
maxdim <- 5
for(ndim in 1:maxdim){
stress <- mds(delta = diss, ndim = ndim, type = "ordinal")$stress
stress_bydim <- c(stress_bydim, stress)
ex <- randomstress(n = dim(diss)[1], ndim = ndim, nrep = 100, type = "ordinal")
ranstress_bydim_med <- c(ranstress_bydim_med, median(ex))
ranstress_bydim_q5 <- c(ranstress_bydim_q5, unname(quantile(ex, 0.05)))
ranstress_bydim_q95 <- c(ranstress_bydim_q95, unname(quantile(ex, 0.95)))
}
graphics.off()
par(mfrow=c(1,1))
plot(1:maxdim, stress_bydim, type = "b", lty = 1, lwd = 1, ylim = c(0, 0.50))
lines(1:maxdim, ranstress_bydim_med, lty = 1, lwd = 1, col = "gray")
lines(1:maxdim, ranstress_bydim_q5, lty = 2, lwd = 1, col = "gray")
lines(1:maxdim, ranstress_bydim_q95, lty = 2, lwd = 1, col = "gray")
fit_1i$spp
fit_2o$spp
# ----------
# Bubble plot
graphics.off()
par(mfrow=c(1,2))
plot(fit_1i, plot.type = "bubbleplot")
plot(fit_2o, plot.type = "bubbleplot")
graphics.off()
par(mfrow=c(1,2))
plot(fit_1i, plot.type = "stressplot")
plot(fit_2o, plot.type = "stressplot")
sum(res.ca$eig[,"eigenvalue"])
summary(res.ca, nbelements = Inf, ncp = 2)
res.ca <- CA(wine, col.sup = 11, row.sup = nrow(wine))
par(mfrow = c(1,2))
plot(res.ca, invisible = "col")
plot(res.ca, invisible = "row")
wine[,"6C-AyvSukex"]
wine[,"6C-AubSilex"]
data.frame(wine[,"6C-AubSilex"])
wine
help(permtest)
help(randomstress)
death <- read.table("death.csv", header = TRUE, row.names = 1, sep = ";")
str(death)
setwd("//media//kswada//MyFiles//R//death")
packages <- c("dplyr", "MPsychoR", "FactoMineR")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
# ------------------------------------------------------------------------------
# data:  death
#   -
# ------------------------------------------------------------------------------
death <- read.table("death.csv", header = TRUE, row.names = 1, sep = ";")
str(death)
dim(death)
head(death)
colnames(death) <- c("0_1", "1_4", "5_14", "15_24", "25_34", "35_44", "45_54", "55_64", "65_74", "75_84", "85_94", "95+")
spineplot(death)
spineplot(as.matrix(death))
par(mfrow = c(1,1))
spineplot(as.matrix(death))
death
chisq.test(death)
res.ca <- CA(death, row.sup = 66:nrow(wine), graph = FALSE)
round(res.ca$call$marge.col, 3)
ddr <- rbind(death, apply(death, 2, sum))
ddr
dim(death)
rownames(ddr)[223] <- "Mean Profile"
ddr
round(addmargins(prop.table(as.matrix(ddr), margin = 1), margin = 2), 3)
ddr <- rbind(death, apply(death, 2, sum))
dim(ddr)
dim(round(addmargins(prop.table(as.matrix(ddr), margin = 1), margin = 2), 3))
round(addmargins(prop.table(as.matrix(ddr), margin = 1), margin = 2), 3)[223,]
ddr <- rbind(death, apply(death, 2, sum))
dim(ddr)
rownames(ddr)[223] <- "Mean Profile"
ddr
round(addmargins(prop.table(as.matrix(ddr), margin = 1), margin = 2), 3)[223,]
ddc <- cbind(death, apply(death, 1, sum))
colnames(ddc)[13] <- "Mean Profile"
ddc
round(addmargins(prop.table(as.matrix(ddc), margin = 2), margin = 1), 3)[,13]
dim(ddc)
t(round(addmargins(prop.table(as.matrix(ddc), margin = 2), margin = 1), 3)[,13])
names(death)
rownames(death)
ddr <- rbind(death[,1:65], apply(death[,1:65], 2, sum))
rownames(ddr)[223] <- "Mean Profile"
ddr
round(addmargins(prop.table(as.matrix(ddr), margin = 1), margin = 2), 3)[223,]
ddr <- rbind(death[,1:65], apply(death[,1:65], 2, sum))
rownames(ddr)[66] <- "Mean Profile"
ddr <- rbind(death[,1:65], apply(death[,1:65], 2, sum))
ddr <- rbind(death[,1:65], apply(death[,1:65], 2, sum))
death[,1:65]
ddr <- rbind(death[1:65,], apply(death[1:65,], 2, sum))
rownames(ddr)[66] <- "Mean Profile"
ddr
round(addmargins(prop.table(as.matrix(ddr), margin = 1), margin = 2), 3)[223,]
ddr <- rbind(death[1:65,], apply(death[1:65,], 2, sum))
dim(ddr)
rownames(ddr)[66] <- "Mean Profile"
ddr
round(addmargins(prop.table(as.matrix(ddr), margin = 1), margin = 2), 3)[66,]
ddc <- cbind(death[1:65,], apply(death[1:65,], 1, sum))
colnames(ddc)[13] <- "Mean Profile"
ddc
t(round(addmargins(prop.table(as.matrix(ddc), margin = 2), margin = 1), 3)[,13])
round(res.ca$call$marge.col, 3)
round(addmargins(prop.table(as.matrix(ddr), margin = 1), margin = 2), 3)[66,]
# Correspondence analysis CA first by "graph = FALSE"
res.ca <- CA(death, row.sup = 66:nrow(death), graph = FALSE)
# ----------
round(res.ca$call$marge.col, 3)
round(addmargins(prop.table(as.matrix(ddc), margin = 2), margin = 1), 3)
round(res.ca$call$marge.row, 3)
round(addmargins(prop.table(as.matrix(ddc), margin = 2), margin = 1), 3)
par(las = 1, mfrow = c(1,2))
barplot(res.ca$call$marge.col, horiz = TRUE)
barplot(res.ca$call$marge.row[order(res.ca$call$marge.row)], horiz = TRUE)
par(las = 0)
summary(res.ca, nb.dec = 4)
res.ca = CA(death, row.sup = 66:nrow(death))
summary(res.ca, nb.dec = 4)
res.ca = CA(death, row.sup = 66:nrow(death), plot = FALSE)
summary(res.ca, nb.dec = 4)
res.ca = CA(death, row.sup = 66:nrow(death), graph = FALSE)
summary(res.ca, nb.dec = 4)
barplot(res.ca$eig[,1], main = "Eigenvalues", names.arg = 1:nrow(res.ca$eig))
par(mfrow = c(1,1))
barplot(res.ca$eig[,1], main = "Eigenvalues", names.arg = 1:nrow(res.ca$eig))
chisq.test(death)
names(chisq.test(death))
chisq.test(death)$statistic / sum(death)
summary(res.ca, nb.dec = 4)
res.ca$eig
sum(res.ca$eig[,1])
chisq.test(death)$statistic / sum(death)
sum(death)
death
sum(death[,1:66])
sum(death[1:66,])
sum(death[1:66,])
chisq.test(death)$statistic / sum(death[1:66,])
( sum(death[1:65,])
sum(death[1:65,])
sum(death[1:65,])
dim(death)
chisq.test(death)$statistic / ( sum(death[1:65,]) * min(12-1, 65-1) )
sum(res.ca$eig[,1])
chisq.test(death)$statistic / sum(death[1:65,])
chisq.test(death)$statistic / sum(death[1:65,]) / min(12-1, 65-1)
chisq.test(death)$statistic
chisq.test(death[1:65,])$statistic / sum(death[1:65,]) / min(12-1, 65-1)
chisq.test(death[1:65,])$statistic / sum(death[1:65,])
chisq.test(death[1:65,])$statistic
sum(death[1:65,])
death
colnames(death)
sum(death[1:65,])
chisq.test(death[1:65,])$statistic / sum(death[1:65,])
sum(res.ca$eig[,1])
sum(res.ca$eig[,1])
chisq.test(death[1:65,])$statistic / sum(death[1:65,])
( chisq.test(death[1:65,])$statistic / sum(death[1:65,]) ) / min(12-1, 65-1)
min(12-1, 65-1)
dim(death)
1.0213 / 0.305
sqrt( ( chisq.test(death[1:65,])$statistic / sum(death[1:65,]) ) / min(12-1, 65-1) )
# Correspondence analysis CA first by "graph = FALSE"
res.ca <- CA(death, row.sup = 66:nrow(death), graph = FALSE)
# ----------
# row profiles (age group margins)
round(res.ca$call$marge.col, 3)
round(addmargins(prop.table(as.matrix(ddr), margin = 1), margin = 2), 3)[66,]
# ----------
# column profiles (age group margins)
round(res.ca$call$marge.row, 3)
round(addmargins(prop.table(as.matrix(ddc), margin = 2), margin = 1), 3)
# ----------
par(las = 1, mfrow = c(1,2))
barplot(res.ca$call$marge.col, horiz = TRUE)
barplot(res.ca$call$marge.row[order(res.ca$call$marge.row)], horiz = TRUE)
par(las = 0)
setwd("//media//kswada//MyFiles//R//death")
packages <- c("dplyr", "MPsychoR", "FactoMineR")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
# ------------------------------------------------------------------------------
# data:  death
#   -
# ------------------------------------------------------------------------------
death <- read.table("death.csv", header = TRUE, row.names = 1, sep = ";")
str(death)
dim(death)
head(death)
colnames(death) <- c("0_1", "1_4", "5_14", "15_24", "25_34", "35_44", "45_54", "55_64", "65_74", "75_84", "85_94", "95+")
res.ca = CA(death, row.sup = 66:nrow(death), graph = FALSE)
summary(res.ca, nb.dec = 4)
round(res.ca$call$marge.col, 3)
round(addmargins(prop.table(as.matrix(ddr), margin = 1), margin = 2), 3)[66,]
round(res.ca$call$marge.row, 3)
round(addmargins(prop.table(as.matrix(ddc), margin = 2), margin = 1), 3)
par(las = 1, mfrow = c(1,2))
barplot(res.ca$call$marge.col, horiz = TRUE)
barplot(res.ca$call$marge.row[order(res.ca$call$marge.row)], horiz = TRUE)
par(las = 0)
100 * res.ca$col$inertial / sum(res.ca$col$inertia)
res.ca = CA(death, row.sup = 66:nrow(death), graph = FALSE)
summary(res.ca, nb.dec = 4)
100 * res.ca$col$inertial / sum(res.ca$col$inertia)
100 * res.ca$col$inertia / sum(res.ca$col$inertia)
sum(res.ca$col$inertia)
100 * res.ca$row$inertia[rev(order(res.ca$row$inertia))] / sum(res.ca$row$inertia)
death <- read.table("death.csv", header = TRUE, row.names = 1, sep = ";")
str(death)
dim(death)
head(death)
colnames(death) <- c("0_1", "1_4", "5_14", "15_24", "25_34", "35_44", "45_54", "55_64", "65_74", "75_84", "85_94", "95+")
res.ca = CA(death, row.sup = 66:nrow(death), graph = FALSE)
summary(res.ca, nb.dec = 4)
# ----------
# Decompose inertia by column
sum(res.ca$col$inertia)
100 * res.ca$col$inertia / sum(res.ca$col$inertia)
death <- as.matrix(death)
colnames(death) <- c("0_1", "1_4", "5_14", "15_24", "25_34", "35_44", "45_54", "55_64", "65_74", "75_84", "85_94", "95+")
res.ca = CA(death, row.sup = 66:nrow(death), graph = FALSE)
summary(res.ca, nb.dec = 4)
# ----------
# Decompose inertia by column
sum(res.ca$col$inertia)
100 * res.ca$col$inertia / sum(res.ca$col$inertia)
100 * res.ca$row$inertia[rev(order(res.ca$row$inertia))] / sum(res.ca$row$inertia)
death <- read.table("death.csv", header = TRUE, row.names = 1, sep = ";")
str(death)
dim(death)
head(death)
colnames(death) <- c("0_1", "1_4", "5_14", "15_24", "25_34", "35_44", "45_54", "55_64", "65_74", "75_84", "85_94", "95+")
# ------------------------------------------------------------------------------
# Decompose inertia by row and by column
# ------------------------------------------------------------------------------
res.ca = CA(death, row.sup = 66:nrow(death), graph = FALSE)
summary(res.ca, nb.dec = 4)
# ----------
# Decompose inertia by column
sum(res.ca$col$inertia)
100 * res.ca$col$inertia / sum(res.ca$col$inertia)
# -->
# The inertia for the age group 0-1 year is high, as 52.6% of the total inertia is due to this age group.
# Half of the relationship between age and cause of death therefore resides in the characteristic of this age group,
# which will therefore have a strong influence on the results of the CA.
# The two other age groups which contribute the most to this relationship are 15 - 24 years and 25 - 34 years.
# These age ranges have very specific mortality profiles and will also strongly influence the CA.
# ----------
100 * res.ca$row$inertia[rev(order(res.ca$row$inertia))] / sum(res.ca$row$inertia)
cbind.data.frame(res.ca$call$marge.col)
cbind(res.ca$call$marge.col)
res.ca$call$marge.col
bb <- round(cbind.data.frame(res.ca$call$marge.col,
sqrt(res.ca$col$inertia / res.ca$call$marge.col),
res.ca$col$inertia,
res.ca$col$inertia / sum(res.ca$col$inertia)), 4)
colnames(bb) <- c("Weight", "Distance", "Inertia", "% of inertia")
bb <- round(cbind.data.frame(res.ca$call$marge.col,
sqrt(res.ca$col$inertia / res.ca$call$marge.col),
res.ca$col$inertia,
res.ca$col$inertia / sum(res.ca$col$inertia)), 4)
colnames(bb) <- c("Weight", "Distance", "Inertia", "% of inertia")
bb
par(mfrow = c(1,2))
plot(res.ca, invisible = "row")
plot(res.ca, invisible = "column")
par(mfrow = c(1,2))
plot(res.ca, invisible = "col")
plot(res.ca, invisible = "row")
res.ca = CA(death, row.sup = 66:nrow(death), graph = TRUE)
par(mfrow = c(1,2))
plot(res.ca, invisible = "col")
plot(res.ca, invisible = "row")
res.ca <- CA(death[,1:65], graph = TRUE)
par(mfrow = c(1,2))
plot(res.ca, invisible = "col")
plot(res.ca, invisible = "row")
res.ca <- CA(death[,1:65], graph = TRUE)
setwd("//media//kswada//MyFiles//R//death")
packages <- c("dplyr", "MPsychoR", "FactoMineR")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
# ------------------------------------------------------------------------------
# data:  death
# ------------------------------------------------------------------------------
death <- read.table("death.csv", header = TRUE, row.names = 1, sep = ";")
str(death)
dim(death)
head(death)
colnames(death) <- c("0_1", "1_4", "5_14", "15_24", "25_34", "35_44", "45_54", "55_64", "65_74", "75_84", "85_94", "95+")
res.ca <- CA(death[1:65,], graph = TRUE)
par(mfrow = c(1,2))
plot(res.ca, invisible = "col")
plot(res.ca, invisible = "row")
par(mfrow = c(1,1))
# plot(res.ca, invisible = "col")
plot(res.ca, invisible = "row")
par(mfrow = c(1,1))
plot(res.ca, invisible = "col")
plot(res.ca)
plot(res.ca, cex = 0.1)
plot(res.ca, cex = 0.5)
plot(res.ca, cex = 0.8)
res$col$contrib
res$row$contrib
res.ca$col$contrib
res.ca$row$contrib
res.ca$col$contrib
res.ca$row$contribu[rev(order(res.ca$row$contrib[,1])),1]
res.ca$row$contrib[rev(order(res.ca$row$contrib[,1])),1]
help(plot.CA)
par(mfrow = c(1,2))
plot(res.ca, invisible = "col", axes = c(2,3))
plot(res.ca, invisible = "row", axes = c(1,2))
par(mfrow = c(1,2))
plot(res.ca, invisible = "col", axes = c(2,3), cex = 0.8)
plot(res.ca, invisible = "row", axes = c(1,2), cex = 0.8)
par(mfrow = c(1,2))
plot(res.ca, invisible = "col", axes = c(2,3), cex = 0.8)
plot(res.ca, invisible = "row", axes = c(2,3), cex = 0.8)
res.ca <- CA(death, row.sup = c(66:nrow(death)), ncp = Inf)
round(dist(res.ca$col$coord), 3)
round(cbind(res.ca$col$contrib[,2:5], res.ca$col$cos2[,2:5]), 3)
cbind(res.ca$row$contrib[,2], res.ca$row$cos[,2], res.ca$call$marge.row)[rev(order(res.ca$row$contrib[,2])),]
round(dist(res.ca$col$coord), 3)
round(cbind(res.ca$col$contrib[,2:5], res.ca$col$cos2[,2:5]), 3)
round(cbind(res.ca$col$contrib[,2:5], res.ca$col$cos2[,2:5]), 3)
