round(res.mca$var$contrib[rev(order(res.mca$var$contrib[,1])), 1], digits = 5)
# ----------
# 2nd dimension
round(res.mca$var$contrib[rev(order(res.mca$var$contrib[,2])), 2], digits = 5)
# Due to the scale of the dataset, representation quality on a given plane is often much weaker compared to the representation qualities obtained in CA (or PCA)
# Representation quality of variables for dimension 1 in descending order.
round(res.mca$var$cos2[rev(order(res.mca$var$cos2[,1])), 1], digits = 5)
round(res.mca$var$cos2[rev(order(res.mca$var$cos2[,2])), 2], digits = 5)
plot(res.mca, invisible = c("var"), label = "none", cex = 0.7)
par(mfrow = c(1,1))
plot(res.mca, invisible = c("var"), col.ind = "black", cex = 0.7)
par(mfrow = c(1,1))
plot(res.mca, choix = c("var"), cex = 0.7)
perfume[,24]
perfume["Shalimar",24]
perfume["Shalimar",]
perfume["Chanel 5",]
perfume["Shalimar",] %>% unique()
perfume["Shalimar",] %>% as.vector() %>% unique()
tmp <- unique(perfume["Shalimar",])
tmp
length(unique(perfume["Shalimar",]))
length(unique(perfume["Shalimar",] %>% as.vecot()))
length(unique(perfume["Shalimar",] %>% as.vector()))
unique(perfume["Shalimar",] %>% as.vector())
car::some(perfume)
perfume[,1:10]
summary(perfume)
Hmisc::describe(perfume)
perfume[,"J31"]
table(perfume$J31)
xtabs(~ J31, data = perfume)
perfume[,"J31"]
perfume[,"J31"]
as.vector(perfume[,"J31"]))
as.vector(perfume[,"J31"])
table(perfume[,"J31"])
t(perfume[,"J31"])
par(mfrow = c(1,1))
plot(res.mca, choix = c("var"), cex = 0.7)
plot(res.mca, choix = c("var"), cex = 0.7, label = "none")
par(mfrow = c(1,1))
# ----------
plot(res.mca, invisible = c("ind", "quali.sup"), cex = 0.7, label = "none")
plot(res.mca, invisible = c("ind", "quali.sup"), cex = 0.7)
plot(res.mca, invisible = c("ind", "quali.sup"), cex = 0.7, label = "none")
plot(res.mca, invisible = c("ind", "quali.sup"), cex = 0.7)
plot(res.mca, invisible = c("ind"), col.var = "black", cex = 0.7, label = "none")
plot(res.mca, invisible = c("ind"), col.var = "black", cex = 0.7)
par(mfrow = c(1,1))
plot(res.mca, choix = c("var"), cex = 0.7)
dimdesc(res.mca)$'Dim 1'$quali
dimdesc(res.mca)$'Dim 1'$category
lapply(dimdesc(res.mca), lapply, round, 4)
lapply(dimdesc(res.mca), lapply, signif, 3)
plotellipses(res.mca, keepvar = c("J31", "J40", "J18", "J93"))
names(perfume)
# keepvar = 25: J31
plotellipses(res.mca, keepvar = 25, label = "none")
perf.mjca <- mjca(perfume, lambda = "Burt")
summary(perf.mjca)
library(ca)
perf.mjca <- mjca(perfume, lambda = "Burt")
summary(perf.mjca)
par(mfrow = c(1,1))
plot(perf.mjca, arrows = c(TRUE, TRUE))
perf.catd <- catdes(perf, num.var = 25)
perf.catd
perf.catd <- catdes(perfume, num.var = 25)
perf.catd
perf.catd$test.chi
par(mfrow = c(1,1))
plot(res.mca, choix = c("var"), cex = 0.7)
( tab <- xtabs(~ J31 + J57, data = perfume) )
perf.catd$category$soft
addmargins(tab)
perf.catd$category$soft
setwd("//media//kswada//MyFiles//R//vietnam")
packages <- c("dplyr", "vcd", "vcdExtra", "MASS", "gpairs")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
# ------------------------------------------------------------------------------
# data:  Vietnam
# ------------------------------------------------------------------------------
data("Vietnam", package = "vcdExtra")
dim(Vietnam)
str(Vietnam)
car::some(Vietnam)
# frequency form in dataframe to table
( vietnam.tab <- xtabs(Freq ~ sex + year + response, data = Vietnam) )
str(vietnam.tab)
str(vietnam.tab)
vietnam.tab
res.mca <- MCA(vietnam.tab)
library(FactoMineR)
graphics.off()
par(mfrow = c(2,2))
res.mca <- MCA(vietnam.tab)
str(Vietnam)
help(expand.dft)
expand.table(Vietnam, freq = "Freq")
Viet3 <- expand.table(Vietnam, freq = "Freq")
str(Viet3)
library(FactoMineR)
graphics.off()
par(mfrow = c(2,2))
res.mca <- MCA(Viet3)
Viet3 <- expand.table(Vietnam, freq = "Freq")
head(Viet3)
str(Viet3)
Viet3$year <- as.character(Viet3$year)
graphics.off()
par(mfrow = c(2,2))
res.mca <- MCA(Viet3)
summary(res.mca)
help(MCA)"MCA"
help(MCA)
res.mca <- MCA(Viet3, method = "Burt")
res.mca <- MCA(Viet3)
# -->
# This command executes the MCA and produces the graph of variables,
# the graph of individuals (featuring the individuals and the categories for the active and supplementary variables)
# as well as the graph of quantitative supplementary variables/
# ----------
summary(res.mca)
graphics.off()
par(mfrow = c(2,2))
res.mca <- MCA(Viet3)
par(mfrow = c(1,1))
barplot(res.mca$eig[,1], main = "Eigenvalues", names.arg = paste("dim", 1:nrow(res.mca$eig)))
round(res.mca$var$contrib[rev(order(res.mca$var$contrib[,1])), 1], digits = 5)
round(res.mca$var$contrib[rev(order(res.mca$var$contrib[,2])), 2], digits = 5)
round(res.mca$var$cos2[rev(order(res.mca$var$cos2[,1])), 1], digits = 5)
round(res.mca$var$cos2[rev(order(res.mca$var$cos2[,2])), 2], digits = 5)
par(mfrow = c(1,1))
plot(res.mca, invisible = c("var", "quali.sup"), cex = 0.7)
par(mfrow = c(1,1))
plot(res.mca, choix = c("var"), cex = 0.7)
par(mfrow = c(1,1))
plot(res.mca, invisible = c("ind", "quali.sup", "quanti.sup"), cex = 0.7)
plot(res.mca, invisible = c("ind"), cex = 0.7)
data("Vietnam", package = "vcdExtra")
dim(Vietnam)
str(Vietnam)
car::some(Vietnam)
# frequency form in dataframe to table
( vietnam.tab <- xtabs(Freq ~ sex + year + response, data = Vietnam) )
str(vietnam.tab)
# ------------------------------------------------------------------------------
# Multiple correspondence analysi by mjca() for 3-way table directly
# ------------------------------------------------------------------------------
viet.mca <- mjca(vietnam.tab, lambda = "Burt")
summary(viet.mca)
# -->
# only 51.3% of the total inertia is accounted for in 2 dimensions.
par(mfrow = c(1,1))
plot(viet.mca)
viet.mca <- mjca(vietnam.tab, lambda = "Burt")
library(ca)
viet.mca <- mjca(vietnam.tab, lambda = "Burt")
summary(viet.mca)
par(mfrow = c(1,1))
plot(viet.mca)
str(Viet3)
res.mca <- MCA(Viet3, quali.sup = 3)
summary(res.mca)
library(FactoMineR)
graphics.off()
par(mfrow = c(2,2))
res.mca <- MCA(Viet3, quali.sup = 3)
summary(res.mca)
par(mfrow = c(1,1))
plot(res.mca, invisible = c("ind"), cex = 0.7)
res.mca <- MCA(Viet3)
# -->
# This command executes the MCA and produces the graph of variables,
# the graph of individuals (featuring the individuals and the categories for the active and supplementary variables)
# as well as the graph of quantitative supplementary variables/
# ----------
summary(res.mca)
# -->
# first 2 dimensions account only 31.36% of the explained inertia.
# ------------------------------------------------------------------------------
# Percentage of inertia associated with a component
# ------------------------------------------------------------------------------
par(mfrow = c(1,1))
barplot(res.mca$eig[,1], main = "Eigenvalues", names.arg = paste("dim", 1:nrow(res.mca$eig)))
# -->
# In MCA, the percentages of inertia associated with the first components are generally much lower than in PCA.
# This is because, in PCA, only the linear relationships are studied: one single component should be sufficient to represent all of the variables
# if they are highly correlated.
# In MCA, we are studying much more general relationships and at least min(Kj-1, Kl-1) dimensions are required in order to represent the relationship between two variables,
# each of which has KJ and Kl categories, respectively.
# ------------------------------------------------------------------------------
# Contributions
# ------------------------------------------------------------------------------
# The larger scale of the dataset does not affect contribution, as this aspect is calculated for each component.
# It should be noted that the contribution of a categorical variable to a given component can be calculated by adding the contributions to these categories.
# The contributions of variables which contributed to the construction of dimension 1 in descending order.
round(res.mca$var$contrib[rev(order(res.mca$var$contrib[,1])), 1], digits = 5)
# ----------
# 2nd dimension
round(res.mca$var$contrib[rev(order(res.mca$var$contrib[,2])), 2], digits = 5)
# ------------------------------------------------------------------------------
# Representation Quality
# ------------------------------------------------------------------------------
# Due to the scale of the dataset, representation quality on a given plane is often much weaker compared to the representation qualities obtained in CA (or PCA)
# Representation quality of variables for dimension 1 in descending order.
round(res.mca$var$cos2[rev(order(res.mca$var$cos2[,1])), 1], digits = 5)
# ----------
# 2nd dimension
round(res.mca$var$cos2[rev(order(res.mca$var$cos2[,2])), 2], digits = 5)
# ------------------------------------------------------------------------------
# Cloud of individuals
# ------------------------------------------------------------------------------
par(mfrow = c(1,1))
plot(res.mca, invisible = c("var"), cex = 0.7)
# -->
# As in most analyses of survey data, the cloud of individuals is made up of many points and our objective is to see if
# we can identify a specific shape, or groups of notable individuals.
# In the example, there are no notable groups of individuals: the cloud of points is a rather consistent shape.
# ------------------------------------------------------------------------------
# Cloud of variables
# ------------------------------------------------------------------------------
par(mfrow = c(1,1))
plot(res.mca, choix = c("var"), cex = 0.7)
# ------------------------------------------------------------------------------
# Cloud of categories
# ------------------------------------------------------------------------------
par(mfrow = c(1,1))
plot(res.mca, invisible = c("ind"), cex = 0.7)
# ------------------------------------------------------------------------------
# Supplementary Elements
# ------------------------------------------------------------------------------
par(mfrow = c(1,1))
plot(res.mca, choix = "quanti.sup", cex = 0.7)
res.mca$quanti.sup$coord
# -->
# The quantitative supplementary variables are represented in the same way as in PCA:
# on a correlation circle using correlation coefficients between the variable and the principla components.
# This variable "age" is not well represented;
# However, the correlation with the second principal component (0.204) is significant due to the great number of individuals.
# Young perple are less likely to buy their tea in specialist shops.
# It can therefore also be said that older people are more likely to buy luxury loose tea in specialist shops.
par(mfrow = c(1,1))
plot(res.mca, choix = "quanti.sup", cex = 0.7)
res.mca$quanti.sup$coord
dimdesc(res.mca)$'Dim 1'$quali
dimdesc(res.mca)$'Dim 1'$category
dimdesc(res.mca)
dimdesc(res.mca)$'Dim 1'$category
apply(dimdesc(res.mca), lapply, round, 4)
lapply(dimdesc(res.mca), lapply, signif, 3)
lapply(dimdesc(res.mca), lapply, round, 4)
plotellipses(res.mca, keepvar = c("sex", "year", "response"))
plotellipses(res.mca, keepvar = c("sex", "year"))
plotellipses(res.mca, keepvar = c("reponse", "year"))
plotellipses(res.mca, keepvar = c("year", "reponse")
plotellipses(res.mca, keepvar = c("year", "reponse"))
plotellipses(res.mca, keepvar = c("year", "reponse"))
plotellipses(res.mca, keepvar = c("year", "sex"))
library(FactoMineR)
# num.var = 18:  "type"
tea.catd <- catdes(Viet3, num.var = 18)
str(Viet3)
viet.catd <- catdes(Viet3, num.var = 2)
viet.catd
viet.catd$test.chi
# num.var = 3:  "response"
viet.catd <- catdes(Viet3, num.var = 2)
viet.catd
# num.var = 3:  "response"
viet.catd <- catdes(Viet3, num.var = 3)
viet.catd
viet.catd$test.chi
( tab <- xtabs(~ response + year, data = Viet3) )
mosaic(tab, gp = shading_Friendly2, gp_arg = list(interpolate = 1:4), labeling = labeling_residuals)
viet.catd$category$year
viet.catd$category$sex
viet.catd
viet.catd$category
viet.catd$category$D
addmargins(tab)
data("Accident", package = "vcdExtra")
dim(Accident)
str(Accident)
car::some(Accident)
( acci.tab <- xtabs(Freq ~ age + result + mode + gender, data = Accident) )
ftable(acci.tab, row.vars = c("age"), col.vars = c("result"))
round(prop.table(ftable(acci.tab, row.vars = c("age"), col.vars = c("result")), 1), digits = 3)
ftable(acci.tab, row.vars = c("mode"), col.vars = c("result"))
round(prop.table(ftable(acci.tab, row.vars = c("age"), col.vars = c("result")), 1), digits = 3)
round(prop.table(ftable(acci.tab, row.vars = c("mode"), col.vars = c("result")), 1), digits = 3)
data.frame(round(prop.table(ftable(acci.tab, row.vars = c("mode"), col.vars = c("result")), 1), digits = 3))
data.frame.table(round(prop.table(ftable(acci.tab, row.vars = c("mode"), col.vars = c("result")), 1), digits = 3))
data.table(round(prop.table(ftable(acci.tab, row.vars = c("mode"), col.vars = c("result")), 1), digits = 3))
data.matrix(round(prop.table(ftable(acci.tab, row.vars = c("mode"), col.vars = c("result")), 1), digits = 3))
str(data.matrix(round(prop.table(ftable(acci.tab, row.vars = c("mode"), col.vars = c("result")), 1), digits = 3)))
as.data.frame(round(prop.table(ftable(acci.tab, row.vars = c("mode"), col.vars = c("result")), 1), digits = 3))
str(as.data.frame(round(prop.table(ftable(acci.tab, row.vars = c("mode"), col.vars = c("result")), 1), digits = 3)))
ftable(acci.tab, row.vars = c("gender"), col.vars = c("result"))
round(prop.table(ftable(acci.tab, row.vars = c("gender"), col.vars = c("result")), 1), digits = 3)
expand.dft(acci.tab)
data.frame(acci.tab)
gpairs::gpairs(expand.dft(acci.tab), diag.pars = list(fontsize = 20), mosaic.pars = list(gp = shading_Friendly, gp_args = list(interpolate = 1:4)))
help(gpairs)
gpairs::gpairs(expand.dft(acci.tab), diag.pars = list(fontsize = 20), mosaic.pars = list(gp = shading_Friendly, gp_args = list(interpolate = 1:10)))
pairs(acci.tab, gp = shading_Friendly2, space = 0.25, gp_args = list(interpolate = 1:4), diag_panel_args = list(offset_varnames = -0.5))
vcd::mosaic(acci.tab, expected = ~ age + mode + gender + result, labeling_args = abbrev, main = "Model: ~ age + mode + gender + result")
abbrev <- list(abbreviate = c(1, FALSE, FALSE))
# complete mutual independence
vcd::mosaic(acci.tab, expected = ~ age + mode + gender + result, labeling_args = abbrev, main = "Model: ~ age + mode + gender + result")
abbrev <- list(abbreviate = c(TRUE, TRUE, TRUE, TRUE))
# complete mutual independence
vcd::mosaic(acci.tab, expected = ~ age + mode + gender + result, labeling_args = abbrev, main = "Model: ~ age + mode + gender + result")
vcd::mosaic(acci.tab, expected = ~ age + mode + gender + result, labeling_args = abbrev, gp_args = list(interpolate = 1:8), main = "Model: ~ age + mode + gender + result")
vcd::mosaic(acci.tab, expected = ~ age + mode + gender + result, labeling_args = abbrev, gp_args = list(interpolate = 1:4), main = "Model: ~ age + mode + gender + result")
vcd::mosaic(acci.tab, expected = ~ result + age * mode * gender, labeling_args = abbrev, main="Model: ~ result + age * mode * gender")
vcd::mosaic(acci.tab, expected = ~ response * age  * gender + mode * age * gender, labeling_args = abbrev, main="Model: ~ response * age * gender + mode * age * gender")
vcd::mosaic(acci.tab, expected = ~ result * age  * gender + mode * age * gender, labeling_args = abbrev, main="Model: ~ result * age * gender + mode * age * gender")
mod1 <- MASS::loglm(~ age + mode + gender + result, data = acci.tab)
# joint independence
mod2 <- MASS::loglm(~ result + age * mode * gender, data = acci.tab)
# conditional independence
mod3 <- MASS::loglm(~ result * age * gender + mode * age * gender, data = acci.tab)
vcdExtra::LRstats(mod1, mod2, mod3)
anova(mod3)
anova(mod1, mod2, mod3, test = "chisq")
vcdExtra::loglin2formula(joint(3, table = acci.tab))
vcdExtra::loglin2string(joint(3, table = acci.tab))
acci.tab
loglin2formula
help("loglin2formula")
str(acci.tab)
vcdExtra::loglin2formula(joint(2, table = acci.tab, with = c(1,3,5))
vcdExtra::loglin2formula(joint(2, table = acci.tab, with = c(1,3,5)))
vcdExtra::loglin2formula(joint(2, table = acci.tab, with = c(1,3,5)))
vcdExtra::loglin2formula(joint(2, table = acci.tab, with = c(1,3,5)))
vcdExtra::loglin2string(joint(3, table = acci.tab, with = c(1,3,5)))
vcdExtra::loglin2string(joint(3, table = acci.tab, with = c(1,3,4)))
vcdExtra::loglin2string(joint(2, table = acci.tab, with = c(1,3,4)))
vcdExtra::loglin2formula(joint(2, table = acci.tab, with = c(1,3)))
vcdExtra::loglin2formula(joint(2, table = acci.tab))
joint(4, factors=letters, with=1)
joint(5, factors=LETTERS)
joint(5, factors=LETTERS, with=4:5)
vcdExtra::loglin2formula(joint(4, table = acci.tab), with = 2)
vcdExtra::loglin2formula(joint(4, table = acci.tab, with = 2))
vcdExtra::loglin2string(conditional(4, table = acci.tab, with = 2))
vcdExtra::loglin2formula(joint(4, table = acci.tab, with = 2))
vcdExtra::loglin2string(joint(4, table = acci.tab, with = 2))
vcdExtra::loglin2formula(conditional(4, table = acci.tab, with = 2))
vcdExtra::loglin2string(conditional(4, table = acci.tab, with = 2))
str(acci.tab)
vcdExtra::loglin2formula(joint(4, table = acci.tab, with = 2))
vcdExtra::loglin2string(joint(4, table = acci.tab, with = 2))
vcdExtra::loglin2formula(conditional(4, table = acci.tab, with = 2:3))
vcdExtra::loglin2string(conditional(4, table = acci.tab, with = 2:3))
vcdExtra::loglin2formula(conditional(4, table = acci.tab, with = c(1,4)))
vcdExtra::loglin2string(conditional(4, table = acci.tab, with = c(1,4)))
acci.mods <- seq_loglm(acci.tab, type = "joint")
acci.mods
LRstats(acci.mods)
acci.mods <- seq_loglm(aperm(acci.tab, c(2,1,3,4)), type = "joint")
acci.mods
LRstats(acci.mods)
acci.mods2 <- seq_loglm(aperm(acci.tab, c(2,1,3,4)), type = "conditional")
acci.mods2 <- seq_loglm(aperm(acci.tab, c(2,1,3,4)), type = "conditional")
acci.mods2
LRstats(acci.mods2)
help(seq_loglm)
tt <- seq_loglm(Titanic)
tt
library(ca)
acci.mca <- mjca(acci.tab, lambda = "Burt")
summary(acci.mca)
par(mfrow = c(1,1))
plot(acci.mca)
help(mjca)
str(acci.tab)
acci.mca <- mjca(acci.tab, lambda = "Burt", sup.col = 2)
summary(acci.mca)
par(mfrow = c(1,1))
plot(acci.mca)
help(mjca)
acci.mca <- mjca(acci.tab, lambda = "Burt", sup.col = 2)
summary(acci.mca)
acci.mca <- mjca(acci.tab, lambda = "Burt")
summary(acci.mca)
# -->
# only 40.9% of the total inertia is accounted for in 2 dimensions.
# 1st dimension:  largest contributions by "mode:Motorcycle", "mode:Pedestrian"
# 2nd dimension:  largest contributions by "age:10-19", "mod:Bycycle"
# ----------
par(mfrow = c(1,1))
plot(acci.mca)
par(mfrow = c(1,1))
plot(acci.mca, arrows = c(TRUE, TRUE))
res <- plot(acci.mca, labels = 0, pch = ".", cex.lab = 1.2)
res <- plot(acci.mca, labels = 0, pch = ".", cex.lab = 1.2)
coords <- data.frame(res$cols, acci.mca$factors)
nlev <- acci.mca$levels.n
fact <- unique(as.character(coords$factor))
cols <- c("blue", "red", "gray", "green")
points(coords[,1:2], pch=rep(16:18, nlev), col=rep(cols, nlev), cex=1.2)
text(coords[,1:2], label=coords$level, col=rep(cols, nlev), pos=3, cex=1.2, xpd=TRUE)
cols <- c("blue", "red", "gray", "green")
points(coords[,1:2], pch=rep(16:19, nlev), col=rep(cols, nlev), cex=1.2)
text(coords[,1:2], label=coords$level, col=rep(cols, nlev), pos=3, cex=1.2, xpd=TRUE)
cols <- c("blue", "red", "gray", "green")
points(coords[,1:2], pch=rep(16:19, nlev), col=rep(cols, nlev), cex=1.2)
text(coords[,1:2], label=coords$level, col=rep(cols, nlev), pos=3, cex=1.2, xpd=TRUE)
lwd <- c(1,2,1,2)
for(i in seq_along(fact)) lines(Dim2 ~ Dim1, data = coords, subset = factor==fact[i], lwd = lwd[i], col = cols[i])
legend("bottomright", legend = c("age", "result", "mode", "gender"), title = "Factor", title.col = "black", col = cols, text.col = cols, pch = 16:19, bg = "gray95", cex = 1.2)
pairs(acci.tab, gp = shading_Friendly2, space = 0.25, gp_args = list(interpolate = 1:4), diag_panel_args = list(offset_varnames = -0.5))
library(FactoMineR)
graphics.off()
par(mfrow = c(2,2))
res.mca <- MCA(acci.tab)
acci_c <- expand.dft(acci.tab)
acci_c
library(FactoMineR)
graphics.off()
par(mfrow = c(2,2))
res.mca <- MCA(acci_c)
res.mca <- MCA(acci_c, quali.sup = 2)
summary(res.mca)
graphics.off()
par(mfrow = c(2,2))
res.mca <- MCA(acci_c, quali.sup = 2)
graphics.off()
par(mfrow = c(2,2))
# res.mca <- MCA(acci_c, quali.sup = 2)
res.mca <- MCA(acci_c)
# -->
# This command executes the MCA and produces the graph of variables,
# the graph of individuals (featuring the individuals and the categories for the active and supplementary variables)
# as well as the graph of quantitative supplementary variables/
# ----------
summary(res.mca)
graphics.off()
par(mfrow = c(2,2))
res.mca <- MCA(acci_c, quali.sup = 2)
# res.mca <- MCA(acci_c)
# -->
# This command executes the MCA and produces the graph of variables,
# the graph of individuals (featuring the individuals and the categories for the active and supplementary variables)
# as well as the graph of quantitative supplementary variables/
# ----------
summary(res.mca)
par(mfrow = c(1,1))
barplot(res.mca$eig[,1], main = "Eigenvalues", names.arg = paste("dim", 1:nrow(res.mca$eig)))
round(res.mca$var$contrib[rev(order(res.mca$var$contrib[,1])), 1], digits = 5)
round(res.mca$var$contrib[rev(order(res.mca$var$contrib[,2])), 2], digits = 5)
round(res.mca$var$cos2[rev(order(res.mca$var$cos2[,1])), 1], digits = 5)
# ----------
# 2nd dimension
round(res.mca$var$cos2[rev(order(res.mca$var$cos2[,2])), 2], digits = 5)
par(mfrow = c(1,1))
plot(res.mca, invisible = c("var"), cex = 0.7)
plot(res.mca, invisible = c("var"), cex = 0.7, label = "none")
par(mfrow = c(1,1))
plot(res.mca, invisible = c("ind"), cex = 0.7)
plot(res.mca, choix = "quali.sup", cex = 0.7)
plot(res.mca, invisible = c("var", "ind"), cex = 0.7)
head(acci_c)
viet.catd <- catdes(acci_c, num.var = 2)
viet.catd
acci.catd <- catdes(acci_c, num.var = 2)
acci.catd
# ----------
# X^2 test
acci.catd$test.chi
( tab <- xtabs(~ result + age, data = acci_c) )
mosaic(tab, gp = shading_Friendly2, gp_arg = list(interpolate = 1:4), labeling = labeling_residuals)
result.catd$category$10-19
result.catd$category$'10-19'
acci.catd$category
acci.catd$category$Died
addmargins(tab)
dimdesc(res.mca)$'Dim 1'$quali
dimdesc(res.mca)$'Dim 1'$category
help(dimdesc)
plotellipses(res.mca, keepvar = c("mode", "age", "gender"))
plotellipses(res.mca, keepvar = 2)
head(acci_c)
plotellipses(res.mca, keepvar = 3)
library(FactoMineR)
graphics.off()
par(mfrow = c(2,2))
res.mca <- MCA(acci_c, method = "Burt", quali.sup = 2)
summary(res.mca)
car::some(Accident)
acci.mod <- glm(result == "Died" ~ age + mode + gender, weight = Freq, data = Accident, family = binomila)
acci.mod <- glm(result == "Died" ~ age + mode + gender, weight = Freq, data = Accident, family = binomial)
summary(acci.mod)
str(Accident)
Anova(acci.mod)
car::Anova(acci.mod)
# ----------
anova(acci.mod, test = "Chisq")
car::Anova(acci.mod)
library(effects)
acci.eff <- allEffects(acci.mod, partial.residuals = TRUE)
plot(acci.eff)
acci.eff <- allEffects(acci.mod, partial.residuals = TRUE)
plot(acci.eff)
acci.eff
acci.eff[["age"]]
acci.eff[["age"]]$model.matrix
plot(acci.eff)
plot(acci.eff, type = "response")
