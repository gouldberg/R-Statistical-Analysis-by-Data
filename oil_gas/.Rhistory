packages <- c("dplyr", "astsa", "tseries", "forecast", "MTS")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
# ------------------------------------------------------------------------------
# data:  Oil and Gas
#   - The oil series is in dollars per barrel, the gas series is in cents per gallon
# ------------------------------------------------------------------------------
data(oil, package = "astsa")
data(gas, package = "astsa")
str(oil)
str(gas)
oil
gas
str(oil)
str(gas)
par(mfrow = c(2, 2))
plot(oil, type = "l", main = "Oil")
plot(gas, type = "l", main = "Gas")
plot(diff(log(oil)), type = "l", main = "Oil")
plot(diff(log(gas)), type = "l", main = "Gas")
forecast::ndiffs(oil)
forecast::ndiffs(gas)
par(mfrow = c(2, 1))
plot(diff(log(oil)), type = "l", main = "Oil: difference of logged")
plot(diff(log(gas)), type = "l", main = "Gas: difference of logged")
par(mfrow = c(1,1))
dec <- decompose(oil, type = "multiplicative")
plot(dec)
dec <- decompose(oil, type = "additive")
plot(dec)
dec <- decompose(gas, type = "multiplicative")
plot(dec)
dec <- decompose(gas, type = "additive")
plot(dec)
dec <- decompose(gas, type = "multiplicative")
plot(dec)
dec <- decompose(gas, type = "additive")
plot(dec)
head(oil)
monthplot(oil)
graphics.off()
par(mfrow = c(1, 1))
# acf2:  produces a simultaneous plot (and a printout) of the sample ACF and PACF
# The zero lag value of the ACF is removed.
# The lags in terms of weeks
astsa::acf2(diff(log(oil)), 48)
astsa::acf2(diff(log(gas)), 48)
astsa::acf2(diff(log(oil)), 48)
astsa::acf2(diff(log(gas)), 48)
astsa::acf2(diff(log(gas)), 48)
astsa::acf2(diff(log(oil)), 48)
# Not-transformed data
graphics.off()
par(mfrow = c(3, 1))
Acf(gas, lag = 48, main = "Gas")
Acf(oil, lag = 48, main = "Oil")
Ccf(gas, oil, lag = 48, main = "Gas vs Oil")
acf2(diff(log(oil)), diff(log(gas)))
graphics.off()
par(mfrow = c(3, 1))
Acf(diff(log(gas)), lag = 48, main = "Gas: difference of logged")
Acf(diff(log(oil)), lag = 48, main = "Oil: difference of logged")
Ccf(diff(log(oil)), diff(log(gas)), lag = 48, main = "Oil vs. Gas")
graphics.off()
astsa::lag1.plot(diff(log(oil)), max.lag = 12)
Acf(diff(log(oil)), lag.max = 12, plot=FALSE)
poil <- diff(log(oil))
pgas <- diff(log(gas))
indi <- ifelse(poil < 0, 0, 1)
mess <- ts.intersect(pgas, poil, poilL = stats::lag(poil, -1), indi)
head(mess)
fit <- lm(pgas ~ poil + poilL + indi, data = mess)
summary(fit)
# -->
# insi is highly significant.
par(mfrow = c(2,2))
plot(fit)
plot(fitted(fit) ~ time(gas))
acf2(resid(fit))
astsa::acf2(diff(log(oil)), 48)
sarima(log(oil), p = 3, d = 1, q = 3)
sarima(log(oil), p = 3, d = 1, q = 3, no.constant = TRUE)
sarima(log(oil), p = 3, d = 1, q = 0, no.constant = TRUE)
sarima(log(oil), p = 0, d = 1, q = 3, no.constant = TRUE)
sarima(log(oil), p = 0, d = 1, q = 10, no.constant = TRUE)
par(mfrow=c(1,1))
sarima.for(log(oil), n.ahead = 12, p = 0, d = 1, q = 3, no.constant = TRUE)
nextn(length(oil))
nextn(length(gas))
par(mfrow=c(2,1))
# log = "no":  periodogram is plotted on a log10 scale by default and want not scaling
oil.per <- astsa::mvspec(oil, log = "no")
gas.per <- astsa::mvspec(gas, log = "no")
# ----------
oil.per <- astsa::mvspec(diff(log(oil)), log = "no")
gas.per <- astsa::mvspec(diff(log(gas)), log = "no")
L <- 9
m <- (L-1)/2
par(mfrow=c(2,1))
# To compute averaged periodograms, use the Daniell kernel, and specify m, where L = 2m + 1
oil.ave <- astsa::mvspec(oil, kernel("daniell", m), log = "no")
gas.ave <- astsa::mvspec(gas, kernel("daniell", m), log = "no")
oil.ave <- astsa::mvspec(diff(log(oil)), kernel("daniell", m), log = "no")
gas.ave <- astsa::mvspec(diff(log(gas)), kernel("daniell", m), log = "no")
m <- 1
( ker <- kernel("modified.daniell", c(m, m)) )
plot(ker)
# ----------
# taper:  generally have a shape that enhances the center of the data relative to the extremities, such as a cosine bell of the form
#  - taper = 0.1:  tapering the upper and lower 10% of the data
graphics.off()
par(mfrow=c(2,1))
oil.smo <- astsa::mvspec(oil, kernel = ker, taper = 0.1, log = "no")
gas.smo <- astsa::mvspec(gas, kernel = ker, taper = 0.1, log = "no")
# ----------
graphics.off()
m <- 1
( ker <- kernel("modified.daniell", c(m, m)) )
plot(ker)
# ----------
# taper:  generally have a shape that enhances the center of the data relative to the extremities, such as a cosine bell of the form
#  - taper = 0.1:  tapering the upper and lower 10% of the data
graphics.off()
par(mfrow=c(2,1))
oil.smo <- astsa::mvspec(oil, kernel = ker, taper = 0.1, log = "no")
gas.smo <- astsa::mvspec(gas, kernel = ker, taper = 0.1, log = "no")
graphics.off()
par(mfrow=c(2,1))
oil.smo <- astsa::mvspec(diff(log(oil)), kernel = ker, taper = 0.1, log = "no")
gas.smo <- astsa::mvspec(diff(log(gas)), kernel = ker, taper = 0.1, log = "no")
n <- length(oil)
AIC <- rep(0, 40) -> AICc -> BIC
# var.pred:  the prediction variance, an estimate of the portion of the variance of the time series
# that is not explained by the autoregressive model
for(k in 1:40){
sigma2 <- ar(log(oil), order = k, aic = FALSE)$var.pred
BIC[k] <- log(sigma2) + (k * log(n) / n)
AICc[k] <- log(sigma2) + ((n + k) / (n - k - 2))
AIC[k] <- log(sigma2) + ((n + 2 * k) / n)
}
# AICc is nearly identical to BIC, so we plot only AIC and BIC
# We added +1 to the BIC to reduce white space in the graphic
IC <- cbind(AIC, BIC + 1)
ts.plot(IC, type =c("o"), xlab = "p", ylab = "AIC / BIC")
graphics.off()
# spec.ar() to fit the best model via AIC and plot the resulting spectrum
spaic <- spec.ar(log(oil), log = "no")
spaic2 <- spec.ar(log(gas), log = "no")
# ----------
spaic$method
spaic2$method
oilgr <- diff(log(oil))
# AR(1) model
u <- sarima(oil, p = 1, d = 0, q = 0)
astsa::acf2(resid(u$fit) ^ 2, 20)
astsa::acf2(resid(u$fit) ^ 2, 20)
fit <- arima(oilgr, order = c(1, 0, 0))
y <- as.matrix(log(resid(fit)^2))
num <- length(y)
par(mfrow = c(1,1))
plot.ts(y, ylab = "")
y
library(fGarch)
summary(gfit <- garchFit(~ arma(1, 0) + garch(1, 1), oilgr, cond.dist = "std"))
par(mfrow = c(3,3))
plot(gfit, which = "all")
par(mfrow = c(2,2))
plot(gfit, which = "all")
graphics.off()
par(mfrow = c(2,2))
plot(gfit, which = "all")
graphics.off()
par(mfrow = c(2,3))
plot(gfit, which = "all")
graphics.off()
par(mfrow = c(3,3))
plot(gfit, which = "all")
gfit@sigma.t
# estimated parameter
gfit@fit$par
par(mfrow = c(1,1))
plot(oilgr, lty = 1, lwd = 1, type = "l")
lines(ts(gfit@sigma.t, start = c(2000, 1), frequency = 52), lty = 1, lwd = 1, col = "blue")
library(fGarch)
summary(oilgr.ap <- garchFit(~ arma(1,0) + aparch(1,1), data = oilgr, cond.dist = "std"))
par(mfrow = c(3, 3))
plot(oilgr.ap, which = "all")
# ----------
# sigma
oilgr.ap@sigma.t
# estimated parameter
oilgr.ap@fit$par
par(mfrow = c(1,1))
plot(oilgr, lty = 1, lwd = 1, type = "l")
lines(ts(oilgr.ap@sigma.t, start = c(2000, 1), frequency = 52), lty = 1, lwd = 1, col = "blue")
L <- 19
( m <- (L - 1) / 2 )
sr <- mvspec(cbind(oil, gas), kernel("daniell", m), plot=FALSE)
# ----------
sr$df
( f <- qf(.999, 2, sr$df -2) )
( C <- f / (L - 1 + f) )
par(mfrow = c(2,1))
plot(sr)
plot(sr, plot.type = "coh", ci.lty = 2)
abline(h = C)
L <- 9
# L <- 19
( m <- (L - 1) / 2 )
sr <- mvspec(cbind(oil, gas), kernel("daniell", m), plot=FALSE)
# ----------
sr$df
# ----------
( f <- qf(.999, 2, sr$df -2) )
( C <- f / (L - 1 + f) )
par(mfrow = c(2,1))
plot(sr)
plot(sr, plot.type = "coh", ci.lty = 2)
abline(h = C)
L <- 19
( m <- (L - 1) / 2 )
sr <- mvspec(cbind(oil, gas), kernel("daniell", m), plot=FALSE)
# ----------
sr$df
# ----------
( f <- qf(.999, 2, sr$df -2) )
( C <- f / (L - 1 + f) )
par(mfrow = c(2,1))
plot(sr)
plot(sr, plot.type = "coh", ci.lty = 2)
abline(h = C)
y <- cbind(oil, gas)
y
mulnos(y, max.order = 10, h = 20)
library(timsac)
y <- cbind(oil, gas)
mulnos(y, max.order = 10, h = 20)
rpc <- mulnos(y, max.order = 10, h = 20)
rpc <- mulnos(y, max.order = 20, h = 20)
names(rpc)
rpc$diffr
rpc <- mulnos(y, max.order = 20, h = 52)
names(rpc)
rpc$diffr
rpc <- mulnos(y, max.order = 20, h = 26)
names(rpc)
rpc$diffr
plot(rpc$diffr)
plot(rpc$diffr[1,,])
rpc$diffr[1,,]
plot(rpc$diffr[1,1,], type = "l")
par(mfrow = c(1,1))
plot(rpc$diffr[1,1,], type = "l")
lines(1:26, rpc$diffr[1,2,], type = "l")
rpc$diffr[1,2,]
1:26
graphics.off()
par(mfrow = c(1,1))
plot(rpc$diffr[1,1,], type = "l")
lines(1:27, rpc$diffr[1,2,], type = "l")
plot(rpc$diffr[1,1,], type = "l")
lines(1:27, rpc$diffr[1,2,], type = "l")
rpc$diffr[1,2,]
plot(rpc$diffr[1,1,], type = "l", ylim = c(0, 1))
lines(1:27, rpc$diffr[1,2,], type = "l")
L <- 19
( m <- (L - 1) / 2 )
sr <- mvspec(cbind(oil, gas), kernel("daniell", m), plot=FALSE)
# ----------
sr$df
# ----------
( f <- qf(.999, 2, sr$df -2) )
( C <- f / (L - 1 + f) )
par(mfrow = c(2,1))
plot(sr)
plot(sr, plot.type = "coh", ci.lty = 2)
abline(h = C)
graphics.off()
par(mfrow = c(1,2))
plot(rpc$diffr[1,1,], type = "l", ylim = c(0, 1), col = "black")
lines(1:27, rpc$diffr[1,2,], type = "l", col = "blue")
par(mfrow = c(1,2))
plot(rpc$diffr[2,1,], type = "l", ylim = c(0, 1), col = "black")
lines(1:27, rpc$diffr[2,2,], type = "l", col = "blue")
graphics.off()
par(mfrow = c(1,2))
plot(rpc$diffr[1,1,], type = "l", ylim = c(0, 1), col = "black")
lines(1:27, rpc$diffr[1,2,], type = "l", col = "blue")
plot(rpc$diffr[2,1,], type = "l", ylim = c(0, 1), col = "black")
lines(1:27, rpc$diffr[2,2,], type = "l", col = "blue")
rpc$diffr
names(rpc)
rpc$integr
ar[, , 1] <- matrix(c(0.4,  0,   0.3,
0.2, -0.1, -0.5,
0.3,  0.1, 0), nrow = 3, ncol = 3, byrow = TRUE)
ar[, , 2] <- matrix(c(0,  -0.3,  0.5,
0.7, -0.4,  1,
0,   -0.5,  0.3), nrow = 3, ncol = 3, byrow = TRUE)
x <- matrix(rnorm(200*3), nrow = 200, ncol = 3)
y <- mfilter(x, ar, "recursive")
mulnos(y, max.order = 10, h = 20)
mulnos(y, max.order = 10, h = 20)
ar[, , 1] <- matrix(c(0.4,  0,   0.3,
0.2, -0.1, -0.5,
0.3,  0.1, 0), nrow = 3, ncol = 3, byrow = TRUE)
ar[, , 2] <- matrix(c(0,  -0.3,  0.5,
0.7, -0.4,  1,
0,   -0.5,  0.3), nrow = 3, ncol = 3, byrow = TRUE)
x <- matrix(rnorm(200*3), nrow = 200, ncol = 3)
y <- mfilter(x, ar, "recursive")
ar <- array(0, dim = c(3,3,2))
ar[, , 1] <- matrix(c(0.4,  0,   0.3,
0.2, -0.1, -0.5,
0.3,  0.1, 0), nrow = 3, ncol = 3, byrow = TRUE)
ar[, , 2] <- matrix(c(0,  -0.3,  0.5,
0.7, -0.4,  1,
0,   -0.5,  0.3), nrow = 3, ncol = 3, byrow = TRUE)
x <- matrix(rnorm(200*3), nrow = 200, ncol = 3)
y <- mfilter(x, ar, "recursive")
mulnos(y, max.order = 10, h = 20)
rpc <- mulnos(y, max.order = 10, h = 20)
rpc$diffr
graphics.off()
par(mfrow = c(1,2))
plot(rpc$diffr[1,1,], type = "l", ylim = c(0, 1), col = "black")
lines(1:27, rpc$diffr[1,2,], type = "l", col = "blue")
plot(rpc$diffr[2,1,], type = "l", ylim = c(0, 1), col = "black")
lines(1:27, rpc$diffr[2,2,], type = "l", col = "blue")
y <- cbind(oil, gas)
# ----------
# relative power contribution
# max.order:  upper limit of model order
rpc <- mulnos(y, max.order = 20, h = 26)
names(rpc)
rpc$diffr
rpc$integr
# ----------
graphics.off()
par(mfrow = c(1,2))
plot(rpc$diffr[1,1,], type = "l", ylim = c(0, 1), col = "black")
lines(1:27, rpc$diffr[1,2,], type = "l", col = "blue")
plot(rpc$diffr[2,1,], type = "l", ylim = c(0, 1), col = "black")
lines(1:27, rpc$diffr[2,2,], type = "l", col = "blue")
graphics.off()
par(mfrow = c(1,2))
plot(rpc$diffr[1,1,], type = "l", ylim = c(0, 1), col = "black", lwd = 2)
lines(1:27, rpc$diffr[1,2,], type = "l", col = "blue", lty = 2, lwd = 2)
plot(rpc$diffr[2,1,], type = "l", ylim = c(0, 1), col = "black", lwd = 2)
lines(1:27, rpc$diffr[2,2,], type = "l", col = "blue", lty = 2, lwd = 2)
graphics.off()
par(mfrow = c(1,2))
plot(rpc$diffr[1,1,], type = "l", ylim = c(0, 1), col = "black", lwd = 2, main = "oil")
lines(1:27, rpc$diffr[1,2,], type = "l", col = "blue", lty = 2, lwd = 2)
plot(rpc$diffr[2,1,], type = "l", ylim = c(0, 1), col = "black", lwd = 2, main = "gas")
lines(1:27, rpc$diffr[2,2,], type = "l", col = "blue", lty = 2, lwd = 2)
rpc$diffr
rpc$diffr[,,1:2]
graphics.off()
par(mfrow = c(1,2))
plot(rpc$diffr[1,1,], type = "l", ylim = c(0, 1), col = "black", lwd = 2, main = "oil")
lines(1:27, rpc$diffr[1,2,], type = "l", col = "blue", lwd = 2)
plot(rpc$diffr[2,1,], type = "l", ylim = c(0, 1), col = "blue", lwd = 2, main = "gas")
lines(1:27, rpc$diffr[2,2,], type = "l", col = "black", lwd = 2)
