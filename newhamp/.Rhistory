Mydotplot <- function(DataSelected){
P <- dotplot(as.matrix(as.matrix(DataSelected)), groups=FALSE,
strip = strip.custom(bg = 'white', par.strip.text = list(cex = 1.2)),
scales = list(x = list(relation = "free", draw = TRUE), y = list(relation = "free", draw = FALSE)),
col=1, cex  = 0.5, pch = 16,
xlab = list(label = "Value of the variable", cex = 1.5),
ylab = list(label = "Order of the data from text file", cex = 1.5))
print(P)
}
# ----------
graphics.off()
MyVar1 <- colnames(data)
Mydotplot(as.matrix(data[,MyVar1]))
cor(data$prestige, data$women, method = "spearman")
obj_var <- c("prestige", "eduction", "income", "women")
psych::pairs.panels(data[,obj_var], stars = TRUE, method = "spearman")
obj_var <- c("prestige", "education", "income", "women")
psych::pairs.panels(data[,obj_var], stars = TRUE, method = "spearman")
boxplot(prestige ~ type, data = data)
graphics.off()
boxplot(prestige ~ type, data = data)
# by group
formula <- ~ education + income + women + prestige | type
scatterplotMatrix(formula, data = data, cex = 1.2,
smooth = FALSE, ellipse = list(levels = 0.5),
id = list(n = 3), col = c(gray(0.6), "black", "blue"), pch = 1:3)
lmod <- lm(prestige ~ education + income + women + type, data = data)
lmod <- lm(prestige ~ education + income + women + type, data = data)
summary(lmod)
lmod2 <- lm(prestige ~ education + income + type, data = data)
summary(lmod2)
anova(lmod2, lmod)
lmod3 <- lm(prestige ~ education + income, data = data)
summary(lmod3)
summary(lmod3)
anova(lmod3, lmod2)
anova(lmod3, lmod2)
anova(lmod2, lmod)
anova(lmod3, lmod2)
anova(lmod3, lmod2)
lmod3 <- lm(prestige ~ education + income, data = na.exclude(data))
summary(lmod3)
anova(lmod3, lmod2)
lmod3 <- lm(prestige ~ education + income, data = na.exclude(data))
summary(lmod3)
anova(lmod3, lmod2)
lmod4 <- lm(prestige ~ education + type * income, data = na.exclude(data))
summary(lmod4)
anova(lmod4, lmod2)
anova(lmod4, lmod3)
anova(lmod3, lmod4)
anova(lmod4, lmod3)
anova(lmod3, lmod4)
AIC(lmod3, lmod4)
car::residualPlots(lmod4)
lmod5 <- lm(prestige ~ education + type * income + women, data = na.exclude(data))
summary(lmod5)
# ------------------------------------------------------------------------------
# Data exploration:  paris plot by scatterplot matrix by group
# ------------------------------------------------------------------------------
# by group
formula <- ~ education + income + women + prestige | type
scatterplotMatrix(formula, data = data, cex = 1.2,
smooth = FALSE, ellipse = list(levels = 0.5),
id = list(n = 3), col = c(gray(0.6), "black", "blue"), pch = 1:3)
# -->
# income is different intercept and slope by type
table(data$type, useNA = "always")
data$type <- factor(data$type, levels = c("bc", "wc", "prof"))
levels(data$type)
lmod_int2 <- lm(prestige ~ (education + income + women + type)^2, data = data)
summary(lmod_int2)
lmod_step <- step(lmod_int2)
summary(lmod_step)
lmod_final <- lm(prestige ~ education + type * income + type * women, data = data)
summary(lmod_final)
AIC(lmod4, lmod5, lmod_final)
car::residualPlots(lmod_final)
car::residualPlots(lmod_final)
plot(predictorEffects(lmod_final))
setwd("C:\\Users\\kswad\\OneDrive\\デスクトップ\\技術力強化_統計解析\\51_解析スクリプト\\newhamp")
packages <- c("dplyr")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
data(newhamp, package = "faraway")
newhamp
write.table(newhamp, file = "newhamp.txt", row.names = TRUE, quote = F)
write.table(newhamp, file = "newhamp.txt", row.names = TRUE, quote = F, sep = "\t")
dat <- read.csv("newhamp.txt", header = TRUE, sep = "\t")
str(dat)
car::some(dat)
summary(dat)
colSums(newhamp[newhamp$votesys == 'D', 2:3])
colSums(newhamp[newhamp$votesys == 'H', 2:3])
boxplot(pObama + Clinton ~ votesys, data = dat)
graphics.off()
par(mfrow = c(1,1))
boxplot(pObama ~ votesys, data = dat)
dat <- dat %>% mutate(OC = ifelse(Obama > Clinton, "O", ifelse(Clinton > Obama, "C", "E")))
table(dat$OC, useNA = "always")
xtabs(~ OC + votesys, data = dat)
xtabs(~ votesys + OC, data = dat)
addmargins(xtabs(~ votesys + OC, data = dat))
prop.table(addmargins(xtabs(~ votesys + OC, data = dat)))
round(prop.table(addmargins(xtabs(~ votesys + OC, data = dat))), digits = 3)
round(prop.table(addmargins(xtabs(~ votesys + OC, data = dat)), 2), digits = 3)
round(prop.table(addmargins(xtabs(~ votesys + OC, data = dat)), 1), digits = 3)
round(prop.table(xtabs(~ votesys + OC, data = dat), 1), digits = 3)
lmod <- lm(pObama ~ trt, data = newhamp)
newham$trt <- ifelse(newhamp$votesys == "H", 1, 0)
# ----------
# Strictly, this is binomial response, but the normal is a good approximation for the binomial given a large enough sample
# and probabilities not close to zero or one.
lmod <- lm(pObama ~ trt, data = newhamp)
summary(lmod)
lmod <- lm(pObama ~ trt, data = newhamp)
newham$trt <- ifelse(newhamp$votesys == "H", 1, 0)
newhamp$trt <- ifelse(newhamp$votesys == "H", 1, 0)
# ----------
# Strictly, this is binomial response, but the normal is a good approximation for the binomial given a large enough sample
# and probabilities not close to zero or one.
lmod <- lm(pObama ~ trt, data = newhamp)
summary(lmod)
lmodz <- lm(pObama ~ trt + Dean, newhamp)
summary(lmodz)
summary(lm(Dean ~ trt, data = newhamp))
lmodz <- lm(pObama ~ trt + Dean, newhamp)
summary(lmodz)
mm <- GenMatch(newhamp$trt, newhamp$Dean, ties = FALSE, cliper = 0.05, pop.size = 1000)
library(Matching)
set.seed(123)
# ----------
mm <- GenMatch(newhamp$trt, newhamp$Dean, ties = FALSE, cliper = 0.05, pop.size = 1000)
mm <- GenMatch(newhamp$trt, newhamp$Dean, ties = FALSE, caliper = 0.05, pop.size = 1000)
head(mm$matches)
help(GenMatch)
nrow(dat)
mm <- GenMatch(newhamp$trt, newhamp$Dean, ties = FALSE, caliper = 0.05, pop.size = 10000)
head(mm$matches)
set.seed(123)
# ----------
# caliper = 0.05:  we accept anything within 0.05 standard deviations of Dean.
# ties = FALSE:  no ties will be allowed so that each treatment ward ('H' ward) will be
# matched to just one control ('D' ward)
# The genertic algorithm functions more effectively with a larger 'population size'
mm <- GenMatch(newhamp$trt, newhamp$Dean, ties = FALSE, caliper = 0.05, pop.size = 1000)
head(mm$matches)
dat[c(4,213)]
dat[c(4,213),]
dat[c(1,4),]
mm
mm2 <- GenMatch(Tr = newhamp$trt, X = cbind(newhamp$Dean, newhamp$Kerry), ties = FALSE, caliper = 0.05, pop.size = 1000)
names(data)
names(dat)
mm2 <- GenMatch(Tr = newhamp$trt, X = cbind(newhamp$Dean, newhamp$povrate, newhamp$white), ties = FALSE, caliper = 0.05, pop.size = 1000)
plot(pObama ~ Dean, data = newhamp, pch = trt + 1)
plot(pObama ~ Dean, data = newhamp, pch = trt + 1, col = c("black", "blue"))
plot(pObama ~ Dean, data = newhamp, pch = trt + 1)
plot(pObama ~ Dean, data = newhamp, pch = trt + 1)
with(newhamp, segments(Dean[mm$match[,1]], pObama[mm$match[,1]], Dean[mm$match[,2]], pObama[mm$match[,2]]))
pdiff <- newhamp$pObama[mm$matches[,1]] - newhamp$pObama[mm$matches[,2]]
pdiff <- newhamp$pObama[mm$matches[,1]] - newhamp$pObama[mm$matches[,2]]
t.test(pdiff)
plot(pdiff ~ newhamp$Dean[mm$matches[,1]], xlab = "Dean", ylab = "Hand^Digital")
abline(h = 0)
head(mm2$matches)
mm2
mm2 <- GenMatch(Tr = newhamp$trt, X = cbind(newhamp$povrate, newhamp$white), ties = FALSE, caliper = 0.05, pop.size = 1000)
head(mm2$matches)
mm2
pdiff2 <- newhamp$pObama[mm2$matches[,1]] - newhamp$pObama[mm2$matches[,2]]
t.test(pdiff2)
t.test(pdiff)
pdiff2 <- newhamp$pObama[mm2$matches[,1]] - newhamp$pObama[mm2$matches[,2]]
t.test(pdiff2)
summary(lm(trt ~ povrate, data = dat))
summary(lm(trt ~ povrate, data = data))
lm(trt ~ povrate, data = dat)
dat
dat$trt
summary(lm(Dean ~ trt, data = dat))
# What happens when including trt and Dean ?
lmodz <- lm(pObama ~ trt + Dean, data = dat)
summary(lmodz)
# -->
# Voting system is no longer statistically significant with a p-value of 0.54.
# Dean shows a positive relationship to the proportion voting for Obama.
mm <- GenMatch(Tr = dat$trt, X = dat$Dean, ties = FALSE, caliper = 0.05, pop.size = 1000)
dat$trt <- ifelse(dat$votesys == "H", 1, 0)
# ------------------------------------------------------------------------------
# Matching 'H' and 'D' ward by similar 'Dean'
# ------------------------------------------------------------------------------
library(Matching)
set.seed(123)
# ----------
# caliper = 0.05:  we accept anything within 0.05 standard deviations of Dean.
# ties = FALSE:  no ties will be allowed so that each treatment ward ('H' ward) will be
# matched to just one control ('D' ward)
# The genertic algorithm functions more effectively with a larger 'population size'
mm <- GenMatch(Tr = dat$trt, X = dat$Dean, ties = FALSE, caliper = 0.05, pop.size = 1000)
plot(pdiff ~ dat$Dean[mm$matches[,1]], xlab = "Dean", ylab = "Hand^Digital")
abline(h = 0)
summary(lm(trt ~ povrate, data = dat))
summary(lm(trt ~ white, data = dat))
names(dat)
summary(lm(trt ~ pci, data = dat))
summary(lm(trt ~ absentee, data = dat))
summary(lm(trt ~ povrate, data = dat))
summary(lm(pObama ~ povrate, data = dat))
summary(lm(trt ~ white, data = dat))
summary(lm(pObama ~ white, data = dat))
summary(lm(trt ~ absentee, data = dat))
summary(lm(pObama ~ absentee, data = dat))
summary(lm(trt ~ pci, data = dat))
summary(lm(pObama ~ pci, data = dat))
summary(lm(trt ~ white, data = dat))
summary(lm(pObama ~ white, data = dat))
summary(lm(trt ~ povrate, data = dat))
summary(lm(pObama ~ povrate, data = dat))
summary(lm(trt ~ white, data = dat))
summary(lm(pObama ~ white, data = dat))
summary(lm(trt ~ white, data = dat))
summary(lm(pObama ~ white, data = dat))
summary(lm(trt ~ pci, data = dat))
summary(lm(pObama ~ pci, data = dat))
mm2 <- GenMatch(Tr = dat$trt, X = cbind(dat$white, dat$pci, dat$absentee), ties = FALSE, caliper = 0.05, pop.size = 1000)
mm2$matches
mm2 <- GenMatch(Tr = dat$trt, X = cbind(dat$white, dat$pci, dat$absentee), ties = FALSE, caliper = 0.01, pop.size = 1000)
mm2$matches
mm2 <- GenMatch(Tr = dat$trt, X = cbind(dat$white, dat$pci, dat$absentee), ties = FALSE, caliper = 0.001, pop.size = 1000)
mm2 <- GenMatch(Tr = dat$trt, X = cbind(dat$white, dat$pci), ties = FALSE, caliper = 0.01, pop.size = 1000)
mm2$matches
mm2 <- GenMatch(Tr = dat$trt, X = cbind(dat$white, dat$absentee), ties = FALSE, caliper = 0.01, pop.size = 1000)
mm2$matches
mm2 <- GenMatch(Tr = dat$trt, X = cbind(dat$white), ties = FALSE, caliper = 0.01, pop.size = 1000)
mm2$matches
pdiff2 <- dat$pObama[mm2$matches[,1]] - dat$pObama[mm2$matches[,2]]
t.test(pdiff2)
boxplot(dat$white ~ dat$trt)
head(mm$matches)
boxplot(dat$white[mm$matches[,1]] ~ dat$trt[mm$matches[,2]])
obj <- c(mm$matches[,1], mm$matches[,2])
obj
boxplot(dat$white[obj] ~ dat$trt[obj])
obj <- c(mm$matches[,1], mm$matches[,2])
boxplot(dat$white[obj] ~ dat$trt[obj])
boxplot(dat$Dean[obj] ~ dat$trt[obj])
obj <- c(mm2$matches[,1], mm2$matches[,2])
boxplot(dat$white[obj] ~ dat$trt[obj])
obj <- c(mm2$matches[,1], mm2$matches[,2])
boxplot(dat$white[obj] ~ dat$trt[obj])
mm2 <- GenMatch(Tr = dat$trt, X = cbind(dat$white), ties = FALSE, caliper = 0.01, pop.size = 1000)
obj <- c(mm2$matches[,1], mm2$matches[,2])
boxplot(dat$white[obj] ~ dat$trt[obj])
boxplot(dat$pObama[obj] ~ dat$trt[obj])
obj <- c(mm$matches[,1], mm$matches[,2])
boxplot(dat$Dean[obj] ~ dat$trt[obj])
boxplot(dat$pObama[obj] ~ dat$trt[obj])
boxplot(dat$pObama[obj] ~ dat$trt[obj])
obj <- c(mm2$matches[,1], mm2$matches[,2])
boxplot(dat$white[obj] ~ dat$trt[obj])
boxplot(dat$pObama[obj] ~ dat$trt[obj])
t.test(pdiff2)
summary(lm(trt ~ Dean, data = dat))
summary(lm(pObama ~ Dean, data = dat))
summary(lm(pObama ~ Dean, data = dat))
summary(lm(trt ~ absentee, data = dat))
summary(lm(pObama ~ absentee, data = dat))
summary(lm(trt ~ white, data = dat))
summary(lm(pObama ~ white, data = dat))
mm2 <- GenMatch(Tr = dat$trt, X = dat$white, ties = FALSE, caliper = 0.01, pop.size = 1000)
obj <- c(mm2$matches[,1], mm2$matches[,2])
boxplot(dat$white[obj] ~ dat$trt[obj])
boxplot(dat$pObama[obj] ~ dat$trt[obj])
par(mfrow = c(1,2))
boxplot(dat$white[obj] ~ dat$trt[obj])
boxplot(dat$pObama[obj] ~ dat$trt[obj])
obj <- c(mm2$matches[,1], mm2$matches[,2])
par(mfrow = c(1,2))
boxplot(dat$white[obj] ~ dat$trt[obj])
boxplot(dat$pObama[obj] ~ dat$trt[obj])
obj <- c(mm$matches[,1], mm$matches[,2])
par(mfrow = c(1,2))
boxplot(dat$Dean[obj] ~ dat$trt[obj])
boxplot(dat$pObama[obj] ~ dat$trt[obj])
obj <- c(mm2$matches[,1], mm2$matches[,2])
par(mfrow = c(1,2))
boxplot(dat$white[obj] ~ dat$trt[obj])
boxplot(dat$pObama[obj] ~ dat$trt[obj])
obj <- c(mm$matches[,1], mm$matches[,2])
par(mfrow = c(1,2))
boxplot(dat$Dean[obj] ~ dat$trt[obj])
boxplot(dat$pObama[obj] ~ dat$trt[obj])
summary(lm(trt ~ Dean, data = dat))
summary(lm(pObama ~ Dean, data = dat))
summary(lm(trt ~ povrate, data = dat))
summary(lm(pObama ~ povrate, data = dat))
summary(lm(trt ~ white, data = dat))
summary(lm(pObama ~ white, data = dat))
summary(lm(trt ~ pci, data = dat))
summary(lm(pObama ~ pci, data = dat))
summary(lm(trt ~ absentee, data = dat))
summary(lm(pObama ~ absentee, data = dat))
mm2 <- GenMatch(Tr = dat$trt, X = dat$absentee, ties = FALSE, caliper = 0.01, pop.size = 1000)
obj <- c(mm2$matches[,1], mm2$matches[,2])
par(mfrow = c(1,2))
boxplot(dat$absentee[obj] ~ dat$trt[obj])
boxplot(dat$pObama[obj] ~ dat$trt[obj])
pdiff2 <- dat$pObama[mm2$matches[,1]] - dat$pObama[mm2$matches[,2]]
t.test(pdiff2)
setwd("C:\\Users\\kswad\\OneDrive\\デスクトップ\\技術力強化_統計解析\\51_解析スクリプト\\newhamp")
packages <- c("dplyr")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
# ------------------------------------------------------------------------------
# data:  newhamp
# ------------------------------------------------------------------------------
dat <- read.csv("newhamp.txt", header = TRUE, sep = "\t")
str(dat)
car::some(dat)
# ----------
dat$trt <- ifelse(dat$votesys == "H", 1, 0)
# ------------------------------------------------------------------------------
# Matching 'H' and 'D' ward by similar 'Dean'
# ------------------------------------------------------------------------------
library(Matching)
set.seed(123)
# ----------
# caliper = 0.05:  we accept anything within 0.05 standard deviations of Dean.
# ties = FALSE:  no ties will be allowed so that each treatment ward ('H' ward) will be
# matched to just one control ('D' ward)
# The genertic algorithm functions more effectively with a larger 'population size'
mm <- GenMatch(Tr = dat$trt, X = dat$Dean, ties = FALSE, caliper = 0.05, pop.size = 1000)
# ----------
head(mm$matches)
dat[c(4,213),]
# -->
# 1st column:  the row numbers of the treated observations in the matched dataset
# 2nd column:  the row numbers of the control observations
# 3rd column:  the weight that each matched pair is given
# 1st pair uses cases 4 and 213
# ----------
obj <- c(mm$matches[,1], mm$matches[,2])
par(mfrow = c(1,2))
boxplot(dat$Dean[obj] ~ dat$trt[obj])
boxplot(dat$pObama[obj] ~ dat$trt[obj])
# -->
# the distribution of Dean by trt of only matched pairs are similar
# also the distribution of pObama by trt of only matched pairs are NOT similar
# ----------
# shows matched pairs
plot(pObama ~ Dean, data = dat, pch = trt + 1)
with(dat, segments(Dean[mm$match[,1]], pObama[mm$match[,1]], Dean[mm$match[,2]], pObama[mm$match[,2]]))
# ----------
# difference of pObama by mached pairs
pdiff <- dat$pObama[mm$matches[,1]] - dat$pObama[mm$matches[,2]]
# t test for mean difference
# no clear preference for hand or digital voting.
t.test(pdiff)
# -->
# NOT SIGNIFICANTLY DIFFERENT FROM ZERO !!!
# no clear preference for hand or digital voting.
# ----------
# The difference does not appear to depend on the Dean vote.
plot(pdiff ~ dat$Dean[mm$matches[,1]], xlab = "Dean", ylab = "Hand^Digital")
abline(h = 0)
# ------------------------------------------------------------------------------
# Matching 'H' and 'D' ward by other variables
# ------------------------------------------------------------------------------
summary(lm(trt ~ Dean, data = dat))
summary(lm(pObama ~ Dean, data = dat))
summary(lm(trt ~ povrate, data = dat))
summary(lm(pObama ~ povrate, data = dat))
summary(lm(trt ~ white, data = dat))
summary(lm(pObama ~ white, data = dat))
summary(lm(trt ~ pci, data = dat))
summary(lm(pObama ~ pci, data = dat))
summary(lm(trt ~ absentee, data = dat))
summary(lm(pObama ~ absentee, data = dat))
# -->
# white, pci and absentee are significant to both of trt and pObama
# ----------
# but we use only "white"
mm2 <- GenMatch(Tr = dat$trt, X = dat$white, ties = FALSE, caliper = 0.01, pop.size = 1000)
# mm2 <- GenMatch(Tr = dat$trt, X = dat$absentee, ties = FALSE, caliper = 0.01, pop.size = 1000)
# mm2 <- GenMatch(Tr = dat$trt, X = cbind(dat$white, dat$absentee), ties = FALSE, caliper = 0.01, pop.size = 1000)
# ----------
obj <- c(mm2$matches[,1], mm2$matches[,2])
par(mfrow = c(1,2))
boxplot(dat$white[obj] ~ dat$trt[obj])
boxplot(dat$pObama[obj] ~ dat$trt[obj])
# -->
# the distribution of white by trt of only matched pairs are similar
# but the distribution of pObama by trt of only matched pairs are NOT similar
# ----------
pdiff2 <- dat$pObama[mm2$matches[,1]] - dat$pObama[mm2$matches[,2]]
# t test for mean difference  --> SIGNIFICANTLY DIFFERENT ...
t.test(pdiff2)
# but we use only "white"
mm2 <- GenMatch(Tr = dat$trt, X = dat$white, ties = FALSE, caliper = 0.05, pop.size = 1000)
# mm2 <- GenMatch(Tr = dat$trt, X = dat$absentee, ties = FALSE, caliper = 0.01, pop.size = 1000)
# mm2 <- GenMatch(Tr = dat$trt, X = cbind(dat$white, dat$absentee), ties = FALSE, caliper = 0.01, pop.size = 1000)
# ----------
obj <- c(mm2$matches[,1], mm2$matches[,2])
par(mfrow = c(1,2))
boxplot(dat$white[obj] ~ dat$trt[obj])
boxplot(dat$pObama[obj] ~ dat$trt[obj])
# -->
pdiff2 <- dat$pObama[mm2$matches[,1]] - dat$pObama[mm2$matches[,2]]
t.test(pdiff2)
plot(pdiff ~ dat$Dean[mm$matches[,1]], xlab = "Dean", ylab = "Hand^Digital")
abline(h = 0)
plot(pObama ~ Dean, data = dat, pch = trt + 1)
with(dat, segments(Dean[mm$match[,1]], pObama[mm$match[,1]], Dean[mm$match[,2]], pObama[mm$match[,2]]))
par(mfrow = c(1,1))
plot(pObama ~ Dean, data = dat, pch = trt + 1)
with(dat, segments(Dean[mm$match[,1]], pObama[mm$match[,1]], Dean[mm$match[,2]], pObama[mm$match[,2]]))
mean(dat$pObama[dat$trt == 1])
abline(h = mean(dat$pObama[dat$trt == 1]), lty = 1)
abline(h = mean(dat$pObama[dat$trt == 0]), lty = 2)
par(mfrow = c(1,1))
plot(pObama ~ Dean, data = dat, pch = trt + 1)
with(dat, segments(Dean[mm$match[,1]], pObama[mm$match[,1]], Dean[mm$match[,2]], pObama[mm$match[,2]]))
abline(h = mean(dat$pObama[dat$trt == 0]), lty = 1)
abline(h = mean(dat$pObama[dat$trt == 1]), lty = 2)
abline(lm(pObama ~ Dean, data = dat[dat$trt == 0]), lty = 1)
abline(lm(pObama ~ Dean, data = dat[dat$trt == 0]), lty = 2)
abline(lm(pObama ~ Dean, data = dat[dat$trt == 0,]), lty = 1)
abline(lm(pObama ~ Dean, data = dat[dat$trt == 1,]), lty = 2)
par(mfrow = c(1,1))
plot(pObama ~ Dean, data = dat, pch = trt + 1)
with(dat, segments(Dean[mm$match[,1]], pObama[mm$match[,1]], Dean[mm$match[,2]], pObama[mm$match[,2]], col = gray(0.75)))
abline(h = mean(dat$pObama[dat$trt == 0]), lty = 1)
abline(h = mean(dat$pObama[dat$trt == 1]), lty = 2)
abline(lm(pObama ~ Dean, data = dat[dat$trt == 0,]), lty = 1)
abline(lm(pObama ~ Dean, data = dat[dat$trt == 1,]), lty = 2)
abline(lm(pObama ~ Dean, data = dat[mm$matches[,1],]), lty = 1)
abline(lm(pObama ~ Dean, data = dat[mm$matches[,2],]), lty = 2)
par(mfrow = c(1,1))
plot(pObama ~ Dean, data = dat, pch = trt + 1)
with(dat, segments(Dean[mm$match[,1]], pObama[mm$match[,1]], Dean[mm$match[,2]], pObama[mm$match[,2]], col = gray(0.75)))
abline(h = mean(dat$pObama[dat$trt == 0]), lty = 1)
abline(h = mean(dat$pObama[dat$trt == 1]), lty = 2)
abline(lm(pObama ~ Dean, data = dat[mm$matches[,1],]), lty = 1)
abline(lm(pObama ~ Dean, data = dat[mm$matches[,2],]), lty = 2)
par(mfrow = c(1,1))
plot(pObama ~ Dean, data = dat, pch = trt + 1)
with(dat, segments(Dean[mm$match[,1]], pObama[mm$match[,1]], Dean[mm$match[,2]], pObama[mm$match[,2]], col = gray(0.75)))
abline(h = mean(dat$pObama[dat$trt == 0]), lty = 1)
abline(h = mean(dat$pObama[dat$trt == 1]), lty = 2)
abline(lm(pObama ~ Dean, data = dat[dat$trt == 0,]), lty = 1)
abline(lm(pObama ~ Dean, data = dat[dat$trt == 1,]), lty = 2)
abline(lm(pObama ~ Dean + trt, data = dat[dat$trt == 0,]), lty = 1)
coef(lm(pObama ~ Dean + trt, data = dat[dat$trt == 0,]))
coef(lm(pObama ~ Dean + trt, data = dat[dat$trt == 1,]))
coef(lm(pObama ~ Dean, data = dat[dat$trt == 0,]))
coef(lm(pObama ~ Dean, data = dat[dat$trt == 1,]))
coef(lm(pObama ~ Dean, data = dat))
abline(lm(pObama ~ Dean, data = dat), lty = 1)
par(mfrow = c(1,1))
plot(pObama ~ Dean, data = dat, pch = trt + 1)
with(dat, segments(Dean[mm$match[,1]], pObama[mm$match[,1]], Dean[mm$match[,2]], pObama[mm$match[,2]], col = gray(0.75)))
abline(h = mean(dat$pObama[dat$trt == 0]), lty = 1)
abline(h = mean(dat$pObama[dat$trt == 1]), lty = 2)
abline(lm(pObama ~ Dean, data = dat), lty = 1)
coef(lm(pObama ~ Dean + trt, data = dat))
coef(lm(pObama ~ Dean + trt, data = dat))
abline(0.2211, 0.5229, lty = 2)
names(dat)
summary(lm(Obama ~ Dean + povrate + pci + white + absentee + trt, data = dat))
summary(lm(Obama ~ trt, data = dat))
summary(lm(Obama ~ Dean + povrate + pci + white + absentee + trt, data = dat))
summary(lm(Obama ~ Dean + trt, data = dat))
pdiff <- dat$pObama[mm$matches[,1]] - dat$pObama[mm$matches[,2]]
t.test(pdiff)
pdiff
t.test(pdiff)
summary(lm(Obama ~ Dean + trt, data = dat))
summary(lm(Obama ~ trt, data = dat))
summary(lm(pObama ~ trt, data = dat))
summary(lm(pObama ~ Dean + povrate + pci + white + absentee + trt, data = dat))
summary(lm(pObama ~ Dean + pci + white + absentee + trt, data = dat))
summary(lm(pObama ~ Dean + trt, data = dat))
summary(lm(pObama ~ Dean + pci + white + absentee + trt, data = dat))
coef(lm(pObama ~ trt, data = dat))
coef(lm(pObama ~ Dean + trt, data = dat))
coef(lm(pObama ~ Dean + pci + white + absentee + trt, data = dat))
coef(lm(pObama ~ trt + Dean + pci + white + absentee, data = dat))
coef(lm(pObama ~ trt, data = dat))
coef(lm(pObama ~ trt + Dean, data = dat))
coef(lm(pObama ~ trt + Dean + pci + white + absentee, data = dat))
mean(pdiff)
mean(pdiff)
mean(pdiff)
mean(pdiff2)
mean(pdiff)
mean(pdiff2)
mean(pdiff)
mean(pdiff2)
coef(lm(pObama ~ trt, data = dat))
coef(lm(pObama ~ trt + Dean, data = dat))
coef(lm(pObama ~ trt + Dean + pci + white + absentee, data = dat))
coef(lm(pObama ~ trt + pci + white + absentee, data = dat))
round(coef(lm(pObama ~ trt + pci + white + absentee, data = dat)), 3)
round(coef(lm(pObama ~ trt + Dean, data = dat)), 3)
round(coef(lm(pObama ~ trt + Dean + pci + white + absentee, data = dat)), 3)
round(coef(lm(pObama ~ trt, data = dat)), 3)
round(coef(lm(pObama ~ trt + Dean, data = dat)), 3)
round(coef(lm(pObama ~ trt + Dean + pci + white + absentee, data = dat)), 3)
round(coef(lm(pObama ~ trt + pci + white + absentee, data = dat)), 3)
round(coef(lm(pObama ~ trt, data = dat)), 3)
round(coef(lm(pObama ~ trt + Dean, data = dat)), 3)
round(coef(lm(pObama ~ trt + Dean + pci + white + absentee, data = dat)), 3)
round(coef(lm(pObama ~ trt + pci + white + absentee, data = dat)), 3)
