# -->
# In MCA, the percentages of inertia associated with the first components are generally much lower than in PCA.
# This is because, in PCA, only the linear relationships are studied: one single component should be sufficient to represent all of the variables
# if they are highly correlated.
# In MCA, we are studying much more general relationships and at least min(Kj-1, Kl-1) dimensions are required in order to represent the relationship between two variables,
# each of which has KJ and Kl categories, respectively.
# ------------------------------------------------------------------------------
# Contributions
# ------------------------------------------------------------------------------
# The larger scale of the dataset does not affect contribution, as this aspect is calculated for each component.
# It should be noted that the contribution of a categorical variable to a given component can be calculated by adding the contributions to these categories.
# The contributions of variables which contributed to the construction of dimension 1 in descending order.
round(res.mca$var$contrib[rev(order(res.mca$var$contrib[,1])), 1], digits = 5)
# ----------
# 2nd dimension
round(res.mca$var$contrib[rev(order(res.mca$var$contrib[,2])), 2], digits = 5)
# ------------------------------------------------------------------------------
# Representation Quality
# ------------------------------------------------------------------------------
# Due to the scale of the dataset, representation quality on a given plane is often much weaker compared to the representation qualities obtained in CA (or PCA)
# Representation quality of variables for dimension 1 in descending order.
round(res.mca$var$cos2[rev(order(res.mca$var$cos2[,1])), 1], digits = 5)
# ----------
# 2nd dimension
round(res.mca$var$cos2[rev(order(res.mca$var$cos2[,2])), 2], digits = 5)
# ------------------------------------------------------------------------------
# Cloud of individuals
# ------------------------------------------------------------------------------
par(mfrow = c(1,1))
# plot(res.mca, invisible = c("var", "quali.sup"), cex = 0.7, label = "none")
plot(res.mca, invisible = c("var", "quali.sup"), cex = 0.7)
# -->
# As in most analyses of survey data, the cloud of individuals is made up of many points and our objective is to see if
# we can identify a specific shape, or groups of notable individuals.
# In the example, there are no notable groups of individuals: the cloud of points is a rather consistent shape.
# ----------
# largest coordinate in second dimension  --> all "don't know" (2) answer
WP6[455,]
par(mfrow = c(1,1))
plot(res.mca, invisible = c("ind", "quali.sup", "quanti.sup"), cex = 0.7)
par(mfrow = c(1,1))
plot(res.mca, choix = "quanti.sup", cex = 0.7)
res.mca$quanti.sup$coord
par(mfrow = c(1,1))
plot(res.mca, choix = "quali.sup", cex = 0.7)
res.mca$quanti.sup$coord
plot(res.mca, invisible = c("ind", "var"), cex = 0.7)
res.mca$quanti.sup$coord
res.mca$quali.sup$coord
dim(WilPat)
table(WilPat$Country)
res.mca <- MCA(WP6, quali.sup = 7)
dimdesc(res.mca)$'Dim 1'$quali
dimdesc(res.mca)$'Dim 1'$category
lapply(dimdesc(res.mca), lapply, round, 4)
lapply(dimdesc(res.mca), lapply, signif, 3)
names(WP6)
plotellipses(res.mca, keepvar = c("GayMarriage", "GayAdoption", "SexualFreedom"))
plotellipses(res.mca, keepvar = 1)
plotellipses(res.mca, keepvar = 1, label = "none")
help("plotellipses")
setwd("//media//kswada//MyFiles//R//wilpat")
packages <- c("dplyr", "MPsychoR")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
# ------------------------------------------------------------------------------
# data:  WilPat
# ------------------------------------------------------------------------------
data("WilPat", package = "MPsychoR")
str(WilPat)
# ----------
# Let us pick six items: gay marriage, sexual freedom, gay adoption, gender quotas, affirmative action, and legalized marijuana
# and country variable (Hungary, the USA, and India)
WP6 <- WilPat[, c(32, 38, 41, 44, 45, 46, 47)]
# In addition, include 4 more variables:
#   - self-reported liberal-consevative item (re-categorized into 4 categories)  (we will take as ordinal)
#   - self-reported political lef-right identification item on a 10-point scale  (we use a spline transformation since there are many categories)
#   - gender (nominal) and age (linear)
WPmixed <- WilPat[, c(32, 38, 41, 44, 45, 46, 47:51)]
table(WPmixed$LibCons)
WPmixed$LibCons <- cut(WPmixed$LibCons, breaks = c(0, 2, 4, 6, 9), labels = 1:4)
WPmixed$LibCons
WPmixed <- na.omit(WPmixed)
names(WPmixed)
# item knots (data)
itknots <- knotsGifi(WPmixed[, 1:6], "D")
# country knots (data)
cknots <- knotsGifi(WPmixed[, 7], "D")
# lib-cons knots (data)
lcknots <- knotsGifi(WPmixed[, 8], "D")
# left-right (terciles)
lrknots <- knotsGifi(WPmixed[, 9], "Q", n = 2)
# gender knots (data)
genknots <- knotsGifi(WPmixed[, 10], "D")
# age knots (empty)
ageknots <- knotsGifi(WPmixed[, 11], "E")
lrknots
genknots
( knotlist <- c(itknots, cknots, lcknots, lrknots, genknots, ageknots) )
( ordvec <- c(rep(FALSE, 6), FALSE, TRUE, TRUE, FALSE, TRUE) )
# The degrees for the nominal variables are set to -1, as required by the homals function
# For the left-right variable, we define a polynomial degree of 2.
( degvec <- c(rep(-1, 7), 1, 2, -1, 1) )
# ------------------------------------------------------------------------------
# Check transformation property by Princals
#   - Princals is a restricted version of Homals. If we fit a nominal Princals, the category quantifications on the second dimension
#     are linearly related to the ones from dimension 1.
# ------------------------------------------------------------------------------
graphics.off()
op <- par(mfrow = c(1,2))
# ----------
# Princals loadings
prinwp1 <- princals(WP6, ordinal = FALSE)
plot(prinwp1, main = "Nominal Princals Loadings")
# ----------
# Princals category quantifications
# conver to homals class and plot
class(prinwp1) <- "homals"
for (i in 1:ncol(WP6)) {
quants <- prinwp1$quantifications[[i]]
ind <- apply(quants, 1, function(xx) all(xx == 0))
quants <- quants[!ind, ]
rownames(quants) <- rownames(homwp$quantifications[[i]])
prinwp1$quantifications[[i]] <- quants
}
plot(prinwp1, col.points = colvec, main = "Nominal Princals Joint Plot")
library("colorspace")
colvec <- rainbow_hcl(ncol(WP6), 80)
for (i in 1:ncol(WP6)) {
xy <- prinwp1$loadings[i,]
fit <- lm(xy[2] ~ -1 + xy[1])
abline(fit, col = colvec[i])
}
par(op)
graphics.off()
op <- par(mfrow = c(1,2))
# ----------
# Princals loadings
prinwp1 <- princals(WP6, ordinal = FALSE)
plot(prinwp1, main = "Nominal Princals Loadings")
hommix <- homals(WPmixed, knots = knotlist, ordinal = ordvec, degrees = degvec)
summary(hommix)
hommix
par(mfrow = c(2,2))
plot(hommix, method = "transplot", var.subset = 6:11)
plot.homals
help(plot.homals)
par(mfrow = c(2,2))
plot(hommix, plot.type = "transplot", var.subset = 6:11)
names(hommix)
hommix$objectscores
hommix$transform
head(hommix$transform)
help(homals)
head(hommix$transform$Gender)
head(hommix$transform$Country)
names(WPmixed)
head(hommix$transform$GayMarriage)
names(homwp)
homwp$transform
homwp$quantifications
homwp$quantifications
plot(homwp, plot.type = "transplot")
plot(homwp, plot.type = "transplot", var.subset = 1:4)
homwp$quantifications$GayMarriage
par(mfrow = c(1,1))
plot(homwp)
par(mfrow = c(2,2))
plot(homwp, var.subset = 1)
plot(homwp, var.subset = 2)
plot(homwp, var.subset = 3)
plot(homwp, var.subset = 4)
par(mfrow = c(2,2))
plot(hommix, plot.type = "transplot", var.subset = 6:11)
hommix$transform$LeftRight
par(mfrow = c(1,1))
plot(hommix)
par(mfrow = c(2,2))
plot(homwp, var.subset = 7)
plot(homwp, var.subset = 8)
plot(homwp, var.subset = 9)
plot(homwp, var.subset = 10)
par(mfrow = c(2,2))
plot(hommix, var.subset = 7)
plot(hommix, var.subset = 8)
plot(hommix, var.subset = 9)
plot(hommix, var.subset = 10)
WPmixed <- rapply(WPmixed, f = as.factor, classes = "numeric", how = "replace")
str(WPmixed)
setwd("//media//kswada//MyFiles//R//wilpat")
packages <- c("dplyr", "MPsychoR")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
# ------------------------------------------------------------------------------
# data:  WilPat
# ------------------------------------------------------------------------------
data("WilPat", package = "MPsychoR")
str(WilPat)
# ----------
# Let us pick six items: gay marriage, sexual freedom, gay adoption, gender quotas, affirmative action, and legalized marijuana
# and country variable (Hungary, the USA, and India)
WP6 <- WilPat[, c(32, 38, 41, 44, 45, 46, 47)]
# In addition, include 4 more variables:
#   - self-reported liberal-consevative item (re-categorized into 4 categories)  (we will take as ordinal)
#   - self-reported political lef-right identification item on a 10-point scale  (we use a spline transformation since there are many categories)
#   - gender (nominal) and age (linear)
WPmixed <- WilPat[, c(32, 38, 41, 44, 45, 46, 47:51)]
names(WPmixed)
# ----------
str(WPmixed)
WPmixed <- rapply(WPmixed, f = as.factor, classes = "numeric", how = "replace")
str(WPmixed)
res.mca <- MCA(WPmixed)
prinwp1 <- princals(WP6, ordinal = FALSE)
plot(prinwp1, plot.type = "transplot")
setwd("//media//kswada//MyFiles//R//wilpat")
packages <- c("dplyr", "MPsychoR")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
# ------------------------------------------------------------------------------
# data:  WilPat
# ------------------------------------------------------------------------------
data("WilPat", package = "MPsychoR")
str(WilPat)
# ----------
# Let us pick six items: gay marriage, sexual freedom, gay adoption, gender quotas, affirmative action, and legalized marijuana
# and country variable (Hungary, the USA, and India)
WP6 <- WilPat[, c(32, 38, 41, 44, 45, 46, 47)]
# In addition, include 4 more variables:
#   - self-reported liberal-consevative item (re-categorized into 4 categories)  (we will take as ordinal)
#   - self-reported political lef-right identification item on a 10-point scale  (we use a spline transformation since there are many categories)
#   - gender (nominal) and age (linear)
WPmixed <- WilPat[, c(32, 38, 41, 44, 45, 46, 47:51)]
# ------------------------------------------------------------------------------
# Combined HOmals-Princals Stategies
# ------------------------------------------------------------------------------
prinwp1 <- princals(WP6, ordinal = FALSE)
plot(prinwp1, plot.type = "transplot")
par(mfrow = c(3,2))
plot(prinwp1, plot.type = "transplot", var.subset = 1:6)
prinwp1 <- princals(WP6, ordinal = FALSE)
graphics.off()
op <- par(mfrow = c(1,2))
plot(prinwp1, main = "Nominal Princals Loadings")
class(prinwp1) <- "homals"
for (i in 1:ncol(WP6)) {
quants <- prinwp1$quantifications[[i]]
ind <- apply(quants, 1, function(xx) all(xx == 0))
quants <- quants[!ind, ]
rownames(quants) <- rownames(homwp$quantifications[[i]])
prinwp1$quantifications[[i]] <- quants
}
plot(prinwp1, col.points = colvec, main = "Nominal Princals Joint Plot")
library("colorspace")
colvec <- rainbow_hcl(ncol(WP6), 80)
for (i in 1:ncol(WP6)) {
xy <- prinwp1$loadings[i,]
fit <- lm(xy[2] ~ -1 + xy[1])
abline(fit, col = colvec[i])
}
par(op)
prinwp2 <- princals(WP6, ordinal = FALSE, copies = 2)
summary(prinwp1)
prinwp2
homwp
summary(prinwp2)
prinwp2
homwp
copvec <- c(rep(2, 7), 1, 1, 2, 1)
prinmix <- princals(WPmixed, knots = knotlist, ordinal = ordvec, degrees = degvec, copies = copvec)
prinmix
prinmix <- princals(WPmixed, knots = knotlist, ordinal = ordvec, degrees = degvec, copies = copvec)
setwd("//media//kswada//MyFiles//R//wilpat")
packages <- c("dplyr", "MPsychoR")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
# ------------------------------------------------------------------------------
# data:  WilPat
# ------------------------------------------------------------------------------
data("WilPat", package = "MPsychoR")
str(WilPat)
# ----------
# Let us pick six items: gay marriage, sexual freedom, gay adoption, gender quotas, affirmative action, and legalized marijuana
# and country variable (Hungary, the USA, and India)
WP6 <- WilPat[, c(32, 38, 41, 44, 45, 46, 47)]
# In addition, include 4 more variables:
#   - self-reported liberal-consevative item (re-categorized into 4 categories)  (we will take as ordinal)
#   - self-reported political lef-right identification item on a 10-point scale  (we use a spline transformation since there are many categories)
#   - gender (nominal) and age (linear)
WPmixed <- WilPat[, c(32, 38, 41, 44, 45, 46, 47:51)]
library(Gifi)
homwp <- homals(WP6)
summary(homwp)
prinwp2 <- princals(WP6, ordinal = FALSE, copies = 2)
summary(prinwp2)
prinwp2
homwp
copvec <- c(rep(2, 7), 1, 1, 2, 1)
prinmix <- princals(WPmixed, knots = knotlist, ordinal = ordvec, degrees = degvec, copies = copvec)
WPmixed$LibCons <- cut(WPmixed$LibCons, breaks = c(0, 2, 4, 6, 9), labels = 1:4)
WPmixed <- na.omit(WPmixed)
# ----------
# Q:  knots at the quantiles
# R:  equally spaced knots
# E:  interior knots
# D:  knots at the data points
# item knots (data)
itknots <- knotsGifi(WPmixed[, 1:6], "D")
# country knots (data)
cknots <- knotsGifi(WPmixed[, 7], "D")
# lib-cons knots (data)
lcknots <- knotsGifi(WPmixed[, 8], "D")
# left-right (terciles)
lrknots <- knotsGifi(WPmixed[, 9], "Q", n = 2)
# gender knots (data)
genknots <- knotsGifi(WPmixed[, 10], "D")
# age knots (empty)
ageknots <- knotsGifi(WPmixed[, 11], "E")
# ----------
( knotlist <- c(itknots, cknots, lcknots, lrknots, genknots, ageknots) )
# ----------
# specify which variables should be ordianlly restricted
# For all the nominal variables, the element is set as FALSE
( ordvec <- c(rep(FALSE, 6), FALSE, TRUE, TRUE, FALSE, TRUE) )
# The degrees for the nominal variables are set to -1, as required by the homals function
# For the left-right variable, we define a polynomial degree of 2.
( degvec <- c(rep(-1, 7), 1, 2, -1, 1) )
copvec <- c(rep(2, 7), 1, 1, 2, 1)
prinmix <- princals(WPmixed, knots = knotlist, ordinal = ordvec, degrees = degvec, copies = copvec)
op <- par(mfrow = c(3,2), mar = c(4,4,3,2))
# marijuana
plotvars <- as.matrix(prinmix$datanum[, 6])
xlabels <- as.data.frame(prinmix$data[, 6])
x1 <- as.matrix(prinmix$datanum[, 6])
y1 <- as.matrix(prinmix$transform[, c(11, 12)])
xy <- cbind(x1, y1)
ord <- order(xy[, 1])
sfun0 <- stepfun(xy[ord, 1][-1], xy[ord, 2], f = 0)
plot(sfun0, xlab = "original", ylab = "transformed", main = "LegalizedMarijuana", xaxt = "n", col = "black",
do.points = FALSE, verticals = FALSE, ylim = range(xy[,2:3]))
axis(1, labels = unique(xlabels[,1]), at = unique(x1))
sfun1 <- stepfun(xy[ord, 1][-1], xy[ord, 3], f = 0)
plot(sfun1, add = TRUE, col = "red", do.points = FALSE, verticals = FALSE)
# country
plotvars <- as.matrix(prinmix$datanum[, 7])
xlabels <- as.data.frame(prinmix$data[, 7])
x1 <- as.matrix(prinmix$datanum[, 7])
y1 <- as.matrix(prinmix$transform[, 13])
xy <- cbind(x1, y1)
ord <- order(xy[, 1])
sfun0 <- stepfun(xy[ord, 1][-1], xy[ord, 2], f = 0)
plot(sfun0, xlab = "original", ylab = "transformed", main = "Country", xaxt = "n", col = "black",
do.points = FALSE, verticals = FALSE)
axis(1, labels = unique(xlabels[,1]), at = unique(x1))
# libcons
plotvars <- as.matrix(prinmix$datanum[, 8])
xlabels <- as.data.frame(prinmix$data[, 8])
x1 <- as.matrix(prinmix$datanum[, 8])
y1 <- as.matrix(prinmix$transform[, 14])
xy <- cbind(x1, y1)
ord <- order(xy[, 1])
sfun0 <- stepfun(xy[ord, 1][-1], xy[ord, 2], f = 0)
plot(sfun0, xlab = "original", ylab = "transformed", main = "LibCons", xaxt = "n", col = "black",
do.points = FALSE, verticals = FALSE)
axis(1, labels = unique(xlabels[,1]), at = unique(x1))
# left-right
plotvars <- as.matrix(prinmix$datanum[, 9])
xlabels <- as.data.frame(prinmix$data[, 9])
x1 <- as.matrix(prinmix$datanum[, 9])
y1 <- as.matrix(prinmix$transform[, 15])
xy <- cbind(x1, y1)
ord <- order(xy[, 1])
plot(xy[ord, 1], xy[ord, 2], type = "l", xlab = "original", ylab = "transformed", main = "LeftRight",
xaxt = "n", col = "black")
axis(1, labels = unique(xlabels[, 1]), at = unique(x1))
# Gender
plotvars <- as.matrix(prinmix$datanum[, 10])
xlabels <- as.data.frame(prinmix$data[, 10])
x1 <- as.matrix(prinmix$datanum[, 10])
y1 <- as.matrix(prinmix$transform[, 16])
xy <- cbind(x1, y1)
ord <- order(xy[, 1])
sfun0 <- stepfun(xy[ord, 1][-1], xy[ord, 2], f = 0)
plot(sfun0, xlab = "original", ylab = "transformed", main = "Gender", xaxt = "n", col = "black",
do.points = FALSE, verticals = FALSE)
axis(1, labels = unique(xlabels[,1]), at = unique(x1))
# Age
plotvars <- as.matrix(prinmix$datanum[, 11])
xlabels <- as.data.frame(prinmix$data[, 11])
x1 <- as.matrix(prinmix$datanum[, 11])
y1 <- as.matrix(prinmix$transform[, 17])
xy <- cbind(x1, y1)
ord <- order(xy[, 1])
plot(xy[ord, 1], xy[ord, 2], type = "l", xlab = "original", ylab = "transformed", main = "Age", xaxt = "n",
col = "black")
axis(1, labels = unique(xlabels[, 1]), at = unique(x1))
par(op)
par(mfrow = c(1,1))
# loadings are divided by 10 for better mapping into the category quantificaiton space
loads <- prinmix$loadings[c(14, 15, 17), ]/10
rownames(loads) <-  c("LibCons", "LeftRight", "Age")
plot(loads, type = "p", pch = ".", xlab = "Dimension 2", ylab = "Dimension 2", main = "Princals Joint Plot",
col = "gray", asp = 1, ylim = c(-0.04, 0.06), xlim = c(-0.07, 0.05))
abline(h = 0, v = 0, col = "gray", lty = 2)
arrows(0, 0, loads[1, 1], loads[1, 2], length = 0.08, col = 1)
arrows(0, 0, loads[2, 1], loads[2, 2], length = 0.08, col = 1)
arrows(0, 0, loads[3, 1], loads[3, 2], length = 0.08, col = 1)
text(loads, labels = rownames(loads), pos = c(3,1,2), cex = 0.8, col = 1)
quants <- prinmix$quantifications[c(1:7, 10)]
for (i in 1:6) rownames(quants[[i]]) <- c(0,1,2)
rownames(quants[[7]]) <- c("India", "Hungary")
rownames(quants[[8]]) <- c("Female", "Male")
colvec <- rainbow_hcl(length(quants), 80)
for (i in 1:length(quants)) {
points(quants[[i]], pch = 20, col = colvec[i], cex = 0.7)
labs <- paste(names(quants)[i], rownames(quants[[i]]), sep = ".")
text(quants[[i]], labels = labs, pch = 20, col = colvec[i], cex = 0.7, pos = 3)
}
lcquants <- prinmix$quantifications[[8]]
rownames(lcquants) <- 1:4
points(lcquants, pch = 20, col = "gray", cex = 0.7)
labs <- paste("LibCons", rownames(lcquants), sep = ".")
text(lcquants, labels = labs, pch = 20, col = "gray", cex = 0.7, pos = c(4,2,3,4))
par(mfrow = c(1,1))
# loadings are divided by 10 for better mapping into the category quantificaiton space
loads <- prinmix$loadings[c(14, 15, 17), ]/10
rownames(loads) <-  c("LibCons", "LeftRight", "Age")
plot(loads, type = "p", pch = ".", xlab = "Dimension 2", ylab = "Dimension 2", main = "Princals Joint Plot",
col = "gray", asp = 1, ylim = c(-0.04, 0.06), xlim = c(-0.07, 0.05))
abline(h = 0, v = 0, col = "gray", lty = 2)
arrows(0, 0, loads[1, 1], loads[1, 2], length = 0.08, col = 1)
arrows(0, 0, loads[2, 1], loads[2, 2], length = 0.08, col = 1)
arrows(0, 0, loads[3, 1], loads[3, 2], length = 0.08, col = 1)
text(loads, labels = rownames(loads), pos = c(3,1,2), cex = 0.8, col = 1)
colvec <- colorspace::rainbow_hcl(length(quants), 80)
for (i in 1:length(quants)) {
points(quants[[i]], pch = 20, col = colvec[i], cex = 0.7)
labs <- paste(names(quants)[i], rownames(quants[[i]]), sep = ".")
text(quants[[i]], labels = labs, pch = 20, col = colvec[i], cex = 0.7, pos = 3)
}
lcquants <- prinmix$quantifications[[8]]
rownames(lcquants) <- 1:4
points(lcquants, pch = 20, col = "gray", cex = 0.7)
labs <- paste("LibCons", rownames(lcquants), sep = ".")
text(lcquants, labels = labs, pch = 20, col = "gray", cex = 0.7, pos = c(4,2,3,4))
par(mfrow = c(1,1))
# loadings are divided by 10 for better mapping into the category quantificaiton space
loads <- prinmix$loadings[c(14, 15, 17), ]/10
rownames(loads) <-  c("LibCons", "LeftRight", "Age")
plot(loads, type = "p", pch = ".", xlab = "Dimension 2", ylab = "Dimension 2", main = "Princals Joint Plot",
col = "gray", asp = 1, ylim = c(-0.04, 0.06), xlim = c(-0.07, 0.05))
abline(h = 0, v = 0, col = "gray", lty = 2)
arrows(0, 0, loads[1, 1], loads[1, 2], length = 0.08, col = 1)
arrows(0, 0, loads[2, 1], loads[2, 2], length = 0.08, col = 1)
arrows(0, 0, loads[3, 1], loads[3, 2], length = 0.08, col = 1)
text(loads, labels = rownames(loads), pos = c(3,1,2), cex = 0.8, col = 1)
quants <- prinmix$quantifications[c(1:7, 10)]
for (i in 1:6) rownames(quants[[i]]) <- c(0,1,2)
rownames(quants[[7]]) <- c("India", "Hungary")
rownames(quants[[8]]) <- c("Female", "Male")
# ----------
colvec <- colorspace::rainbow_hcl(length(quants), 80)
for (i in 1:length(quants)) {
points(quants[[i]], pch = 20, col = colvec[i], cex = 0.7)
labs <- paste(names(quants)[i], rownames(quants[[i]]), sep = ".")
text(quants[[i]], labels = labs, pch = 20, col = colvec[i], cex = 0.7, pos = 3)
}
lcquants <- prinmix$quantifications[[8]]
rownames(lcquants) <- 1:4
points(lcquants, pch = 20, col = "gray", cex = 0.7)
labs <- paste("LibCons", rownames(lcquants), sep = ".")
text(lcquants, labels = labs, pch = 20, col = "gray", cex = 0.7, pos = c(4,2,3,4))
par(mfrow = c(1,1))
# loadings are divided by 10 for better mapping into the category quantificaiton space
loads <- prinmix$loadings[c(14, 15, 17), ]/10
rownames(loads) <-  c("LibCons", "LeftRight", "Age")
plot(loads, type = "p", pch = ".", xlab = "Dimension 2", ylab = "Dimension 2", main = "Princals Joint Plot",
col = "gray", asp = 1, ylim = c(-0.04, 0.06), xlim = c(-0.07, 0.05))
abline(h = 0, v = 0, col = "gray", lty = 2)
arrows(0, 0, loads[1, 1], loads[1, 2], length = 0.08, col = 1)
arrows(0, 0, loads[2, 1], loads[2, 2], length = 0.08, col = 1)
arrows(0, 0, loads[3, 1], loads[3, 2], length = 0.08, col = 1)
text(loads, labels = rownames(loads), pos = c(3,1,2), cex = 0.8, col = 1)
quants <- prinmix$quantifications[c(1:7, 10)]
for (i in 1:6) rownames(quants[[i]]) <- c(0,1,2)
rownames(quants[[7]]) <- c("India", "Hungary")
rownames(quants[[8]]) <- c("Female", "Male")
par(mfrow = c(1,1))
# ----------
# Loadings from prinmix:  "Libcons", "LeftRight" and "Age"
# loadings are divided by 10 for better mapping into the category quantificaiton space
loads <- prinmix$loadings[c(14, 15, 17), ]/10
rownames(loads) <-  c("LibCons", "LeftRight", "Age")
plot(loads, type = "p", pch = ".", xlab = "Dimension 2", ylab = "Dimension 2", main = "Princals Joint Plot",
col = "gray", asp = 1, ylim = c(-0.04, 0.06), xlim = c(-0.07, 0.05))
abline(h = 0, v = 0, col = "gray", lty = 2)
arrows(0, 0, loads[1, 1], loads[1, 2], length = 0.08, col = 1)
arrows(0, 0, loads[2, 1], loads[2, 2], length = 0.08, col = 1)
arrows(0, 0, loads[3, 1], loads[3, 2], length = 0.08, col = 1)
text(loads, labels = rownames(loads), pos = c(3,1,2), cex = 0.8, col = 1)
quants <- prinmix$quantifications[c(1:7, 10)]
for (i in 1:6) rownames(quants[[i]]) <- c(0,1,2)
rownames(quants[[7]]) <- c("India", "Hungary")
rownames(quants[[8]]) <- c("Female", "Male")
quants
# ----------
colvec <- colorspace::rainbow_hcl(length(quants), 80)
for (i in 1:length(quants)) {
points(quants[[i]], pch = 20, col = colvec[i], cex = 0.7)
labs <- paste(names(quants)[i], rownames(quants[[i]]), sep = ".")
text(quants[[i]], labels = labs, pch = 20, col = colvec[i], cex = 0.7, pos = 3)
}
help(homals)
help(princals)
help(homals)
help(princals)
