q()
install.pacakges(tidyverse, dep = T)
install.pacakge(tidyverse, dep = T)
install.packages(tidyverse, dep = T)
install.package(tidyverse, dep = T)
install.packages("tidyverse", dep = T)
library(lubridate)
install.packages("plm", dep = T)
install.packages("vcd", dep = T)
install.packages("vcdExtra", dep = T)
install.packages("factMineR", dep = T)
install.packages("Rtools", dep = T)
install.packages("factMineR", dep = T)
writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
Sys.which("make")
install.packages("factMineR", dep = T)
install.packages("FactMineR", dep = T)
install.packages("FactoMineR", dep = T)
install.packages("car", dep = T)
install.packages("caret", dep = T)
install.packages("stringr", dep = T)
install.packages("ggplot2", dep = T)
install.packages("psych", dep = T)
install.packages("lrm", dep = T)
install.packages("Hmisc", dep = T)
install.packages("rms", dep = T)
install.packages("gamlss", dep = T)
install.packages("gam", dep = T)
install.packages("mgcv", dep = T)
install.packages("nlme", dep = T)
install.packages("lme4", dep = T)
install.packages("smacof", dep = T)
install.packages("astsa", dep = T)
install.packages("zoo", dep = T)
install.packages("fda", dep = T)
install.packages("faraway", dep = T)
install.packages("Rethinking", dep = T)
install.packages("sp", dep = T)
install.packages("gstat", dep = T)
install.packages("gls", dep = T)
install.packages("AER", dep = T)
install.packages("biplot", dep = T)
install.packages("Gifi", dep = T)
install.packages("effects", dep = T)
install.packages("MASS", dep = T)
install.packages("ca", dep = T)
install.packages("vars", dep = T)
install.packages("MTS", dep = T)
install.packages("forecast", dep = T)
install.packages("cluster", dep = T)
install.packages("anacor", dep = T)
install.packages("cfa", dep = T)
install.packages("mda", dep = T)
install.packages("acepack", dep = T)
install.packages("plotmo", dep = T)
install.packages("rpart", dep = T)
install.packages("cancor", dep = T)
install.packages("qgraph", dep = T)
install.packages("corrplot", dep = T)
install.packages("eigenmodel", dep = T)
install.packages("latentnet", dep = T)
install.packages("network", dep = T)
install.packages("mgcv", dep = T)
install.packages("rjags", dep = T)
install.packages("depmixS4", dep = T)
install.packages("dEdonlp2", dep = T)
install.packages("Rdonlp2", dep = T)
install.packages("lattice", dep = T)
install.packages("VGAM", dep = T)
install.packages("adespatial",dep = T)
install.packages("vegan",dep = T)
install.packages("RgoogleMaps",dep = T)
install.packages("googleVis",dep = T)
install.packages("labdsv",dep = T)
setwd("C:\\Users\\kswad\\OneDrive\\デスクトップ\\技術力強化_統計解析\\51_解析スクリプト\\long_junmp")
packages <- c("dplyr", "rstan")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
# ------------------------------------------------------------------------------
# data:  long jump
# ------------------------------------------------------------------------------
N <- 25
x <- c(8.95, 8.68, 8.70, 8.74, 8.71, 8.58, 8.63, 8.48, 8.60, 8.65,
8.41, 8.52, 8.53, 8.60, 8.60, 8.56, 8.66, 8.73, 8.74, 8.47,
8.54, 8.35, 8.56, 8.51, 8.52)
data <- list(N = N, x = x)
# ------------------------------------------------------------------------------
# Scan stan code
# ------------------------------------------------------------------------------
scr <- ".//stan//long_jump.stan"
scan(scr, what = character(), sep = "\n", blank.lines.skip = F)
getwd()
setwd("C:\\Users\\kswad\\OneDrive\\デスクトップ\\技術力強化_統計解析\\51_解析スクリプト\\long_junmp")
setwd("C:\\Users\\kswad\\OneDrive\\デスクトップ\\技術力強化_統計解析\\51_解析スクリプト")
setwd("C:\\Users\\kswad\\OneDrive\\デスクトップ\\技術力強化_統計解析\\51_解析スクリプト"\\long_jump")
setwd("C:\\Users\\kswad\\OneDrive\\デスクトップ\\技術力強化_統計解析\\51_解析スクリプト\\long_jump")
packages <- c("dplyr", "rstan")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
# ------------------------------------------------------------------------------
# data:  long jump
# ------------------------------------------------------------------------------
N <- 25
x <- c(8.95, 8.68, 8.70, 8.74, 8.71, 8.58, 8.63, 8.48, 8.60, 8.65,
8.41, 8.52, 8.53, 8.60, 8.60, 8.56, 8.66, 8.73, 8.74, 8.47,
8.54, 8.35, 8.56, 8.51, 8.52)
data <- list(N = N, x = x)
# ------------------------------------------------------------------------------
# Scan stan code
# ------------------------------------------------------------------------------
scr <- ".//stan//long_jump.stan"
scan(scr, what = character(), sep = "\n", blank.lines.skip = F)
par <- c("mu", "sigma", "s", "p_w", "x_99", "u_rover100", "r_w", "xpred", "p_new")
war <- 5000
ite <- 10000
see <- 1234
dig <- 3
cha <- 4
fit <- stan(file = scr, model_name = "long_jump", data = data, pars = par, verbose = F, seed = see, chains = cha, warmup = war, iter = ite)
traceplot(fit)
plot(fit)
print(fit, pars = par, digits_summary = dig)
setwd("C:\\Users\\kswad\\OneDrive\\デスクトップ\\技術力強化_統計解析\\51_解析スクリプト\\divorce")
packages <- c("dplyr", "rstan")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
source("divorce_data.R")
length(dat)
data.ls <- list(J = length(dat), tt = dat)
table(dat)
dat
summary(dat)
psych::describe(dat)
par(mfrow = c(1,2))
# ----------
# shape paramter
m <- 3.5
# location parameter
eta <- c(2, 3, 4, 5, 6)
plot(0, 1, xlim=c(0, 10), ylim=c(0, 1.0), lty = i, lwd = 2, ylab="", xlab="x", cex.axis=1.6, cex.lab=1.6, type = "n",
main = paste0("shape:", m, " + locations changes"))
for(i in 1:length(eta)){
par(new = T)
curve(dweibull(x, shape=round(mean(m),3), scale=round(mean(eta[i]),3)),
xlim=c(0, 10), ylim=c(0, 1.0), lty = i, lwd = 2, ylab="", xlab="x", col = i, cex.axis=1.6, cex.lab=1.6)
}
m <- c(0.5, 1, 1.5, 3.5, 4, 5)
# location parameter
eta <- 2
plot(0, 1, xlim=c(0, 10), ylim=c(0, 1.0), lty = i, lwd = 2, ylab="", xlab="x", cex.axis=1.6, cex.lab=1.6, type = "n",
main = paste0("location:", eta, " + shape changes"))
for(i in 1:length(m)){
par(new = T)
curve(dweibull(x, shape=round(mean(m[i]),3), scale=round(mean(eta),3)),
xlim=c(0, 10), ylim=c(0, 1.0), lty = i, lwd = 2, ylab="", xlab="x", col = i, cex.axis=1.6, cex.lab=1.6)
}
graphics.off()
par(mfrow = c(1,2))
x <- seq(0, 10, by = 0.01)
# ----------
# shape paramter
m <- 3.5
# location parameter
eta <- c(2, 3, 4, 5, 6)
plot(0, 1, xlim=c(0, 10), ylim=c(0, 1.0), lty = i, lwd = 2, ylab="", xlab="x", cex.axis=1.6, cex.lab=1.6, type = "n",
main = paste0("shape:", m, " + locations changes"))
for(i in 1:length(eta)){
par(new = T)
curve(exp(-(x / eta[i]) ^ m),
xlim=c(0, 10), ylim=c(0, 1.0), lty = i, lwd = 2, ylab="", xlab="x", col = i, cex.axis=1.6, cex.lab=1.6)
}
# ----------
# shape paramter
m <- c(0.5, 1, 1.5, 3.5, 4, 5)
# location parameter
eta <- 2
plot(0, 1, xlim=c(0, 10), ylim=c(0, 1.0), lty = i, lwd = 2, ylab="", xlab="x", cex.axis=1.6, cex.lab=1.6, type = "n",
main = paste0("location:", eta, " + shape changes"))
for(i in 1:length(m)){
par(new = T)
curve(exp(-(x / eta) ^ m[i]),
xlim=c(0, 10), ylim=c(0, 1.0), lty = i, lwd = 2, ylab="", xlab="x", col = i, cex.axis=1.6, cex.lab=1.6)
}
graphics.off()
par(mfrow = c(1,2))
# ----------
# shape paramter
m <- 3.5
# location parameter
eta <- c(2, 3, 4, 5, 6)
plot(0, 1, xlim=c(0, 3), ylim=c(0, 1.0), lty = i, lwd = 2, ylab="", xlab="x", cex.axis=1.6, cex.lab=1.6, type = "n",
main = paste0("shape:", m, " + locations changes"))
for(i in 1:length(eta)){
par(new = T)
curve(dweibull(x,shape=round(mean(m),3), scale=round(mean(eta[i]),3)) / (1-pweibull(x,shape=round(mean(m),3), scale=round(mean(eta[i]),3))),
xlim=c(0, 3), ylim=c(0, 1.0), lty = i, lwd = 2, ylab="", col = i, cex.axis = 1.6, cex.lab = 1.6)
}
# ----------
# shape paramter
m <- c(0.5, 1, 1.5, 3.5, 4, 5)
# location parameter
eta <- 2
plot(0, 1, xlim=c(0, 3), ylim=c(0, 1.0), lty = i, lwd = 2, ylab="", xlab="x", cex.axis=1.6, cex.lab=1.6, type = "n",
main = paste0("location:", eta, " + shape changes"))
for(i in 1:length(m)){
par(new = T)
curve(dweibull(x,shape=round(mean(m[i]),3), scale=round(mean(eta),3)) / (1-pweibull(x,shape=round(mean(m[i]),3), scale=round(mean(eta),3))),
xlim=c(0, 3), ylim=c(0, 1.0), lty = i, lwd = 2, ylab="", col = i, cex.axis = 1.6, cex.lab = 1.6)
}
graphics.off()
par(mfrow = c(1,2))
# ----------
# shape paramter
m <- 3.5
# location parameter
eta <- c(2, 3, 4, 5, 6)
plot(0, 1, xlim=c(0, 3), ylim=c(0, 1.0), lty = i, lwd = 2, ylab="", xlab="x", cex.axis=1.6, cex.lab=1.6, type = "n",
main = paste0("Hazard Function /n shape:", m, " + locations changes"))
for(i in 1:length(eta)){
par(new = T)
curve(dweibull(x,shape=round(mean(m),3), scale=round(mean(eta[i]),3)) / (1-pweibull(x,shape=round(mean(m),3), scale=round(mean(eta[i]),3))),
xlim=c(0, 3), ylim=c(0, 1.0), lty = i, lwd = 2, ylab="", col = i, cex.axis = 1.6, cex.lab = 1.6)
}
graphics.off()
par(mfrow = c(1,2))
# ----------
# shape paramter
m <- 3.5
# location parameter
eta <- c(2, 3, 4, 5, 6)
plot(0, 1, xlim=c(0, 3), ylim=c(0, 1.0), lty = i, lwd = 2, ylab="", xlab="x", cex.axis=1.6, cex.lab=1.6, type = "n",
main = paste0("Hazard Func   shape:", m, " + locations changes"))
for(i in 1:length(eta)){
par(new = T)
curve(dweibull(x,shape=round(mean(m),3), scale=round(mean(eta[i]),3)) / (1-pweibull(x,shape=round(mean(m),3), scale=round(mean(eta[i]),3))),
xlim=c(0, 3), ylim=c(0, 1.0), lty = i, lwd = 2, ylab="", col = i, cex.axis = 1.6, cex.lab = 1.6)
}
m <- c(0.5, 1, 1.5, 3.5, 4, 5)
# location parameter
eta <- 2
plot(0, 1, xlim=c(0, 3), ylim=c(0, 1.0), lty = i, lwd = 2, ylab="", xlab="x", cex.axis=1.6, cex.lab=1.6, type = "n",
main = paste0("Hazard Func   location:", eta, " + shape changes"))
for(i in 1:length(m)){
par(new = T)
curve(dweibull(x,shape=round(mean(m[i]),3), scale=round(mean(eta),3)) / (1-pweibull(x,shape=round(mean(m[i]),3), scale=round(mean(eta),3))),
xlim=c(0, 3), ylim=c(0, 1.0), lty = i, lwd = 2, ylab="", col = i, cex.axis = 1.6, cex.lab = 1.6)
}
graphics.off()
par(mfrow = c(1,2))
x <- seq(0, 10, by = 0.01)
# ----------
# shape paramter
m <- 3.5
# location parameter
eta <- c(2, 3, 4, 5, 6)
plot(0, 1, xlim=c(0, 10), ylim=c(0, 1.0), lty = i, lwd = 2, ylab="", xlab="x", cex.axis=1.6, cex.lab=1.6, type = "n",
main = paste0("Survival Func   shape:", m, " + locations changes"))
for(i in 1:length(eta)){
par(new = T)
curve(exp(-(x / eta[i]) ^ m),
xlim=c(0, 10), ylim=c(0, 1.0), lty = i, lwd = 2, ylab="", xlab="x", col = i, cex.axis=1.6, cex.lab=1.6)
}
# ----------
# shape paramter
m <- c(0.5, 1, 1.5, 3.5, 4, 5)
# location parameter
eta <- 2
plot(0, 1, xlim=c(0, 10), ylim=c(0, 1.0), lty = i, lwd = 2, ylab="", xlab="x", cex.axis=1.6, cex.lab=1.6, type = "n",
main = paste0("Survival Func   location:", eta, " + shape changes"))
for(i in 1:length(m)){
par(new = T)
curve(exp(-(x / eta) ^ m[i]),
xlim=c(0, 10), ylim=c(0, 1.0), lty = i, lwd = 2, ylab="", xlab="x", col = i, cex.axis=1.6, cex.lab=1.6)
}
gamlss.dist::WEI()
# -->
# WEI is log link for mu and sigma both.
# ----------
gamlss(dat ~ 1, family = WEI)
# ----------
m1 <- histDist(dat, family = WEI)
m1
gamlss.dist::WEI()
gamlss(dat ~ 1, family = WEI)
library(gamlss)
gamlss(dat ~ 1, family = WEI)
m1 <- histDist(dat, family = WEI)
m1
par(mfrow = c(1,1))
m1 <- histDist(dat, family = WEI)
m1
exp(4.953)
exp(0.249)
wp(m1)
f1 <- fitDist(dat, type = "realplus", k = 2, trace = TRUE)
# ----------
# best model is BCPEo
# Note that WEI family si still in the 3rd to 5th best
f1$fits
f1$failed
par(mfrow = c(1,1))
histDist(dat, family = BCPEo)
parallel::detectCores()
options(mc.cores = parallel::detectCores())
scr <- ".//stan//divorce.stan"
scan(scr, what = character(), sep = "\n", blank.lines.skip = F)
# par <- c("m", "eta", "P", "mu", "mode")
par <- c("m", "eta", "mu", "mode")
war <- 2500
ite <- 5000
see <- 1234
dig <- 3
cha <- 4
# ------------------------------------------------------------------------------
# Estimate
# ------------------------------------------------------------------------------
fit <- stan(file=scr, model_name="divorce", data=data.ls, pars=par, verbose=F, seed=see, chains=cha, warmup=war, iter=ite)
setwd("//media//kswada//MyFiles//R//Bayesian_inference//divorce//")
packages <- c("dplyr", "rstan")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
# ------------------------------------------------------------------------------
# data:  divorce
# ------------------------------------------------------------------------------
source("divorce_data.R")
length(dat)
data.ls <- list(J = length(dat), tt = dat)
table(dat)
# ------------------------------------------------------------------------------
# Set cores
# ------------------------------------------------------------------------------
# parallel::detectCores()
# options(mc.cores = parallel::detectCores())
# ------------------------------------------------------------------------------
# scan stan code
# ------------------------------------------------------------------------------
scr <- ".//stan//divorce.stan"
scan(scr, what = character(), sep = "\n", blank.lines.skip = F)
# ------------------------------------------------------------------------------
# set parameters
# ------------------------------------------------------------------------------
# par <- c("m", "eta", "P", "mu", "mode")
par <- c("m", "eta", "mu", "mode")
war <- 2500
ite <- 5000
see <- 1234
dig <- 3
cha <- 4
# ------------------------------------------------------------------------------
# Estimate
# ------------------------------------------------------------------------------
fit <- stan(file=scr, model_name="divorce", data=data.ls, pars=par, verbose=F, seed=see, chains=cha, warmup=war, iter=ite)
traceplot(fit)
print(fit, pars=par, digits_summary=dig)
exp(4.953)
exp(0.249)
m1
m1 <- histDist(dat, family = WEI)
m1
library(gamlss)
gamlss.dist::WEI()
# -->
# WEI is log link for mu and sigma both.
# ----------
gamlss(dat ~ 1, family = WEI)
# ----------
par(mfrow = c(1,1))
m1 <- histDist(dat, family = WEI)
m1
exp(4.953) * (1 - 1 / exp(0.249)) ^ (1 / exp(0.249))
m <- extract(fit)$m
eta <- extract(fit)$eta
curve(dweibull(x, shape=round(mean(m),3), scale=round(mean(eta),3)),
xlim=c(0,408), ylim=c(0,.006), lty=1, lwd=3, ylab="", xlab="x", cex.axis=1.6, cex.lab=1.6)
# ----------
# hazard function
curve(dweibull(x,shape=round(mean(m),3), scale=round(mean(eta),3)) / (1-pweibull(x,shape=round(mean(m),3), scale=round(mean(eta),3))),
xlim=c(0,408), ylim=c(0,0.02), lty=1,lwd=3, ylab="", cex.axis=1.6, cex.lab=1.6)
