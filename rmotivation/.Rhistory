a22c <- 1 - 1/sum(exps2b1)
a22c
# a22, how likely person 1 stays in state 1 when block = incongruent
exps2b2 <- exp(eta2[2,])
a22ic <- 1 - 1/sum(exps2b2)
a22ic
Acong <- round(matrix(a11c, 1 - a11c, 1 - a22c, a22c), 2, byrow = TRUE, 5)
matrix(a11c, 1 - a11c, 1 - a22c, a22c)
exps1b1 <- exp(eta1[1,])
a11c <- 1/sum(exps1b1)
a11c
# a11, how likely person 1 stays in state 1 when block = incongruent
exps1b2 <- exp(eta1[2,])
a11ic <- 1/sum(exps1b2)
a11ic
# a22, how likely person 1 stays in state 2 when block = congruent
exps2b1 <- exp(eta2[1,])
a22c <- 1 - 1/sum(exps2b1)
a22c
# a22, how likely person 1 stays in state 1 when block = incongruent
exps2b2 <- exp(eta2[2,])
a22ic <- 1 - 1/sum(exps2b2)
a22ic
Acong <- round(matrix(a11c, 1 - a11c, 1 - a22c, a22c), 2, byrow = TRUE, 5)
Acong <- round(matrix(a11c, 1 - a11c, 1 - a22c, a22c), 2, byrow = TRUE), 5)
Acong <- round(matrix(c(a11c, 1 - a11c, 1 - a22c, a22c), 2, byrow = TRUE), 5)
Aicong <- round(matrix(c(a11ic, 1 - a11ic, 1 - a22ic, a22ic), 2, byrow = TRUE), 5)
dimnames(Acong) <- dimnames(Aicong) <- list(c("fromS1", "fromS2"), c("toS1", "toS2"))
Acong
Aicong
# -->
# These results show again that the person's state switching behavior is almost fully determined by the block condition.
# We can interpret state 1 as the "congruent state" and state 2 as the "incongruent state", for person 1.
data("tension", package = "MPsychoR")
str(tension)
tension1 <- as.matrix(tension[, 1:800])
tension1 <- as.matrix(tension[, 1:800])
cond <- tension$condition
plot(tension1)
graphics.off()
tension1
plot(tension1, type = "l")
dim(tension1)
head(tension)
str(tension)
plot(tension$T1, type = "l")
dim(tension)
plot(tension[,1], type = "l")
plot(tension[1,], type = "l")
plot(as.vector(tension[1,]), type = "l")
plot(as.vector(tension[1,]))
as.vector(tension[1,])
unclass(tension[1,])
unname(tension[1,]
unname(tension[1,])
unname(tension[1,])
plot(unname(tension[1,]))
tmp <- t(tension[1,])
tmp
tmp <- as.data.frame(t(tension[1,]))
tmp
tmp <- as.data.frame(ts = t(tension[1,]))
tmp
tmp <- as.data.frame(ts = t(tension[1,], row.names = F))
tmp <- as.data.frame(ts = t(tension[1,]))
row.names(tmp) <- NULL
tmp
tmp <- as.data.frame(ts = t(tension[1,1:800]))
row.names(tmp) <- NULL
tmp
tmp <- as.data.frame(ts = t(tension[1,1:799]))
row.names(tmp) <- NULL
tmp
str(tension)
matplot(tension1[,1:3])
matplot(tension1[1:3,])
tension1[1:3,]
dim(tension1)
matplot(t(tension1[1:3,]))
matplot(t(tension1[1:3,]), type = "l")
library(fda.usc)
install.packages("fda.usc", dep = T)
ftension <- fdata(tension1, argvals = seq(1, 80, length.out = 800),
names = list(main = "Music tension", xlab = "Time (sec)", ylab = "Tension"))
library(fda.usc)
ftension <- fdata(tension1, argvals = seq(1, 80, length.out = 800),
names = list(main = "Music tension", xlab = "Time (sec)", ylab = "Tension"))
ftension
help(min.np)
ftensionNP <- min.np(ftension)
plot(ftension, main = "Original Data")
plot(ftensionNP$fdata.est, main = "Smooth Data")
ftensionNP
matplot(t(tension1), type = "l")
plot(ftension, main = "Original Data")
plot(ftensionNP$fdata.est, main = "Smooth Data")
par(mfrow = c(2, 1))
plot(ftension, main = "Original Data")
plot(ftensionNP$fdata.est, main = "Smooth Data")
par(mfrow = c(2, 1), mar = c(2,2,2,2))
plot(ftension, main = "Original Data")
plot(ftensionNP$fdata.est, main = "Smooth Data")
ftension1 <- ftensionNP$fdata.est
deriv1 <- fdata.deriv(ftension1)
deriv1
plot(deriv1$fdata.est, main = "Smooth Data")
names(deriv1)
deriv1$data
names(deriv1)
plot(deriv1$data)
names(ftensionNP)
op <- par(mfrow = c(2,1), mar = c(4,4,3,1) + 0.1)
plot(ftension1[7,], main = "Smooth Tension (Person 7)", ylab = "Functional Tension Values")
plot(deriv1[7,], main = "", ylab = "Velocity Tension Values")
par(op)
fsplit <- split.fdata(ftension1, cond)
# compute functional means and functional medians
Amean <- func.mean(fsplit$Auditory)
Vmean <- func.mean(fsplit$Visual)
Amean <- func.mean(fsplit$Auditory)
Vmean <- func.mean(fsplit$Visual)
AVmean <- func.mean(fsplit$AuditoryVisual)
Amedian <- func.med.FM(fsplit$Auditory)
Vmedian <- func.med.FM(fsplit$Visual)
AVmedian <- func.med.FM(fsplit$AuditoryVisual)
op <- par(mfrow = c(2,1))
plot(Amean, lwd = 2, main = "Mean Tension Trajectories", ylim = c(-2.5, 2.5))
lines(Vmean, col = "coral", lwd = 2)
lines(AVmean, col = "cadetblue", lwd = 2)
legend("bottomright", col = c(1, "coral", "cadetblue"), lty = 1, legend = c("Auditory", "Visual", "Auditory & Visual"))
plot(Amedian, lwd = 2, main = "Median Tension Trajectories", ylim = c(-2.5, 2.5))
lines(Vmedian, col = "coral", lwd = 2)
lines(AVmedian, col = "cadetblue", lwd = 2)
legend("bottomright", col = c(1, "coral", "cadetblue"), lty = 1, legend = c("Auditory", "Visual", "Auditory & Visual"))
par(op)
op <- par(mfrow = c(2,1))
plot(Amean, lwd = 2, main = "Mean Tension Trajectories", ylim = c(-2.5, 2.5))
lines(Vmean, col = "coral", lwd = 2)
lines(AVmean, col = "cadetblue", lwd = 2)
legend("bottomright", col = c(1, "coral", "cadetblue"), lty = 1, legend = c("Auditory", "Visual", "Auditory & Visual"), cex = 0.1)
plot(Amedian, lwd = 2, main = "Median Tension Trajectories", ylim = c(-2.5, 2.5))
lines(Vmedian, col = "coral", lwd = 2)
lines(AVmedian, col = "cadetblue", lwd = 2)
legend("bottomright", col = c(1, "coral", "cadetblue"), lty = 1, legend = c("Auditory", "Visual", "Auditory & Visual"))
par(op)
op <- par(mfrow = c(2,1))
plot(Amean, lwd = 2, main = "Mean Tension Trajectories", ylim = c(-2.5, 2.5))
lines(Vmean, col = "coral", lwd = 2)
lines(AVmean, col = "cadetblue", lwd = 2)
legend("bottomright", col = c(1, "coral", "cadetblue"), lty = 1, legend = c("Auditory", "Visual", "Auditory & Visual"), cex = 1)
plot(Amedian, lwd = 2, main = "Median Tension Trajectories", ylim = c(-2.5, 2.5))
lines(Vmedian, col = "coral", lwd = 2)
lines(AVmedian, col = "cadetblue", lwd = 2)
legend("bottomright", col = c(1, "coral", "cadetblue"), lty = 1, legend = c("Auditory", "Visual", "Auditory & Visual"), cex = 1)
par(op)
graphics.off()
op <- par(mfrow = c(2,1))
plot(Amean, lwd = 2, main = "Mean Tension Trajectories", ylim = c(-2.5, 2.5))
lines(Vmean, col = "coral", lwd = 2)
lines(AVmean, col = "cadetblue", lwd = 2)
legend("bottomright", col = c(1, "coral", "cadetblue"), lty = 1, legend = c("Auditory", "Visual", "Auditory & Visual"), cex = 0.3)
plot(Amedian, lwd = 2, main = "Median Tension Trajectories", ylim = c(-2.5, 2.5))
lines(Vmedian, col = "coral", lwd = 2)
lines(AVmedian, col = "cadetblue", lwd = 2)
legend("bottomright", col = c(1, "coral", "cadetblue"), lty = 1, legend = c("Auditory", "Visual", "Auditory & Visual"), cex = 0.3)
par(op)
op <- par(mfrow = c(2,1))
plot(Amean, lwd = 2, main = "Mean Tension Trajectories", ylim = c(-2.5, 2.5))
lines(Vmean, col = "coral", lwd = 2)
lines(AVmean, col = "cadetblue", lwd = 2)
legend("bottomright", col = c(1, "coral", "cadetblue"), lty = 1, legend = c("Auditory", "Visual", "Auditory & Visual"), cex = 0.3)
plot(Amedian, lwd = 2, main = "Median Tension Trajectories", ylim = c(-2.5, 2.5))
lines(Vmedian, col = "coral", lwd = 2)
lines(AVmedian, col = "cadetblue", lwd = 2)
legend("bottomright", col = c(1, "coral", "cadetblue"), lty = 1, legend = c("Auditory", "Visual", "Auditory & Visual"), cex = 0.3)
par(op)
graphics.off()
op <- par(mfrow = c(2,1))
plot(Amean, lwd = 2, main = "Mean Tension Trajectories", ylim = c(-2.5, 2.5))
lines(Vmean, col = "coral", lwd = 2)
lines(AVmean, col = "cadetblue", lwd = 2)
legend("bottomright", col = c(1, "coral", "cadetblue"), lty = 1, legend = c("Auditory", "Visual", "Auditory & Visual"), cex = 0.2)
plot(Amedian, lwd = 2, main = "Median Tension Trajectories", ylim = c(-2.5, 2.5))
lines(Vmedian, col = "coral", lwd = 2)
lines(AVmedian, col = "cadetblue", lwd = 2)
legend("bottomright", col = c(1, "coral", "cadetblue"), lty = 1, legend = c("Auditory", "Visual", "Auditory & Visual"), cex = 0.3)
par(op)
help(legend)
graphics.off()
op <- par(mfrow = c(2,1))
plot(Amean, lwd = 2, main = "Mean Tension Trajectories", ylim = c(-2.5, 2.5))
lines(Vmean, col = "coral", lwd = 2)
lines(AVmean, col = "cadetblue", lwd = 2)
legend("bottomright", col = c(1, "coral", "cadetblue"), lty = 1, legend = c("Auditory", "Visual", "Auditory & Visual"), cex = 0.5)
plot(Amedian, lwd = 2, main = "Median Tension Trajectories", ylim = c(-2.5, 2.5))
lines(Vmedian, col = "coral", lwd = 2)
lines(AVmedian, col = "cadetblue", lwd = 2)
legend("bottomright", col = c(1, "coral", "cadetblue"), lty = 1, legend = c("Auditory", "Visual", "Auditory & Visual"), cex = 0.5)
par(op)
graphics.off()
op <- par(mfrow = c(2,1))
plot(Amean, lwd = 2, main = "Mean Tension Trajectories", ylim = c(-2.5, 2.5))
lines(Vmean, col = "coral", lwd = 2)
lines(AVmean, col = "cadetblue", lwd = 2)
legend("bottomright", col = c(1, "coral", "cadetblue"), lty = 1, legend = c("Auditory", "Visual", "Auditory & Visual"))
plot(Amedian, lwd = 2, main = "Median Tension Trajectories", ylim = c(-2.5, 2.5))
lines(Vmedian, col = "coral", lwd = 2)
lines(AVmedian, col = "cadetblue", lwd = 2)
legend("bottomright", col = c(1, "coral", "cadetblue"), lty = 1, legend = c("Auditory", "Visual", "Auditory & Visual"))
par(op)
graphics.off()
op <- par(mfrow = c(2,1))
plot(Amean, lwd = 2, main = "Mean Tension Trajectories", ylim = c(-2.5, 2.5))
lines(Vmean, col = "coral", lwd = 2)
lines(AVmean, col = "cadetblue", lwd = 2)
legend("bottomright", col = c(1, "coral", "cadetblue"), lty = 1, legend = c("Auditory", "Visual", "Auditory & Visual"))
plot(Amedian, lwd = 2, main = "Median Tension Trajectories", ylim = c(-2.5, 2.5))
lines(Vmedian, col = "coral", lwd = 2)
lines(AVmedian, col = "cadetblue", lwd = 2)
legend("bottomright", col = c(1, "coral", "cadetblue"), lty = 1, legend = c("Auditory", "Visual", "Auditory & Visual"))
par(op)
plot(Amean, lwd = 2, main = "Mean Tension Trajectories", ylim = c(-2.5, 2.5))
lines(Vmean, col = "coral", lwd = 2)
lines(AVmean, col = "cadetblue", lwd = 2)
legend("bottomright", col = c(1, "coral", "cadetblue"), lty = 1, legend = c("Auditory", "Visual", "Auditory & Visual"))
graphics.off()
op <- par(mfrow = c(2,1))
plot(Amean, lwd = 2, main = "Mean Tension Trajectories", ylim = c(-2.5, 2.5))
lines(Vmean, col = "coral", lwd = 2)
lines(AVmean, col = "cadetblue", lwd = 2)
legend("bottomright", col = c(1, "coral", "cadetblue"), lty = 1, legend = c("Auditory", "Visual", "Auditory & Visual"))
graphics.off()
par(mfrow = c(2,1))
plot(Amean, lwd = 2, main = "Mean Tension Trajectories", ylim = c(-2.5, 2.5))
lines(Vmean, col = "coral", lwd = 2)
lines(AVmean, col = "cadetblue", lwd = 2)
legend("bottomright", col = c(1, "coral", "cadetblue"), lty = 1, legend = c("Auditory", "Visual", "Auditory & Visual"))
plot(Amedian, lwd = 2, main = "Median Tension Trajectories", ylim = c(-2.5, 2.5))
lines(Vmedian, col = "coral", lwd = 2)
lines(AVmedian, col = "cadetblue", lwd = 2)
legend("bottomright", col = c(1, "coral", "cadetblue"), lty = 1, legend = c("Auditory", "Visual", "Auditory & Visual"))
graphics.off()
par(mfrow = c(2,1), mar = c(2,2,2,2))
plot(Amean, lwd = 2, main = "Mean Tension Trajectories", ylim = c(-2.5, 2.5))
lines(Vmean, col = "coral", lwd = 2)
lines(AVmean, col = "cadetblue", lwd = 2)
legend("bottomright", col = c(1, "coral", "cadetblue"), lty = 1, legend = c("Auditory", "Visual", "Auditory & Visual"))
plot(Amedian, lwd = 2, main = "Median Tension Trajectories", ylim = c(-2.5, 2.5))
lines(Vmedian, col = "coral", lwd = 2)
lines(AVmedian, col = "cadetblue", lwd = 2)
legend("bottomright", col = c(1, "coral", "cadetblue"), lty = 1, legend = c("Auditory", "Visual", "Auditory & Visual"))
graphics.off()
par(mfrow = c(2,1), mar = c(2,2,2,2))
plot(Amean, lwd = 2, main = "Mean Tension Trajectories", ylim = c(-2.5, 2.5))
lines(Vmean, col = "coral", lwd = 2)
lines(AVmean, col = "cadetblue", lwd = 2)
legend("bottomright", col = c(1, "coral", "cadetblue"), lty = 1, legend = c("Auditory", "Visual", "Auditory & Visual"), cex = 0.5)
plot(Amedian, lwd = 2, main = "Median Tension Trajectories", ylim = c(-2.5, 2.5))
lines(Vmedian, col = "coral", lwd = 2)
lines(AVmedian, col = "cadetblue", lwd = 2)
legend("bottomright", col = c(1, "coral", "cadetblue"), lty = 1, legend = c("Auditory", "Visual", "Auditory & Visual"))
graphics.off()
par(mfrow = c(2,1), mar = c(2,2,2,2))
plot(Amean, lwd = 2, main = "Mean Tension Trajectories", ylim = c(-2.5, 2.5))
lines(Vmean, col = "coral", lwd = 2)
lines(AVmean, col = "cadetblue", lwd = 2)
legend("bottomright", col = c(1, "coral", "cadetblue"), lty = 1, legend = c("Auditory", "Visual", "Auditory & Visual"), cex = 0.5)
plot(Amedian, lwd = 2, main = "Median Tension Trajectories", ylim = c(-2.5, 2.5))
lines(Vmedian, col = "coral", lwd = 2)
lines(AVmedian, col = "cadetblue", lwd = 2)
legend("bottomright", col = c(1, "coral", "cadetblue"), lty = 1, legend = c("Auditory", "Visual", "Auditory & Visual"), cex = 0.5)
fsplit$AuditoryVisual$names$main <- NULL
set.seed(123)
AVboot <- fdata.bootstrap(fsplit$AuditoryVisual, draw = TRUE)
title("Bootstrap Mean (Auditory-Visual)")
fsplit$AuditoryVisual$names$main <- NULL
set.seed(123)
par(mfrow = c(1,1))
AVboot <- fdata.bootstrap(fsplit$AuditoryVisual, draw = TRUE)
title("Bootstrap Mean (Auditory-Visual)")
set.seed(123)
tension1way <- anova.onefactor(ftension1, cond, nboot = 50)
tension1way$pvalue
fdat <- as.data.frame(ftension1$data)
gdat <- as.data.frame(cond)
ctrAudio <- contr.treatment(3)
set.seed(222)
fitrpm <- anova.RPm(fdat, ~ cond, gdat, RP = 30, contrast = list(cond = ctrAudio))
summary.anova(fitrpm)
summary.anova(tension1way)
summary.anova(tension1way)
tension1way
summary.anova(fitrpm)
( ctrAudio <- contr.treatment(3) )
library(refund)
install.packages("refund", dep=T)
library(refund)
install.pakcages("magic",dep=T)
help(install.packages)
install.pakcages("refund")
install.packages("refund")
library(refund)
ftension2 <- fdata2fd(ftension1)
X <- model.matrix(~ cond)  ## auditory as baseline
X
tenreg <- fosr(fdobj = ftension2, X = X, lambda = 100)
tenreg
refund:::plot.fosr(tenreg, titles = c("Intercept", "Auditory vs. Visual", "Auditory vs. Visual-Auditory"))
fpca <- fdata2pc(ftension1, ncomp = 2)
summary(fpca, biplot = FALSE)
biplot(fpca)
summary(fpca, biplot = TRUE)
fpca$fpc1$d
fpca$fpc1
fpc1$d
par(mfrow = c(1,2), mar = c(2,2,2,2))
plot(fpca$rotation[1,]$argvals, fpca$rotation$data[1,], type = "l", ylim = c(-0.3, 0.3), xlab = "Time",  ylab = "Loadings", main = "Functional PCA Loadings", lwd = 2)
lines(fpca$rotation$argvals, fpca$rotation$data[2,], type = "l", col = "gray", lwd = 2)
legend("topright", legend = c("PC1", "PC2"), lty = 1, col = c(1, "gray"))
plot(pcscores, type = "n", asp = 1, main = "Functional PC Scores")
cols <- c("black", "coral", "cadetblue")[as.numeric(cond)]
text(pcscores, col = cols)
legend("topright", legend = c("Auditory", "Visual", "Auditory & Visual"), text.col = c("black", "coral", "cadetblue"))
pcscores <- fpca$x[,1:2]
par(mfrow = c(1,2), mar = c(2,2,2,2))
plot(fpca$rotation[1,]$argvals, fpca$rotation$data[1,], type = "l", ylim = c(-0.3, 0.3), xlab = "Time",  ylab = "Loadings", main = "Functional PCA Loadings", lwd = 2)
lines(fpca$rotation$argvals, fpca$rotation$data[2,], type = "l", col = "gray", lwd = 2)
legend("topright", legend = c("PC1", "PC2"), lty = 1, col = c(1, "gray"))
plot(pcscores, type = "n", asp = 1, main = "Functional PC Scores")
cols <- c("black", "coral", "cadetblue")[as.numeric(cond)]
text(pcscores, col = cols)
legend("topright", legend = c("Auditory", "Visual", "Auditory & Visual"), text.col = c("black", "coral", "cadetblue"))
graphics.off()
par(mfrow = c(1,2), mar = c(2,2,2,2))
plot(fpca$rotation[1,]$argvals, fpca$rotation$data[1,], type = "l", ylim = c(-0.3, 0.3), xlab = "Time",  ylab = "Loadings", main = "Functional PCA Loadings", lwd = 2)
lines(fpca$rotation$argvals, fpca$rotation$data[2,], type = "l", col = "gray", lwd = 2)
legend("topright", legend = c("PC1", "PC2"), lty = 1, col = c(1, "gray"))
plot(pcscores, type = "n", asp = 1, main = "Functional PC Scores")
cols <- c("black", "coral", "cadetblue")[as.numeric(cond)]
text(pcscores, col = cols)
legend("topright", legend = c("Auditory", "Visual", "Auditory & Visual"), text.col = c("black", "coral", "cadetblue"))
graphics.off()
par(mfrow = c(1,2), mar = c(2,2,2,2))
plot(fpca$rotation[1,]$argvals, fpca$rotation$data[1,], type = "l", ylim = c(-0.3, 0.3), xlab = "Time",  ylab = "Loadings", main = "Functional PCA Loadings", lwd = 2)
lines(fpca$rotation$argvals, fpca$rotation$data[2,], type = "l", col = "gray", lwd = 2)
legend("topright", legend = c("PC1", "PC2"), lty = 1, col = c(1, "gray"), cex = 0.5)
plot(pcscores, type = "n", asp = 1, main = "Functional PC Scores")
cols <- c("black", "coral", "cadetblue")[as.numeric(cond)]
text(pcscores, col = cols)
legend("topright", legend = c("Auditory", "Visual", "Auditory & Visual"), text.col = c("black", "coral", "cadetblue"), cex = 0.5)
fmean <- func.mean(ftension1)
pc1plus <- fmean$data[1,] + 3*fpca$rotation$data[1,]
pc1minus <- fmean$data[1,] - 3*fpca$rotation$data[1,]
pc2plus <- fmean$data[1,] + 3*fpca$rotation$data[2,]
pc2minus <- fmean$data[1,] - 3*fpca$rotation$data[2,]
plot(fmean, lwd = 2, main = "Mean (PC1)", ylim = c(-2, 2))
lines(ftension1$argvals, pc1plus, col = "salmon")
lines(ftension1$argvals, pc1minus, col = "cadetblue")
legend("bottomright", legend = c("mean + PC1", "mean - PC1"), lty = 1, col = c("salmon", "cadetblue"))
plot(fmean, lwd = 2, main = "Mean (PC2)", ylim = c(-2, 2))
lines(ftension1$argvals, pc2plus, col = "salmon")
lines(ftension1$argvals, pc2minus, col = "cadetblue")
legend("bottomright", legend = c("mean + PC2", "mean - PC2"), lty = 1, col = c("salmon", "cadetblue"))
plot(fmean, lwd = 2, main = "Mean (PC1)", ylim = c(-2, 2))
lines(ftension1$argvals, pc1plus, col = "red")
lines(ftension1$argvals, pc1minus, col = "blue")
legend("bottomright", legend = c("mean + PC1", "mean - PC1"), lty = 1, col = c("salmon", "cadetblue"))
plot(fmean, lwd = 2, main = "Mean (PC2)", ylim = c(-2, 2))
lines(ftension1$argvals, pc2plus, col = "red")
lines(ftension1$argvals, pc2minus, col = "blue")
legend("bottomright", legend = c("mean + PC2", "mean - PC2"), lty = 1, col = c("salmon", "cadetblue"))
plot(fmean, lwd = 2, main = "Mean (PC1)", ylim = c(-2, 2))
lines(ftension1$argvals, pc1plus, col = "red")
lines(ftension1$argvals, pc1minus, col = "blue")
fmean <- func.mean(ftension1)
# Note that the multiple of 3 is arbitrary.
pc1plus <- fmean$data[1,] + 3 * fpca$rotation$data[1,]
pc1minus <- fmean$data[1,] - 3 * fpca$rotation$data[1,]
pc2plus <- fmean$data[1,] + 3 * fpca$rotation$data[2,]
pc2minus <- fmean$data[1,] - 3 * fpca$rotation$data[2,]
plot(fmean, lwd = 2, main = "Mean (PC1)", ylim = c(-2, 2))
lines(ftension1$argvals, pc1plus, col = "red")
lines(ftension1$argvals, pc1minus, col = "blue")
legend("bottomright", legend = c("mean + PC1", "mean - PC1"), lty = 1, col = c("red", "blue"))
plot(fmean, lwd = 2, main = "Mean (PC2)", ylim = c(-2, 2))
lines(ftension1$argvals, pc2plus, col = "red")
lines(ftension1$argvals, pc2minus, col = "blue")
legend("bottomright", legend = c("mean + PC2", "mean - PC2"), lty = 1, col = c("red", "blue"))
graphics.off()
plot(fmean, lwd = 2, main = "Mean (PC1)", ylim = c(-2, 2))
lines(ftension1$argvals, pc1plus, col = "red")
lines(ftension1$argvals, pc1minus, col = "blue")
legend("bottomright", legend = c("mean + PC1", "mean - PC1"), lty = 1, col = c("red", "blue"))
plot(fmean, lwd = 2, main = "Mean (PC2)", ylim = c(-2, 2))
lines(ftension1$argvals, pc2plus, col = "red")
lines(ftension1$argvals, pc2minus, col = "blue")
legend("bottomright", legend = c("mean + PC2", "mean - PC2"), lty = 1, col = c("red", "blue"))
graphics.off()
par(mfrow = c(1,2), mar = c(2,2,2,2))
plot(fmean, lwd = 2, main = "Mean (PC1)", ylim = c(-2, 2))
lines(ftension1$argvals, pc1plus, col = "red")
lines(ftension1$argvals, pc1minus, col = "blue")
legend("bottomright", legend = c("mean + PC1", "mean - PC1"), lty = 1, col = c("red", "blue"))
plot(fmean, lwd = 2, main = "Mean (PC2)", ylim = c(-2, 2))
lines(ftension1$argvals, pc2plus, col = "red")
lines(ftension1$argvals, pc2minus, col = "blue")
legend("bottomright", legend = c("mean + PC2", "mean - PC2"), lty = 1, col = c("red", "blue"))
setwd("//media//kswada//MyFiles//R//rmotivation")
packages <- c("dplyr", "MPsychoR")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
rm(list=ls())
setwd("//media//kswada//MyFiles//R//rmotivation")
packages <- c("dplyr", "MPsychoR")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
data("Rmotivation", package = "MPsychoR")
str(Rmotivation)
ind <- grep("hyp", colnames(Tmotivation))
HybMotivation <- na.omit(Rmotivation[, ind])
k <- ncol(HybMotivation)
ind <- grep("hyp", colnames(Tmotivation))
ind <- grep("hyp", colnames(Rmotivation))
HybMotivation <- na.omit(Rmotivation[, ind])
k <- ncol(HybMotivation)
car::some(HybMotivation)
HybMotivation
HybMotivation
ind <- grep("hyp", colnames(Rmotivation))
HybMotivation <- na.omit(Rmotivation[, ind])
k <- ncol(HybMotivation)
( k <- ncol(HybMotivation) )
data("Rmotivation", package = "MPsychoR")
str(Rmotivation)
ind <- grep("hyp", colnames(Rmotivation))
( ind <- grep("hyp", colnames(Rmotivation)) )
( ind <- grep("hyb", colnames(Rmotivation)) )
HybMotivation <- na.omit(Rmotivation[, ind])
( k <- ncol(HybMotivation) )
car::some(HybMotivation)
( k <- ncol(HybMotivation) )
vcmat <- cov(HybMotivation)
sigma2_Xi <- tr(vcmat)
sigma2_X <- sum(vcmat)
cronalpha <- k / (k - 1) * (1 - sigma2_Xi / sigma2_X)
round(cronalpha, 2)
vcmat <- cov(HybMotivation)
tr(vcmat)
sigma2_Xi <- psych::tr(vcmat)
sigma2_X <- sum(vcmat)
cronalpha <- k / (k - 1) * (1 - sigma2_Xi / sigma2_X)
round(cronalpha, 2)
sqrt(sigma2_X) * sqrt(1 - cronalpha)
alpha.hyb <- psych::alpha(HybMotivation)
round(alpha.hyb$total[1], 2)
glb(HybMotibation)
psych::glb(HybMotibation)
psych::glb(HybMotivation)
library(psych)
help(glb)
psych::glb(HybMotivation)$glb.max
psych::glb(HybMotivation)
round(alpha.hyb$total[1], 2)
psych::Omega(HybMotivation)
psych::omega(HybMotivation)
library(reshape2)
Hyb1 <- data.frame(HybMotivation, person = 1:nrow(HybMotivation))
Hyblong <- melt(Hyb1, id.vars = c("person"), variable.name = "item")
car::some(Hyb1)
car::some(Hyblong)
Hyblong$person <- as.factor(Hyblong$person)
summary(aov(value ~ person + item, data = Hyblong))
round((0.85 - 0.15) / 0.85, 2)
icchyb <- psych::ICC(HybMotivation)
icchyb
summary(aov(value ~ person + item, data = Hyblong))
sqrt(( 31.88 - 0.15 ) / 777)
library(lme4)
mod <- lmer(value ~ (1 | person) + (1 | item), data = Hyblong)
summary(mod)
varCorr(mod)
VarCorr(mod)
library(gtheory)
install.packages("gtheory", dep=T)
library(gtheory)
gfit <- gstudy(data = Hyblong, formula = value = (1 | person) + (1 | item))
dfit <- dstudy(gfit, colname.objects = "person", colname.scores = "value", data = Hyblong)
round(dfit$generalizability, 3)
gfit <- gstudy(data = Hyblong, formula = value = (1 | person) + (1 | item))
gfit <- gstudy(data = Hyblong, formula = value ~ (1 | person) + (1 | item))
dfit <- dstudy(gfit, colname.objects = "person", colname.scores = "value", data = Hyblong)
round(dfit$generalizability, 3)
data("Lakes", package = "MPsychoR")
str(Lakes)
car::some(Lakes)
phydat <- subset(Lakes, subtest == "physical")
phydat$item <- droplevels(phydat$item)
head(phydat)
car::some(phydat)
formula <- score ~ (1 | person) + (1 | raterID) + (1 | item) + (1 | personID:raterID) + (1 | personID:item) + (1 | raterID:item)
gfit <- gstudy(formula = formula, data = phydat)
gfit
formula <- score ~ (1 | personID) + (1 | raterID) + (1 | item) + (1 | personID:raterID) + (1 | personID:item) + (1 | raterID:item)
gfit <- gstudy(formula = formula, data = phydat)
gfit
dfit <- dstudy(gfit, colname.objects = "personID", colname.scores = "score", data = phydat)
dfit$components
dfit$sem.abs
sqrt(dfit$var.error.abs)
dfit$sem.rel
sqrt(dfit$var.error.rel)
dfit$dependability
dfit$generalizability
dfit$components
