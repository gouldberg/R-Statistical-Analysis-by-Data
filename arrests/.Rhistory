vcd::binreg_plot(arth.logistic2, type = "link", subset = Sex == "Female", main = "Female", xlim=c(25, 75), ylim = c(-3, 3))
vcd::binreg_plot(arth.logistic2, type = "link", subset = Sex == "Male", main = "Male", xlim=c(25, 75), ylim = c(-3, 3))
vcd::binreg_plot(arth.logistic2, subset = Sex == "Female", main = "Female", xlim = c(25, 75))
vcd::binreg_plot(arth.logistic2, type = "link", subset = Sex == "Female", main = "Female", xlim=c(25, 75), ylim = c(-3, 3))
graphics.off()
vcd::binreg_plot(arth.logistic2, type = "link")
vcd::binreg_plot(arth.logistic2, type = "link", subset = Sex == "Female", main = "Female", xlim=c(25, 75), ylim = c(-3, 3))
arth.eff2 <- effects::allEffects(arth.logistic2, partial.residuals = TRUE)
names(arth.eff2)
arth.eff2[["Sex"]]
arth.eff2[["Sex"]]$model.matrix
graphics.off();
plot(arth.eff2, rows = 1, cols = 3, type="response", residuals.pch = 15)
( arth.full <- effects::Effect(c("Age", "Treatment", "Sex"), arth.logistic2) )
plot(arth.full, multiline = TRUE, ci.style = "bands", colors = c("red", "blue"), lwd = 3,
ticks = list(at = c(.05, .1, .25, .5, .75, .9, .95)), key.args = list(x = .52, y = .92, columns = 1),  grid = TRUE)
plot(arth.full, multiline = TRUE, ci.style = "bands", type="response", colors = c("red", "blue"), lwd = 3, key.args = list(x = .52, y = .92, columns = 1),grid = TRUE)
plot(arth.full, multiline = TRUE, ci.style = "bands", colors = c("red", "blue"), lwd = 3,
ticks = list(at = c(.05, .1, .25, .5, .75, .9, .95)), key.args = list(x = .52, y = .92, columns = 1),  grid = TRUE)
setwd("//media//kswada//MyFiles//R//space_shuttle")
packages <- c("dplyr", "vcd", "vcdExtra", "MASS")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
data("SpaceShuttle", package = "vcd")
data <- SpaceShuttle
data
plot(data$Temperature, data$nFailures)
plot(data$Temperature, data$nFailures, labels = "FlightNumber")
plot(data$Temperature, data$nFailures, xlab = "Temperature(F)", ylab = "Number of incidents")
plot(data$Temperature, data$nFailures, xlab = "Temperature(F)", ylab = "Number of incidents", xlim = c(55, 80), ylim = c(0, 3))
plot(data$Temperature, data$nFailures, xlab = "Temperature(F)", ylab = "Number of incidents", xlim = c(50, 80), ylim = c(0, 3))
plot(data$Temperature, data$nFailures, xlab = "Temperature(F)", ylab = "Number of incidents", xlim = c(50, 85), ylim = c(0, 3))
plot(data$Temperature, data$nFailures,
xlab = "Temperature(F)", ylab = "Number of incidents",
xlim = c(50, 85), ylim = c(0, 3))
text(data$Temperature, data$nFailures,labels=rownames(FlightNumber))
text(data$Temperature, data$nFailures,labels=rownames("FlightNumber"))
plot(data$Temperature, data$nFailures,
xlab = "Temperature(F)", ylab = "Number of incidents",
xlim = c(50, 85), ylim = c(0, 3))
text(data$Temperature, data$nFailures,labels=rownames("FlightNumber"))
text(data$Temperature, data$nFailures,labels=data$FlightNumber)
text(data$Temperature, data$nFailures+0.2,labels=data$FlightNumber)
plot(data$Temperature, data$nFailures,
xlab = "Temperature(F)", ylab = "Number of incidents",
xlim = c(50, 85), ylim = c(0, 3))
text(data$Temperature, data$nFailures+0.2,labels=data$FlightNumber)
sshuttle.mode <- glm(cbind(nFailures, 6 - nFailures) ~ Temperature, data = data, na.action = na.exclude, family = binomial)
data$trials <- 6
shuttle.modw <- glm(nFailures / trials ~ Temperature, weight = trials, data = data, na.action = na.exclude, family = binomial)
all.equal(coef(shuttle.mode), coef(shutt;e.modw))
all.equal(coef(shuttle.mode), coef(shuttle.modw))
shuttle.mode <- glm(cbind(nFailures, 6 - nFailures) ~ Temperature, data = data, na.action = na.exclude, family = binomial)
data$trials <- 6
shuttle.modw <- glm(nFailures / trials ~ Temperature, weight = trials, data = data, na.action = na.exclude, family = binomial)
all.equal(coef(shuttle.mode), coef(shuttle.modw))
summary(shuttle.mod)
shuttle.mod <- glm(cbind(nFailures, 6 - nFailures) ~ Temperature, data = data, na.action = na.exclude, family = binomial)
# ----------
# alternative: we can add an explicit trials variable, represent the response as the proportion nFailures / trials, and use weight = trials
# to indicate the total number of observations.
data$trials <- 6
shuttle.modw <- glm(nFailures / trials ~ Temperature, weight = trials, data = data, na.action = na.exclude, family = binomial)
# These two approaches give identical results for all practical purposes
all.equal(coef(shuttle.mode), coef(shuttle.modw))
summary(shuttle.mod)
all.equal(coef(shuttle.mod), coef(shuttle.modw))
summary(shuttle.mod)
summary(shuttle.modw)
summary(shuttle.mod)
summary(shuttle.modw)
lmtest::coeftest(shuttle.mod)
summary(shuttle.mod)
anova(shuttle.mod, test = "Chisq")
vcdExtra::LRstats(shuttle.mod)
ggplot(data, aes(x = Temperature, y = nFailures / trials)) + xlim(30, 81) + xlab("Temperature (F)") + ylab("O-Ring Failure Probability") +
geom_point(position = position_jitter(width = 0, height = 0.01), aes(size = 2)) +
theme(legend.position = "none") +
geom_smooth(method = "glm", family = binomial, fill = "blue", aes(weight = trials), fullrange = TRUE, alpha = 0.2, size = 2)
help(gemo_smooth)
??geom_smooth
ggplot(data, aes(x = Temperature, y = nFailures / trials)) + xlim(30, 81) + xlab("Temperature (F)") + ylab("O-Ring Failure Probability") +
geom_point(position = position_jitter(width = 0, height = 0.01), aes(size = 2)) +
theme(legend.position = "none") +
geom_smooth(method = "glm", method.args = list(family = "binomial"), fill = "blue", aes(weight = trials), fullrange = TRUE, alpha = 0.2, size = 2)
data
setwd("//media//kswada//MyFiles//R//donner")
packages <- c("dplyr", "vcd", "MASS", "datasets")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
data("Donner", package = "vcdExtra")
dim(Donner)
str(Donner)
car::some(Donner)
data <- Donner
data$survived <- factor(Donner$survived, labels = c("no", "yes"))
xtabs(~ family, data = data)
fam <- data$family
levels(fam)[c(3,4,6,7,9)] <- "Others"
fam <- factor(fam, levels(fam)[c(1, 2, 4:6, 3)])
data$family <- fam
xtabs(~ family, data = data)
graphics.off()
spineplot(xtabs(~ family + survived, data = data))
gpairs::gpairs(data[,c(4, 2, 3, 1)], diag.pars = list(fontsize = 20, hist.color = "gray"),
mosaic.pars = list(gp = shading_Friendly), outer.rot = c(45, 45))
graphics.off()
gg <- ggplot(data, aes(age, as.numeric(survived=="yes"), color = sex)) +ylab("Survived") + theme_bw() +
geom_point(position = position_jitter(height = 0.02, width = 0))
# add conditional linear logistic regressions
gg + stat_smooth(method = "glm", method.args = list(family = "binomial"), formula = y ~ x, alpha = 0.2, size = 2, aes(fill = sex))
graphics.off()
gg <- ggplot(data, aes(age, as.numeric(survived=="yes"), color = sex)) + ylab("Survived") + theme_bw() +
geom_point(position = position_jitter(height = 0.02, width = 0))
# add conditional linear logistic regressions
gg + stat_smooth(method = "glm", method.args = list(family = "binomial"), formula = y ~ x, alpha = 0.2, size = 2, aes(fill = sex))
graphics.off()
gg <- ggplot(data, aes(age, as.numeric(survived=="yes"), color = sex)) + ylab("Survived") + theme_bw() +
geom_point(position = position_jitter(height = 0.02, width = 0))
# add conditional linear logistic regressions
gg + stat_smooth(method = "glm", method.args = list(family = "binomial"), formula = y ~ x, alpha = 0.2, size = 2, aes(fill = sex))
graphics.off()
gg <- ggplot(data, aes(age, as.numeric(survived=="yes"), color = sex)) + ylab("Survived") + theme_bw() +
geom_point(position = position_jitter(height = 0.02, width = 0))
# add conditional linear logistic regressions
gg + stat_smooth(method = "glm", method.args = list(family = "binomial"), formula = y ~ x, alpha = 0.2, size = 2, aes(fill = sex))
graphics.off()
gg <- ggplot(data, aes(age, as.numeric(survived=="yes"), color = sex)) + ylab("Survived") + theme_bw() +
geom_point(position = position_jitter(height = 0.02, width = 0))
# add conditional linear logistic regressions
gg + stat_smooth(method = "glm", method.args = list(family = "binomial"), formula = y ~ x, alpha = 0.2, size = 2, aes(fill = sex))
gg + stat_smooth(method = "glm", method.args = list(family = "binomial"), formula = y ~ poly(x,2), alpha = 0.2, size = 2, aes(fill = sex))
gg + stat_smooth(method = "loess", span=0.9, alpha = 0.2, size = 2, aes(fill = sex)) + coord_cartesian(ylim = c(-.05, 1.05))
donner.mod1 <- glm(survived ~ age + sex, data = data, family = binomial)
donner.mod2 <- glm(survived ~ age * sex, data = data, family = binomial)
car::Anova(donner.mod1)
car::Anova(donner.mod2)
car::Anova(donner.mod1)
car::Anova(donner.mod2)
donner.mod3 <- glm(survived ~ poly(age, 2) + sex, data = data, family = binomial)
donner.mod4 <- glm(survived ~ poly(age, 2) * sex, data = data, family = binomial)
car::Anova(donner.mod3)
car::Anova(donner.mod4)
vcdExtra::LRstats(donner.mod1, donner.mod2, donner.mod3, donner.mod4)
mods <- list(donner.mod1, donner.mod2, donner.mod3, donner.mod4)
LR <- sapply(mods, function(x) x$deviance)
LR <- matrix(LR, 2, 2)
rownames(LR) <- c("additive", "non-add")
colnames(LR) <- c("linear", "non-lin")
LR <- cbind(LR, diff = LR[,1] - LR[,2])
LR <- rbind(LR, diff = c(LR[1,1:2] - LR[2,1:2], NA))
LR
library(splines)
library(splines)
donner.mod5 <- glm(survived ~ ns(age,2) * sex, data = data, family = binomial)
donner.mod6 <- glm(survived ~ ns(age,4) * sex, data = data, family = binomial)
car::Anova(donner.mod5)
car::Anova(donner.mod6)
vcdExtra::LRstats(donner.mod4, donner.mod5, donner.mod6)
# ----------
# Effect plot for the spline model donner.mod6.
# Note that the fitted effects are plotted on the logit scale and labeled with the corresponding probabilities,
# whereas the conditional plots are plotted directly on the probability scale.
donner.eff6 <- effects::allEffects(donner.mod6, xlevels = list(age=seq(0, 50, 5)))
plot(donner.eff6, ticks = list(at=c(0.001, 0.01, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99, 0.999)))
data("Arrests", package = "effects")
dim(Arrests)
str(Arrests)
car::some(Arrests)
data("Arrests", package = "effects")
setwd("//media//kswada//MyFiles//R//arrests")
packages <- c("dplyr", "vcd", "MASS", "vcdExtra")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
setwd("//media//kswada//MyFiles//R//arrests")
packages <- c("dplyr", "vcd", "MASS", "vcdExtra", "effects")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
data("Arrests", package = "effects")
rm(list=ls())
setwd("//media//kswada//MyFiles//R//arrests")
packages <- c("dplyr", "vcd", "MASS", "vcdExtra", "effects")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
data("Arrests", package = "effects")
library(effects)
data("Arrests", package = "effects")
data("Arrests", package = "car")
Arrests??
??
??Arrests
data("Arrests", package = "carData")
packages <- c("dplyr", "vcd", "MASS", "vcdExtra", "carData")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
dim(Arrests)
str(Arrests)
car::some(Arrests)
car::some(Arrests)
data <- Arrests
setwd("//media//kswada//MyFiles//R//arrests")
packages <- c("dplyr", "vcd", "MASS", "vcdExtra", "carData")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
# ------------------------------------------------------------------------------
# data:  Arrests
# ------------------------------------------------------------------------------
data("Arrests", package = "carData")
dim(Arrests)
str(Arrests)
car::some(Arrests)
data <- Arrests
# To allow for possible nonlinear effects of year, this variable was treated as a factor rather than as a (linear) numeric variable
data$year <- as.factor(data$year)
arrests.mod <- glm(released ~ employed + citizen + checks + colour*year + colour*age, family = binomial, data = data)
car::Anova(arrests.mod)
summary(arrests.mod)
lmtest::coeftest(arrests.mod)
lmtest::coeftest(arrests.mod)
summary(arrests.mod)
lmtest::coeftest(arrests.mod)
round(exp(coef(arrests.mod)), digits = 3)
car::Anova(arrests.mod)
lmtest::coeftest(arrests.mod)
car::Anova(arrests.mod)
graphics.off()
plot(effects::Effect("colour", arrests.mod),
lwd = 3, ci.style = "bands", xlab = "Skin color of arrestee", cex = 1.25, ylab = "Probability(released)")
plot(effects::Effect(c("colour", "age"), arrests.mod),
lwd = 3, multiline = TRUE, ci.style = "bands",  xlab = "Age", cex = 1.25, ylab = "Probability(released)",
key.args = list(x = .05, y = .99, cex = 1.2, columns = 1))
plot(effects::Effect(c("colour", "year"), arrests.mod),
lwd = 3, multiline = TRUE, xlab = "Year", cex = 1.25, ylab = "Probability(released)",
key.args = list(x = .7, y = .99, cex = 1.2, columns = 1))
arrests.effects <- effects::allEffects(arrests.mod, xlevels = list(age = seq(15, 45, 5)))
plot(arrests.effects, ylab = "Probability(released)", ci.style = "bands", ask = FALSE)
plot(effects::Effect(c("colour", "year"), arrests.mod),
lwd = 3, multiline = TRUE, xlab = list("Year", cex = 1.25), ylab = list("Probability(released)", cex = 1.25),
key.args = list(x = .7, y = .99, cex = 1.2, columns = 1))
plot(effects::Effect(c("colour", "year"), arrests.mod),
lwd = 3, multiline = TRUE, colour = c("black", "blue"), xlab = list("Year", cex = 1.25), ylab = list("Probability(released)", cex = 1.25),
key.args = list(x = .7, y = .99, cex = 1.2, columns = 1))
arrests.effects <- effects::allEffects(arrests.mod, xlevels = list(age = seq(15, 45, 5)))
plot(arrests.effects, ylab = "Probability(released)", ci.style = "bands", ask = FALSE)
plot(arrests.effects, ylab = "Probability(released)", ci.style = "bands", ask = FALSE, ylim = qlogis(c(0.5, 1)))
allEffects
help(allEffects)
data("ICU", package = "vcdExtra")
data <- ICU
dim(data)
str(data)
car::some(data)
head(ICU)
# race, coma is represented initially as 3-level factors, but the recoded to binary variables (white, uncons)
# we apply binary variables
data <- data[, -c(4, 20)]
str(data)
Hmisc::describe(data)
psych::describe(data)
str(data)
library(gpairs)
library(vcd)
var <- c("died", "age", "admit", "cancer", "uncons")
# marical and conditional plots
gpairs(data[,var],
diag.pars = list(fontsize = 16, hist.color ="lightgray",
mosaic.pars = list(gp = shading_Friendly, gp_args = list(interpolate=1:4)),
outer.rot = c(45,45)))
# check correlation
psych::pairs.panels(data[, var])
var <- c("age", "systolic", "hrtrate")
psych::pairs.panels(data[, var])
# Margianl plots to check relationship between y and x
op <- par(mfrow(c(2,2), mar = c(4,4,1,2.5) + .1 , cex.lab = 1.4))
col <- c("blue", "orange")
par(mfrow=c(3,1))
plot(died ~ age, data = data, col = col)
plot(died ~ systolic, data = data, col = col)
plot(died ~ hrtrate, data = data, col = col)
fac_var <- c("sex", "service", "cancer", "renal", "infect", "cpr", "previcu", "admit", "fracture", "po2", "ph", "pco", "bic", "creatin", "white", "uncons")
# fourfold display
for(i in 1:length(fac_var)){
eval(parse(text = paste0("tmp <- xtabs(~ died + ", fac_var[i], ", data = data)")))
fourfold(tmp, fontsize = 16)
}
names(data)
# fourfold display
for(i in 1:length(fac_var)){
eval(parse(text = paste0("tmp <- xtabs(~ died + ", fac_var[i], ", data = data)")))
#  fourfold(tmp, fontsize = 16)
loddsratio(tmp, log = FALSE)
}
for(i in 1:length(fac_var)){
eval(parse(text = paste0("tmp <- xtabs(~ died + ", fac_var[i], ", data = data)")))
#  fourfold(tmp, fontsize = 16)
print(confint(loddsratio(tmp, log = FALSE)))
}
i = 1
eval(parse(text = paste0("tmp <- xtabs(~ died + ", fac_var[i], ", data = data)")))
tmp
print(confint(loddsratio(tmp, log = FALSE)))
loddsratio(tmp, log=FALSE)
summary(loddsratio(tmp, log=FALSE))
print(confint(loddsratio(tmp, log = FALSE)))
print(round(confint(loddsratio(tmp, log = FALSE)), digits = 3)
print(round(confint(loddsratio(tmp, log = FALSE)), digits = 3))
print(round(confint(loddsratio(tmp, log = FALSE)), digits = 3))
for(i in 1:length(fac_var)){
eval(parse(text = paste0("tmp <- xtabs(~ died + ", fac_var[i], ", data = data)")))
#  fourfold(tmp, fontsize = 16)
print(paste0("var: ", fac_var[i]))
print(round(confint(loddsratio(tmp, log = FALSE)), digits = 3))
}
vcd::doubledecker(died ~ renal, data = data)
vcd::doubledecker(died ~ infect, data = data)
vcd::doubledecker(died ~ cpr, data = data)
vcd::doubledecker(died ~ admit, data = data)
vcd::doubledecker(died ~ creatin, data = data)
vcd::doubledecker(died ~ ucons, data = data)
vcd::doubledecker(died ~ uncons, data = data)
vcd::doubledecker(died ~ service, data = data)
var <- c("age", "systolic", "hrtrate")
psych::pairs.panels(data[, var])
# Margianl plots to check relationship between y and x
op <- par(mfrow(c(2,2), mar = c(4,4,1,2.5) + .1 , cex.lab = 1.4))
col <- c("blue", "orange")
par(mfrow=c(3,1))
plot(died ~ age, data = data, col = col)
plot(died ~ systolic, data = data, col = col)
plot(died ~ hrtrate, data = data, col = col)
with(data, logi.hist.plot(age, died, type = "hist",
counts = TRUE, ylable = "Probability", xlab = "Age", co.cur = "blue", col.hist = "lightblue", col.ox = "lightblue"))
packages <- c("dplyr", "vcd", "MASS", "vcdExtra", "popbio")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
with(data, logi.hist.plot(age, died, type = "hist",
counts = TRUE, ylable = "Probability", xlab = "Age", co.cur = "blue", col.hist = "lightblue", col.ox = "lightblue"))
par(mfrow=c(1,1))
with(data, logi.hist.plot(age, died, type = "hist",
counts = TRUE, ylable = "Probability", xlab = "Age", co.cur = "blue", col.hist = "lightblue", col.ox = "lightblue"))
par(mfrow=c(1,1))
with(data, logi.hist.plot(age, died, type = "hist",
counts = TRUE, ylable = "Probability", xlab = "Age", col.cur = "blue", col.hist = "lightblue", col.ox = "lightblue"))
data$age
data$died
par(mfrow=c(1,1))
with(data, logi.hist.plot(age, died == "Yes", type = "hist",
counts = TRUE, ylable = "Probability", xlab = "Age", col.cur = "blue", col.hist = "lightblue", col.ox = "lightblue"))
par(mfrow=c(1,1))
with(data, logi.hist.plot(age, died == "Yes", type = "hist",
counts = TRUE, ylabel = "Probability", xlab = "Age", col.cur = "blue", col.hist = "lightblue", col.ox = "lightblue"))
par(mfrow=c(1,1))
with(data, logi.hist.plot(age, died == "Yes", type = "hist",
counts = TRUE, ylabel = "Probability", xlab = "Age", col.cur = "blue", col.hist = "lightblue", col.box = "lightblue"))
par(mfrow=c(1,1))
with(data, logi.hist.plot(age, died == "Yes", type = "hist",
counts = TRUE, ylabel = "Probability", xlab = "Age", col.hist = "lightblue", col.box = "lightblue"))
par(mfrow=c(1,1))
with(data, logi.hist.plot(age, died == "Yes", type = "hist",
counts = TRUE, ylabel = "Probability", xlab = "Age", col.hist = "lightblue"))
par(mfrow=c(1,1))
with(data, logi.hist.plot(systoric, died == "Yes", type = "hist",
counts = TRUE, ylabel = "Probability", xlab = "Systolic", col.hist = "lightblue"))
par(mfrow=c(1,1))
with(data, logi.hist.plot(systolic, died == "Yes", type = "hist",
counts = TRUE, ylabel = "Probability", xlab = "Systolic", col.hist = "lightblue"))
par(mfrow=c(1,1))
with(data, logi.hist.plot(hrtrate, died == "Yes", type = "hist",
counts = TRUE, ylabel = "Probability", xlab = "Hrtrate", col.hist = "lightblue"))
par(mfrow=c(1,1))
with(data,
popbio::logi.hist.plot(independ = age, depend = died == "Yes",
logi.mod = 1, # logistic
type="hist", counts=TRUE,
boxp = TRUE, rug = TRUE,
ylabel = "Probability (died)", xlabel = "age",
col.hist = "lightblue"))
gg <- ggplot(data, aes(x = age, y = (died == "Yes")*1)) + xlim(5, 95) + geom_point(position = position_jitter(height = 0.02, width = 0)) +
stat_smooth(method = "glm", method.args=list(family = "binomial"), alpha = 0.1, fill = "blue", size = 2, fullrange = TRUE)
gg <- gg + stat_smooth(method = "lm", se = FALSE, size = 1.2, color = "black", fullrange = TRUE)
gg <- gg + stat_smooth(method = "lowess", se = FALSE, span = 0.95, colour = "red", size = 1.2)
gg
plot(jitter((died == "Yes")*1, .1) ~ age, data = data, xlim=c(15,85), pch = 16, ylab = "Probability (died)")
xvalues <- seq(15, 85, 5)
pred <- predict(mod_lr, newdata = data.frame(age = xvalues), type = "response", se.fit = TRUE)
upper <- pred$fit + 1.96 * pred$se.fit
lower <- pred$fit - 1.96 * pred$se.fit
polygon(c(xvalues, rev(xvalues)), c(upper, rev(lower)), col = rgb(0, 0, 1, .2), border = NA)
lines(xvalues, pred$fit, lwd = 4, col = "blue")
abline(mod_lm, lwd = 2)
lines(lowess(data$age, data$died, f = 0.9), col = "red", lwd = 2)
mod_lr <- glm(died ~ age, data = data, family = binomial)
mod_lm <- glm((died == "Yes")*1 ~ age, data = data)
# Logistic regression by only one continuous variables and viualize
# compared to linear regression and lowess curve
plot(jitter((died == "Yes")*1, .1) ~ age, data = data, xlim=c(15,85), pch = 16, ylab = "Probability (died)")
xvalues <- seq(15, 85, 5)
pred <- predict(mod_lr, newdata = data.frame(age = xvalues), type = "response", se.fit = TRUE)
upper <- pred$fit + 1.96 * pred$se.fit
lower <- pred$fit - 1.96 * pred$se.fit
polygon(c(xvalues, rev(xvalues)), c(upper, rev(lower)), col = rgb(0, 0, 1, .2), border = NA)
lines(xvalues, pred$fit, lwd = 4, col = "blue")
abline(mod_lm, lwd = 2)
lines(lowess(data$age, data$died, f = 0.9), col = "red", lwd = 2)
gg <- ggplot(data, aes(x = age, y = (died == "Yes")*1)) + xlim(5, 95) + geom_point(position = position_jitter(height = 0.02, width = 0)) +
stat_smooth(method = "glm", method.args=list(family = "binomial"), alpha = 0.1, fill = "blue", size = 2, fullrange = TRUE)
gg <- gg + stat_smooth(method = "lm", se = FALSE, size = 1.2, color = "black", fullrange = TRUE)
gg <- gg + stat_smooth(method = "lowess", se = FALSE, span = 0.95, colour = "red", size = 1.2)
gg
mod <- glm(died ~ age, data = data, family = binomial)
# Check how bad is this univariate model, compared to a model (saturated model) that fits the data perfectly ?
# pr(>Chisq) = 0.6 -->  Its not BAD even if this model has only age variable !!!
vcdExtra::LRstats(mod)
mod <- glm(died ~ ., data = data, family = binomial)
summary(mod)
anova(mod, test = "Chisq")
# simultaneous global test of H0: beta = 0 that all regression coefs are zero
LRtest <- function(model) c(LRchisq = (model$null.deviance - model$deviance), df = (model$df.null - model$df.residual))
( LR <- LRtest(mod) )
( pvalue <- 1 - pchisq(LR[1], LR[2]) )
summary(mod)
anova(mod, test = "Chisq")
summary(mod)
coeftest(mod)
summary(mod)
lmtest::coeftest(mod)
icu.full <- glm(died ~ ., data = data, family = binomial)
# ----------
# lmtest::coeftest() is simple version of summary()
summary(icu.full)
lmtest::coeftest(icu.full)
LRtest <- function(model) c(LRchisq = (model$null.deviance - model$deviance), df = (model$df.null - model$df.residual))
( LR <- LRtest(icu.full) )
( pvalue <- 1 - pchisq(LR[1], LR[2]) )
icu.full <- update(icu.full, . ~ . - renal - fracture)
icu.full <- glm(died ~ ., data = data, family = binomial)
icu.full1 <- update(icu.full, . ~ . - renal - fracture)
anova(icu.full1, icu.full, test = "Chisq")
dd <- datadist(data);  options(datadist = "dd")
mod <- lrm(died ~ ., data = data)
mod
library("rms")
dd <- datadist(data);  options(datadist = "dd")
mod <- lrm(died ~ ., data = data)
mod
icu.lrm1 <- lrm(died ~ ., data = data)
icu.lrm1 <- updateicu.lrm1, . ~ . - renal - fracture)
icu.lrm1 <- update(icu.lrm1, . ~ . - renal - fracture)
sum.lrm1 <- summary(icu.lrm1)
sum.lrm1
dd <- datadist(data);  options(datadist = "dd")
icu.lrm1 <- lrm(died ~ ., data = data)
icu.lrm1 <- update(icu.lrm1, . ~ . - renal - fracture)
sum.lrm1 <- summary(icu.lrm1)
sum.lrm1
dd <- datadist(data);  options(datadist = "dd")
icu.lrm1 <- lrm(died ~ ., data = data)
icu.lrm1 <- update(icu.lrm1, . ~ . - renal - fracture)
sum.lrm1 <- summary(icu.lrm1)
sum.lrm1
# relative contribution
plot(anova(mod))
plot(anova(icu.lrm1))
plot(summary(mod), log=TRUE, cex = 1.25, col=rgb(.1, .1, .8, alpha=c(.3, .5, .8)))
icu.step1 <- stepAIC(icu.full1, trace = TRUE, direction = "both")
icu.step1$anova
icu.step2 <- stepAIC(icu.full1, trace = TRUE, direction = "both", k = log(nrow(data)))
icu.step2$anova
lmtest::coeftest(icu.step1)
lmtest::coeftest(icu.step2)
car::Anova(icu.step1)
car::Anova(icu.step2)
vcdExtra::LRstats(icu.step2, icu.step1)
anova(icu.step1, icu.step2, test="Chisq")
anova(icu.step2, icu.step1, test="Chisq")
icu.glm3 <- update(icu.step2, . ~ . - age + ns(age, 3) + (cancer + admit + uncons)^2)
icu.glm4 <- update(icu.step2, . ~ . - age + age * (cancer + admit + uncons))
lmtest::coeftest(icu.glm3)
lmtest::coeftest(icu.glm4)
lmtest::coeftest(icu.step2)
vcdExtra::LRstats(icu.step2, icu.step1, icu.glm2, icu.glm4)
vcdExtra::LRstats(icu.step2, icu.step1, icu.glm3, icu.glm4)
anova(icu.step2, icu.glm3, test = "Chisq")
anova(icu.step2, icu.glm4, test = "Chisq")
levels(data$cancer) <- c("-", "Cancer")
levels(data$admit) <- c("-", "Emerg")
levels(data$uncons) <- c("-", "Uncons")
icu.glm2 <- glm(died ~ age + cancer + admit + uncons, data = data, family = binomial)
# ----------
# Fitted log odds of death in ICU
# by default, binreq_plot() uses the first numeric predictors as the horizontal variable
vcd::binreg_plot(mod, type = "link", conf_level = 0.68,
legend = FALSE, labels = TRUE, labels_just = c("right", "bottom"),
cex = 0, point_size = 0.8, pch = 15:17,
ylab = "Log odds (died)",  ylim = c(-7, 4))
levels(data$cancer) <- c("-", "Cancer")
levels(data$admit) <- c("-", "Emerg")
levels(data$uncons) <- c("-", "Uncons")
icu.glm2 <- glm(died ~ age + cancer + admit + uncons, data = data, family = binomial)
# Fitted log odds of death in ICU
# by default, binreq_plot() uses the first numeric predictors as the horizontal variable
vcd::binreg_plot(icu.glm2, type = "link", conf_level = 0.68,
legend = FALSE, labels = TRUE, labels_just = c("right", "bottom"),
cex = 0, point_size = 0.8, pch = 15:17,
ylab = "Log odds (died)",  ylim = c(-7, 4))
vcd::binreg_plot(icu.glm2, type = "response", conf_level = 0.68,
legend = FALSE, labels = TRUE, labels_just = c("right", "bottom"),
cex = 0, point_size = 0.8, pch = 15:17,
ylab = "Probability (died)",  ylim = c(0, 1))
# Fitted log odds of death in ICU
# by default, binreq_plot() uses the first numeric predictors as the horizontal variable
vcd::binreg_plot(icu.glm2, type = "link", conf_level = 0.68,
legend = FALSE, labels = TRUE, labels_just = c("right", "bottom"),
cex = 0, point_size = 0.8, pch = 15:17,
ylab = "Log odds (died)",  ylim = c(-7, 4))
vcd::binreg_plot(icu.glm2, type = "link", subset = admit == "Emerg", main = "Emerg",
conf_level = 0.68,
legend = FALSE, labels = TRUE, labels_just = c("right", "bottom"),
cex = 0, point_size = 0.8, pch = 15:17,
ylab = "Log odds (died)",  ylim = c(-7, 4))
