abline(v = A, lty = 1, col = c("black"), lwd = 2)
myfunc <- function(n, mean, sd){
dat <- rnorm(n = n, mean = mean, sd = sd)
return(mean(dat))
}
# ( sd_samp <- sqrt(2) * sd_common / sqrt(n) )
( sd_samp <- sd_common )
dat_h0_mean <- sapply(1:10000, function(x) { myfunc(n = n, mean = mu_h0, sd = sd_samp) })
dat_h0_g1_mean <- sapply(1:10000, function(x) { myfunc(n = n, mean = mu_h0, sd = sd_common) })
dat_h0_g2_mean <- sapply(1:10000, function(x) { myfunc(n = n, mean = mu_h0, sd = sd_common) })
dat_h1_g2_mean <- sapply(1:10000, function(x) { myfunc(n = n, mean = mu_h1, sd = sd_common) })
diff_h0 <- dat_h0_g2_mean - dat_h0_g1_mean
diff_h1 <- dat_h1_g2_mean - dat_h0_g1_mean
sd(dat_h0_g1_mean)
sd_common / sqrt(n)
sd(diff_h0)
sd(diff_h1)
sqrt(2) * sd_common / sqrt(n)
sum(diff_h0 > A) / length(diff_h0)
sum(diff_h1 > A) / length(diff_h1)
sum(diff_h1 > A) / length(diff_h1)
sum(diff_h1 < A) / length(diff_h1)
min_all <- min(c(diff_h0, diff_h1))
max_all <- max(c(diff_h0, diff_h1))
par(mfrow = c(3,1))
brk <- seq(min_all - 0.1, max_all + 0.1, by = 0.01)
min_all <- min(c(diff_h0, diff_h1))
max_all <- max(c(diff_h0, diff_h1))
par(mfrow = c(3,1))
brk <- seq(min_all - 0.1, max_all + 0.1, by = 0.01)
hist(diff_h0, breaks = brk)
abline(v = c(A, 0), lty = 1, col = c("black"), lwd = 2)
hist(diff_h1, breaks = brk)
abline(v = c(A, effect_size), lty = 1, col = c("black"), lwd = 2)
graphics.off()
par(mfrow = c(2,1))
brk <- seq(min_all - 0.1, max_all + 0.1, by = 0.01)
hist(diff_h0, breaks = brk)
abline(v = c(A, 0), lty = 1, col = c("black"), lwd = 2)
hist(diff_h1, breaks = brk)
abline(v = c(A, effect_size), lty = 1, col = c("black"), lwd = 2)
min_all <- min(c(diff_h0, diff_h1))
max_all <- max(c(diff_h0, diff_h1))
graphics.off()
par(mfrow = c(2,1))
brk <- seq(min_all - 0.1, max_all + 0.1, by = 0.01)
hist(diff_h0, breaks = brk)
abline(v = c(A, 0), lty = 1, col = c("black", "blue"), lwd = 2)
hist(diff_h1, breaks = brk)
abline(v = c(A, effect_size), lty = 1, col = c("blue", "black"), lwd = 2)
min_all <- min(c(diff_h0, diff_h1))
max_all <- max(c(diff_h0, diff_h1))
graphics.off()
par(mfrow = c(2,1))
brk <- seq(min_all - 0.1, max_all + 0.1, by = 0.01)
hist(diff_h0, breaks = brk)
abline(v = c(0, A), lty = 1, col = c("black", "blue"), lwd = 2)
hist(diff_h1, breaks = brk)
abline(v = c(A, effect_size), lty = 1, col = c("blue", "black"), lwd = 2)
min_all <- min(c(diff_h0, diff_h1))
max_all <- max(c(diff_h0, diff_h1))
graphics.off()
par(mfrow = c(2,1))
brk <- seq(min_all - 0.1, max_all + 0.1, by = 0.01)
hist(diff_h0, breaks = brk, main = paste0("diff at H0, alpha/2 = ", round(alpha/2, 3)))
abline(v = c(0, A), lty = 1, col = c("black", "blue"), lwd = 2)
hist(diff_h1, breaks = brk, main = paste0("diff at H1, beta = ", round(beta, 3)))
abline(v = c(A, effect_size), lty = 1, col = c("blue", "black"), lwd = 2)
beta <- 0.2
( Zb <- qnorm(p = beta, mean = 0, sd = 1) )
alpha <- 0.05
( Z2a <- qnorm(p = 1 - alpha / 2, mean = 0, sd = 1) )
sd_common <- 0.5
effect_size <- 0.2
( n <- ceiling(2 * (Z2a - Zb) ^ 2 * sd_common ^ 2 / (effect_size ^ 2) ) )
( A <- Z2a * sqrt(2) * sd_common / sqrt(n) )
( B <- Zb * sqrt(2) * sd_common / sqrt(n) )
( A - B )
effect_size
effect_size <- sd_common * 0.2
# ------------------------------------------------------------------------------
# estimate sample size
# ------------------------------------------------------------------------------
( n <- ceiling(2 * (Z2a - Zb) ^ 2 * sd_common ^ 2 / (effect_size ^ 2) ) )
effect_size <- sd_common * 0.2
# ------------------------------------------------------------------------------
# estimate sample size
# ------------------------------------------------------------------------------
( n <- ceiling(2 * (Z2a - Zb) ^ 2 * sd_common ^ 2 / (effect_size ^ 2) ) )
# ------------------------------------------------------------------------------
# effect size validation
# ------------------------------------------------------------------------------
( A <- Z2a * sqrt(2) * sd_common / sqrt(n) )
( B <- Zb * sqrt(2) * sd_common / sqrt(n) )
( A - B )
effect_size
# ------------------------------------------------------------------------------
# mu of h0 and h1
# ------------------------------------------------------------------------------
mu_h0 <- 5.0
( mu_h1 <- mu_h0 + effect_size )
# ( mu_h12 <- ( Z2a * sqrt(2) * sd_common + Zb * sqrt(2) * sd_common ) / sqrt(n) )
# ------------------------------------------------------------------------------
# simulation of one sample
# ------------------------------------------------------------------------------
dat_h0 <- rnorm(n = n, mean = mu_h0, sd = sd_common)
dat_h1 <- rnorm(n = n, mean = mu_h1, sd = sd_common)
# ----------
min_all <- min(c(dat_h0, dat_h1))
max_all <- max(c(dat_h0, dat_h1))
par(mfrow = c(2,1))
brk <- seq(min_all - 0.1, max_all + 0.1, by = 0.1)
hist(dat_h0, breaks = brk)
abline(v = mu_h0, lty = 1, col = c("black"), lwd = 2)
hist(dat_h1, breaks = brk)
abline(v = mu_h1, lty = 1, col = c("black"), lwd = 2)
# ------------------------------------------------------------------------------
# distribution of difference of means
# ------------------------------------------------------------------------------
myfunc <- function(n, mean, sd){
dat <- rnorm(n = n, mean = mean, sd = sd)
return(mean(dat))
}
# group 1
dat_h0_g1_mean <- sapply(1:10000, function(x) { myfunc(n = n, mean = mu_h0, sd = sd_common) })
# group 2 at H0
dat_h0_g2_mean <- sapply(1:10000, function(x) { myfunc(n = n, mean = mu_h0, sd = sd_common) })
# group 2 at H1
dat_h1_g2_mean <- sapply(1:10000, function(x) { myfunc(n = n, mean = mu_h1, sd = sd_common) })
# ----------
# difference of means
diff_h0 <- dat_h0_g2_mean - dat_h0_g1_mean
diff_h1 <- dat_h1_g2_mean - dat_h0_g1_mean
# standard deviation of differences
sd(diff_h0)
sd(diff_h1)
sqrt(2) * sd_common / sqrt(n)
sum(diff_h0 > A) / length(diff_h0)
# H1:  beta
sum(diff_h1 < A) / length(diff_h1)
beta
min_all <- min(c(diff_h0, diff_h1))
max_all <- max(c(diff_h0, diff_h1))
graphics.off()
par(mfrow = c(2,1))
brk <- seq(min_all - 0.1, max_all + 0.1, by = 0.01)
hist(diff_h0, breaks = brk, main = paste0("diff of means of H0, alpha/2 = ", round(alpha/2, 3)))
abline(v = c(0, A), lty = 1, col = c("black", "blue"), lwd = 2)
hist(diff_h1, breaks = brk, main = paste0("diff of means at H1, beta = ", round(beta, 3)))
abline(v = c(A, effect_size), lty = 1, col = c("blue", "black"), lwd = 2)
2 * (Z2a - Zb) ^ 2 * sd_common ^ 2 / (effect_size ^ 2)
effect_size <- sd_common * 0.5
# ------------------------------------------------------------------------------
# estimate sample size
# ------------------------------------------------------------------------------
( n <- ceiling(2 * (Z2a - Zb) ^ 2 * sd_common ^ 2 / (effect_size ^ 2) ) )
library(MASS)
help(stepAIC)
setwd("C:\\Users\\kswad\\OneDrive\\デスクトップ\\技術力強化_統計解析\\51_解析スクリプト\\z_for_demo_uncompleted\\odakyu")
packages <- c("dplyr")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
# ------------------------------------------------------------------------------
# data:  odakyu
# ------------------------------------------------------------------------------
dat <- read.csv("odakyu_dat.txt", header = TRUE, sep = "\t")
str(dat)
car::some(dat)
# ----------
dat$floor <- as.factor(dat$floor)
dat$ac <- as.factor(dat$ac)
dat$closet <- as.factor(dat$closet)
dat$flooring <- as.factor(dat$flooring)
dat$balcony <- as.factor(dat$balcony)
# ----------
# total minutes
dat$min_tot <- dat$bus_min + dat$walk_min + dat$train_min
# price including train fares for 20 days per month
dat$price_tot <- dat$price + dat$train_fare * 20
# price per area
dat$price_ave <- dat$price / dat$area
dat$price_tot_ave <- dat$price_tot / dat$area
# bus
dat <- dat %>% mutate(bus_flg = ifelse(bus_min > 0, 1, 0))
dat$bus_flg <- as.factor(dat$bus_flg)
names(dat)
aov(price ~ (area + min_tot + km + years + shikirei + train_fare + num_exchange + num_stations
bus_flg + floor + ac + closet + flooring + balcony)^2, data = dat)
aov(price ~ (area + min_tot + km + years + shikirei + train_fare + num_exchange + num_stations +
bus_flg + floor + ac + closet + flooring + balcony)^2, data = dat)
mod_in <- lm(price ~ (area + min_tot + km + years + shikirei + train_fare + num_exchange + num_stations +
bus_flg + floor + ac + closet + flooring + balcony)^2, data = dat)
mod_int <- lm(price ~ (area + min_tot + km + years + shikirei + train_fare + num_exchange + num_stations +
bus_flg + floor + ac + closet + flooring + balcony)^2, data = dat)
quine.step <- stepAIC(mod_int, direction = "both"))
quine.step <- stepAIC(mod_int, direction = "both")
mod_step <- stepAIC(mod_int, direction = "both")
mod_step
Anova(mod_step)
car::Anova(mod_step)
summary(mod_step)
AIC(mod1, mod2, mod_step)
AIC(mod, mod2, mod_step)
mod0 <- lm(price ~ area + years + km + min_tot + shikirei + num_exchange + num_stations + train_fare +
bus_flg + ac + closet + flooring + balcony + floor, data = dat)
summary(mod0)
# -->
# shikirei is positive
# num_exchange is positive
# closet is negative ...
# ------------------------------------------------------------------------------
# add interaction for not significant but theoretically should-be included terms
# ------------------------------------------------------------------------------
mod1 <- lm(price ~ area + years + km + min_tot + shikirei + num_exchange + num_stations +
bus_flg + ac + closet + balcony + floor +
closet : area + balcony : area, data = dat)
summary(mod1)
AIC(mod0, mod1, mod_step)
summary(mod_step)
intercept_only_model <- lm(price ~ -1, data = dat)
total_model <- lm(price ~ (area + min_tot + km + years + shikirei + train_fare + num_exchange + num_stations +
bus_flg + floor + ac + closet + flooring + balcony)^2, data = dat)
mod_step1 <- stepAIC(intercept_only_model, direction = 'both', scope = formula(total_model))
summary(mod_step1)
car::Anova(mod_step1)
summary(mod_step1)
car::Anova(mod_step1)
AIC(mod0, mod1, mod_step1)
summary(mod_step1)
mod4 <- lm(price ~ area + years + km + min_tot + shikirei + num_exchange + num_stations +
bus_flg + ac + closet + balcony + floor +
closet : area + balcony : area +
num_exchange : area + num_exchange : num_stations + shikirei : train_fare +
area : num_exchange + area : num_stations + min_tot : num_exchange, data = dat)
summary(mod4)
mod4 <- lm(price ~ area + years + min_tot + shikirei + num_exchange + num_stations +
bus_flg + ac + closet + balcony + floor +
closet : area + balcony : area +
num_exchange : area + num_exchange : num_stations + shikirei : train_fare +
area : num_exchange + area : num_stations + min_tot : num_exchange, data = dat)
summary(mod4)
mod4 <- lm(price ~ area + years + min_tot + shikirei + num_exchange + num_stations +
bus_flg + ac + closet + balcony + floor +
closet : area + balcony : area +
num_exchange : area + num_exchange : num_stations + shikirei : train_fare +
area : num_exchange + min_tot : num_exchange, data = dat)
summary(mod4)
summary(mod_step1)
mod4 <- lm(price ~ area + years + min_tot + shikirei + num_exchange + num_stations +
bus_flg + ac + closet + balcony + floor +
closet : area + balcony : area +
num_exchange : area + num_exchange : num_stations + shikirei : train_fare +
area : num_exchange + min_tot : num_exchange + years : balcony, data = dat)
summary(mod4)
summary(mod_step1)
mod4 <- lm(price ~ area + years + min_tot + shikirei + num_exchange + num_stations +
bus_flg + ac + closet + balcony + floor +
closet : area + balcony : area + ac : area +
num_exchange : area + num_exchange : num_stations + shikirei : train_fare +
area : num_exchange + min_tot : num_exchange + years : balcony, data = dat)
summary(mod4)
mod4 <- lm(price ~ area + years + min_tot + shikirei + num_exchange + num_stations +
bus_flg + ac + closet + balcony + floor +
closet : area + balcony : area + ac : area +
num_exchange : area + num_exchange : num_stations + shikirei : train_fare +
area : num_exchange + min_tot : num_exchange + years : balcony, data = dat)
summary(mod4)
summary(mod_step1)
mod4 <- lm(price ~ area + years + min_tot + shikirei + num_exchange + num_stations +
bus_flg + ac + closet + balcony + floor +
closet : area + balcony : area + ac : area + floor : area +
num_exchange : area + num_exchange : num_stations + shikirei : train_fare +
area : num_exchange + min_tot : num_exchange + years : balcony, data = dat)
summary(mod4)
mod4 <- lm(price ~ area + years + min_tot + shikirei + num_exchange + num_stations +
bus_flg + ac + closet + balcony + floor +
closet : area + ac : area + floor : area +
num_exchange : area + num_exchange : num_stations + shikirei : train_fare +
area : num_exchange + min_tot : num_exchange + years : balcony, data = dat)
summary(mod4)
mod4 <- lm(price ~ area + years + min_tot + shikirei + num_exchange + num_stations +
bus_flg + ac + closet + balcony + floor +
closet : area + balcony : area + ac : area + floor : area +
num_exchange : area + num_exchange : num_stations + shikirei : train_fare +
area : num_exchange + min_tot : num_exchange + years : balcony, data = dat)
summary(mod4)
mod4 <- lm(price ~ area + years + min_tot + shikirei + num_exchange + num_stations +
bus_flg + ac + closet + balcony + floor +
closet : area + balcony : area + ac : area + floor : area +
num_exchange : area + num_exchange : num_stations + shikirei : train_fare +
area : num_exchange + min_tot : num_exchange + balcony : years + balcony : km, data = dat)
summary(mod4)
mod4 <- lm(price ~ area + years + min_tot + shikirei + num_exchange + num_stations +
bus_flg + ac + closet + balcony + floor +
closet : area + balcony : area + ac : area + floor : area +
num_exchange : area + num_exchange : num_stations + shikirei : train_fare +
area : num_exchange + min_tot : num_exchange + balcony : years, data = dat)
summary(mod4)
AIC(mod0, mod1, mod_step1, mod4)
summary(mod_step1)
mod4 <- lm(price ~ area + years + min_tot + shikirei + num_exchange + num_stations +
bus_flg + ac + closet + balcony + floor +
closet : area + balcony : area + ac : area + floor : area +
num_exchange : area + num_stations : area + num_exchange : num_stations + shikirei : train_fare +
min_tot : num_exchange + balcony : years, data = dat)
summary(mod4)
mod4 <- lm(price ~ area + years + min_tot + shikirei + num_exchange + num_stations +
bus_flg + ac + closet + balcony + floor +
closet : area + balcony : area + ac : area + floor : area +
num_exchange : area + num_exchange : num_stations + shikirei : train_fare +
min_tot : num_exchange + balcony : years, data = dat)
summary(mod4)
summary(mod_step1)
mod4 <- lm(price ~ area + years + min_tot + shikirei + num_exchange + num_stations +
bus_flg + ac + closet + balcony + floor +
closet : area + balcony : area + ac : area + floor : area +
num_exchange : area + num_exchange : num_stations + shikirei : train_fare +
num_exchange : min_tot + num_stations : min_tot + num_exchange + balcony : years, data = dat)
summary(mod4)
summary(mod_step1)
mod4 <- lm(price ~ area + years + min_tot + shikirei + num_exchange + num_stations +
bus_flg + ac + closet + balcony + floor +
closet : area + balcony : area + ac : area + floor : area +
num_exchange : area + num_exchange : num_stations + shikirei : train_fare +
num_exchange : min_tot + num_exchange + balcony : years + min_tot : ac, data = dat)
summary(mod4)
summary(mod_step1)
mod4 <- lm(price ~ area + years + min_tot + shikirei + num_exchange + num_stations +
bus_flg + ac + closet + balcony + floor +
closet : area + balcony : area + ac : area + floor : area +
num_exchange : area + num_exchange : num_stations + shikirei : train_fare +
num_exchange : min_tot + num_exchange + balcony : years + shikirei : area, data = dat)
summary(mod4)
AIC(mod0, mod1, mod_step1, mod4)
summary(mod_step1)
mod4 <- lm(price ~ area + years + min_tot + shikirei + num_exchange + num_stations +
bus_flg + ac + closet + balcony + floor +
closet : area + balcony : area + ac : area + floor : area +
num_exchange : area + num_exchange : num_stations + shikirei : train_fare +
num_exchange : min_tot + num_exchange + balcony : years + shikirei : area + shikirei : num_exchange, data = dat)
summary(mod4)
AIC(mod0, mod1, mod_step1, mod4)
car::residualPlots(mod0)
car::residualPlots(mod0)
car::residualPlots(mod1)
car::residualPlots(mod_step1)
car::residualPlots(mod4)
par(mfrow = c(2,2))
plot(mod4)
plot(mod_step1)
par(mfrow=c(1,1))
car::avPlots(mod4, id = TRUE)
infl <- influence.measures(mod4)
infl
par(mfrow = c(1,1))
car::influencePlot(mod4)
idx <- c(180, 54, 405, 406)
dat[idx,]
summary(dat %>% filter(stations == "seijo_gakuen_mae"))
summary(dat %>% filter(stations == "seijo_gakuen_mae"))
dat
summary(dat %>% filter(station == "seijo_gakuen_mae"))
car::influenceIndexPlot(mod4, vars = c("Cook", "studentized", "hat"), id.n = 4)
car::influenceIndexPlot(mod4, vars = c("Cook", "studentized", "hat"), id.n = 4)
car::influencePlot(mod4)
idx <- c(180, 54, 405, 406)
dat[idx,]
head(infl$infmat)
dfbetas <- data.frame(infl$infmat[,2:26])
dfbetas
names(dfbetas)
dfbetas <- data.frame(infl$infmat[,2:22])
names(dfbetas)
car::scatterplotMatrix(dfbetas[1:10], smooth = FALSE, id = TRUE,
showLabels=list(method = "mahal", n = 2, cex = 1.2, location = "lr"),
ellipse = TRUE, levels = 0.95, robust = FALSE,
diagonal = "histogram", col = gray(0.6))
idx <- 1:7
car::scatterplotMatrix(dfbetas[idx], smooth = FALSE, id = TRUE,
showLabels=list(method = "mahal", n = 2, cex = 1.2, location = "lr"),
ellipse = TRUE, levels = 0.95, robust = FALSE,
diagonal = "histogram", col = gray(0.6))
mod4
dfbetas_obj <- c("dfb.area", "dfb.yers", "dfb.mn_t", "dfb.shkr", "dfb.nm_x", "dfb_nm_s")
car::scatterplotMatrix(dfbetas[dfbetas_obj], smooth = FALSE, id = TRUE,
showLabels=list(method = "mahal", n = 2, cex = 1.2, location = "lr"),
ellipse = TRUE, levels = 0.95, robust = FALSE,
diagonal = "histogram", col = gray(0.6))
dfbetas_obj <- c("dfb.area", "dfb.yers", "dfb.mn_t", "dfb.shkr", "dfb.nm_x", "dfb_nm_s")
car::scatterplotMatrix(dfbetas[dfbetas_obj], smooth = FALSE, id = TRUE,
showLabels=list(method = "mahal", n = 2, cex = 1.2, location = "lr"),
ellipse = TRUE, levels = 0.95, robust = FALSE,
diagonal = "histogram", col = gray(0.6))
names(dfbetas)
dfbetas_obj <- c("dfb.area", "dfb.yers", "dfb.mn_t", "dfb.shkr", "dfb.nm_x", "dfb.nm_s")
car::scatterplotMatrix(dfbetas[dfbetas_obj], smooth = FALSE, id = TRUE,
showLabels=list(method = "mahal", n = 2, cex = 1.2, location = "lr"),
ellipse = TRUE, levels = 0.95, robust = FALSE,
diagonal = "histogram", col = gray(0.6))
idx <- c(54, 253, 406)
dat[idx,]
mod_obj <- mod4
library(effects)
eff <- effects::allEffects(mod_obj)
eff
# ----------
# plot main effets of each variable
plot(eff)
plot(Effect(c("area", "km"), mod_obj),
confint = list(style = "bands"),
#     confint = list(style = "bars"),
lines = list(multiline = TRUE, lty = c(1,2,3,4,5), col = c("black", gray(0.2), gray(0.4), gray(0.6), gray(0.8))))
plot(Effect(c("area", "years"), mod_obj),
confint = list(style = "bands"),
#     confint = list(style = "bars"),
lines = list(multiline = TRUE, lty = c(1,2,3,4,5), col = c("black", gray(0.2), gray(0.4), gray(0.6), gray(0.8))))
plot(Effect(c("area", "tot_min"), mod_obj),
confint = list(style = "bands"),
#     confint = list(style = "bars"),
lines = list(multiline = TRUE, lty = c(1,2,3,4,5), col = c("black", gray(0.2), gray(0.4), gray(0.6), gray(0.8))))
plot(Effect(c("area", "min_tot"), mod_obj),
confint = list(style = "bands"),
#     confint = list(style = "bars"),
lines = list(multiline = TRUE, lty = c(1,2,3,4,5), col = c("black", gray(0.2), gray(0.4), gray(0.6), gray(0.8))))
fitp <- cbind(mod_obj$model, pred = predict(mod_obj))
head(fitp)
library(ggplot2)
graphics.off()
gg1 <- ggplot(fitp, aes(x = area, y = pred)) + theme_bw() + geom_point(size = 2.5) + geom_point(colour = "black", size = 1.5) + geom_smooth()
gg1
gg1 + facet_grid(~ ac)
gg1 + facet_grid(~ balcony)
gg1 + facet_grid(~ as.factor(num_exchange))
library(AICcmodavg)
mynames <- paste0("M", as.character(1:4))
# second.ord = TRUE/FALSE:  AICc/AIC is computed
# response variable should be same, the loglog models are excluded
myaicc <- aictab(cand.set = list(mod0, mod1, mod_step1, mod4),
modnames = mynames, sort = TRUE, second.ord = TRUE)
as.data.frame(myaicc)
confset(cand.set = list(mod0, mod1, mod_step, mod4), modnames = mynames, level = 0.75)
evidence(myaicc)
myaicc2 <- as.data.frame(myaicc)[,-7]
myaicc2$Eratio <- round(max(myaicc2$AICcWt) / myaicc2$AICcWt, 3)
data.frame(Model = myaicc2$Modnames, round(myaicc2[,-1], 3))
dat <- read.csv("odakyu_dat.txt", header = TRUE, sep = "\t")
str(dat)
car::some(dat)
# ----------
dat$floor <- as.factor(dat$floor)
dat$ac <- as.factor(dat$ac)
dat$closet <- as.factor(dat$closet)
dat$flooring <- as.factor(dat$flooring)
dat$balcony <- as.factor(dat$balcony)
dat$min_tot <- dat$bus_min + dat$walk_min + dat$train_min
dat <- read.csv("silvia_dat.txt", header = TRUE, colClasses = "numeric", sep = "\t")
str(dat)
car::some(dat)
# ----------
dat$TM <- as.factor(dat$TM)
dat$DEAL <- as.factor(dat$DEAL)
# ------------------------------------------------------------------------------
# basics
# ------------------------------------------------------------------------------
# setwd("//media//kswada//MyFiles//R//cpi_exr_wage")
setwd("C:\\Users\\kswad\\OneDrive\\デスクトップ\\技術力強化_統計解析\\51_解析スクリプト\\z_for_demo_uncompleted\\silvia")
packages <- c("dplyr")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
# ------------------------------------------------------------------------------
# data:  silvia
#   - second car price data of 244 Nissan Silvias, listed on magazine "Car Sensor" (by Recruit) in Nov. 1993
#   - Variables:
#       - P:  second car price (10 thousand yen)
#       - TM:  Transmission Type (0: Automatic,  1: Manual)
#       - Yr:  Years since registered as new car
#       - CT:  remained months to next car test
#       - NP:  car price at brand-new car  (10 thousand yen)
#       - DEAL:  via dealers (0: non-dealers,  1: dealers)
#       - KM:  running miles (10 thousand KM),  zero means that data is not given
# ------------------------------------------------------------------------------
dat <- read.csv("silvia_dat.txt", header = TRUE, colClasses = "numeric", sep = "\t")
str(dat)
car::some(dat)
# ----------
dat$TM <- as.factor(dat$TM)
dat$DEAL <- as.factor(dat$DEAL)
# ------------------------------------------------------------------------------
# basics
# ------------------------------------------------------------------------------
setwd("C:\\Users\\kswad\\OneDrive\\デスクトップ\\技術力強化_統計解析\\51_解析スクリプト\\silvia")
packages <- c("dplyr")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
# ------------------------------------------------------------------------------
# data:  silvia
#   - second car price data of 244 Nissan Silvias, listed on magazine "Car Sensor" (by Recruit) in Nov. 1993
#   - Variables:
#       - P:  second car price (10 thousand yen)
#       - TM:  Transmission Type (0: Automatic,  1: Manual)
#       - Yr:  Years since registered as new car
#       - CT:  remained months to next car test
#       - NP:  car price at brand-new car  (10 thousand yen)
#       - DEAL:  via dealers (0: non-dealers,  1: dealers)
#       - KM:  running miles (10 thousand KM),  zero means that data is not given
# ------------------------------------------------------------------------------
dat <- read.csv("silvia_dat.txt", header = TRUE, colClasses = "numeric", sep = "\t")
str(dat)
car::some(dat)
# ----------
dat$TM <- as.factor(dat$TM)
dat$DEAL <- as.factor(dat$DEAL)
# ------------------------------------------------------------------------------
# basics
# ------------------------------------------------------------------------------
