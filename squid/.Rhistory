rm(list = ls())
packages <- c("dplyr")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
setwd("C:\\Users\\kswad\\OneDrive\\デスクトップ\\技術力強化_統計解析\\51_解析スクリプト\\00_basics\\regression_basics")
# ------------------------------------------------------------------------------
# data:  Davis
# ------------------------------------------------------------------------------
data <- read.csv("Davis.txt", header = T, sep = "\t")
str(data)
car::some(data)
summary(data)
psych::describe(data)
library(lattice)
Mydotplot <- function(DataSelected){
P <- dotplot(as.matrix(as.matrix(DataSelected)), groups=FALSE,
strip = strip.custom(bg = 'white', par.strip.text = list(cex = 1.2)),
scales = list(x = list(relation = "free", draw = TRUE), y = list(relation = "free", draw = FALSE)),
col=1, cex  = 0.5, pch = 16,
xlab = list(label = "Value of the variable", cex = 1.5),
ylab = list(label = "Order of the data from text file", cex = 1.5))
print(P)
}
MyVar <- c("height", "repwt", "repht", "weight")
graphics.off()
Mydotplot(data[,MyVar])
# na.exclude() is required
psych::pairs.panels(na.exclude(data[,MyVar]), stars = TRUE)
# psych::pairs.panels(data[,MyVar], stars = TRUE)
psych::pairs.panels(na.exclude(data[,MyVar]), method = "spearman", stars = TRUE)
# psych::pairs.panels(data[,MyVar], method = "spearman", stars = TRUE)
# -->
summary(data)
library(corrplot)
cor_mat <- cor(data %>% dplyr::select(-sex) %>% na.exclude(), method = "pearson")
corrplot(cor_mat, hclust.method = "ward.D2", addrect = TRUE)
library(car)
formula <- ~ height + repwt + repht + weight
scatterplotMatrix(formula, data = data,
smooth = FALSE,
id = list(n = 3), ellipse = TRUE, col = gray(0.3), pch = 20)
formula <- ~ height + repwt + repht + weight | sex
scatterplotMatrix(formula, data = data,
smooth = FALSE, ellipse = list(levels = 0.5),
id = list(n = 3), col = c(gray(0.6), "black"), pch = 20)
par(mfrow = c(2,2))
boxplot(weight ~ sex, data = data)
boxplot(repwt ~ sex, data = data)
boxplot(repht ~ sex, data = data)
boxplot(height ~ sex, data = data)
data2 <- na.exclude(data)
# ------------------------------------------------------------------------------
# data exploration:  Y vs. continuous X
# ------------------------------------------------------------------------------
# note that lowess requires na.excluded data
par(mfrow = c(2,2))
plot(weight ~ height, data = data2, ylab = "weight", cex.lab = 1.25, xlab = "height", pch = 20, col = gray(0.7))
lines(lowess(data2$height, data2$weight), col = "blue", lwd = 1)
plot(weight ~ repwt, data = data2, ylab = "weight", cex.lab = 1.25, xlab = "repwt", pch = 20, col = gray(0.7))
lines(lowess(data2$repwt, data2$weight), col = "blue", lwd = 1)
plot(weight ~ repht, data = data2, ylab = "weight", cex.lab = 1.25, xlab = "repht", pch = 20, col = gray(0.7))
lines(lowess(data2$repht, data2$weight), col = "blue", lwd = 1)
library(ggplot2)
gg <- ggplot(data, aes(height, weight)) +
stat_smooth(method = "loess", size = 2, fill = "blue", alpha = 0.25) +
stat_smooth(method = "lm", color = "red", size = 1.25, se = FALSE) +
#  scale_y_log10(breaks = c(1, 2, 5, 10, 20)) +
labs(y = "weight", x = "height")
gg
gg + facet_grid(~ sex)
library(carData)
help(Davis)
linmod <- lm(weight ~ repwt, data = data2)
summary(linmod)
coef(linmod)
plot(weight ~ repwt, data = data2)
abline(linmod)
graphics.off()
plot(weight ~ repwt, data = data2)
abline(linmod)
par(mfrow = c(2,2))
plot(linmod)
linmod <- lm(weight ~ repwt, data = data2)
# ------------------------------------------------------------------------------
# model diagnostics:  residuals
# ------------------------------------------------------------------------------
resi <- residuals(linmod)
# resi <- resid(linmod)
length(resi)
summary(resi)
car::densityPlot(resi)
car::residualPlots(linmod)
confint(linmod)
# Wald confidence interval (based on asymptotic normality)
confint.default(linmod, level = 0.95)
# ----------
car::Confint(linmod)
library(effects)
eff <- effects::allEffects(linmod)
eff[["repwt"]]
# ----------
# plot main effets of each variable
plot(eff)
plot(predictorEffects(linmod))
predictorEffects(linmod)
plot(predictorEffects(linmod, residuals = TRUE), partial.residuals = list(cex = 0.35, col = gray(0.5), lty = 2))
linmod2 <- update(linmod, subset = -12)
summary(linmod2)
# -->
# note that Multiple R-squared increased to 0.9724
car::residualPlot(linmod2)
residualPlot(linmod2, groups = data2$sex)
stand.resid2 <- rstandard(linmod2)
# studentized Residuals
stud.resid2 <- rstudent(linmod2)
# ----------
par(mfrow=c(2,1))
plot(stand.resid2, ylim = c(min(-3, stand.resid2), max(3, stand.resid2)), main = "Standardized residuals", type = "h")
abline(h = c(3,2,0,-2,-3), lty = "dotted", col = c("red", "blue", "gray", "blue", "red"))
plot(stud.resid2, ylim = c(min(-3, stud.resid2), max(3, stud.resid2)), main = "Studentized residuals", type = "h")
abline(h = c(3,2,0,-2,-3), lty = "dotted", col = c("red", "blue", "gray", "blue", "red"))
car::influenceIndexPlot(linmod2, vars = c("studentized"))
car::outlierTest(linmod2)
influencePlot(linmod2)
# ----------
op <- par(mar = c(5, 4, 1, 1) + .1, cex.lab = 1.2)
res <- car::influencePlot(linmod2, scale = 8)
k <- length(coef(linmod2))
n <- nrow(data2[,-12])
text(x = c(2, 3) * k / n, y = -1.8, c("2k/n", "3k/n"), cex = 1.2)
idx <- which(rownames(data2) %in% rownames(res))
cbind(data2[idx,], res)
head(data)
car::influenceIndexPlot(linmod2, vars = c("Cook", "studentized", "hat"), id.n = 4)
linmod3 <- lm(weight ~ repwt + sex, data = data2, subset = -12)
# linmod3 <- update(linmod, . ~ . + sex, subset = -12)
summary(linmod3)
car::Confint(linmod3)
stargazer::stargazer(linmod, linmod2, linmod3, type = "text")
anova(linmod0, linmod)
linmod0 <- update(linmod, . ~ 1)
summary(linmod0)
# ----------
# linmod is better than intercept only model ?  --> better
anova(linmod0, linmod)
anova(linmod2, linmod3)
AIC(linmod, linmod2, linmod3)
linmod <- lm(weight ~ repwt, data = data2)
linmod2 <- update(linmod, subset = -12)
linmod3 <- lm(weight ~ repwt + sex, data = data2, subset = -12)
AIC(linmod, linmod2, linmod3)
anova(linmod2, linmod3)
setwd("C:\\Users\\kswad\\OneDrive\\デスクトップ\\技術力強化_統計解析\\51_解析スクリプト\\z_for_demo_uncompleted\\biodiversity")
packages <- c("dplyr", "lattice", "nlme")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
# ------------------------------------------------------------------------------
# Data:  Biodiversity
# ------------------------------------------------------------------------------
Biodiv <- read.table(file = "Biodiversity.txt", header = TRUE)
str(Biodiv)
# ----------
Biodiv$fTreatment <- factor(Biodiv$Treatment)
Biodiv$fNutrient <- factor(Biodiv$Nutrient)
# ------------------------------------------------------------------------------
# Linear Regression as starting point
# ------------------------------------------------------------------------------
# Initial linear regression analysis, using biomass, enrichment and nutrient, with all the two-way interactions,
# and the three-way interaction as explanatory variables
M0 <- lm(Concentration ~ Biomass * fTreatment * fNutrient, data = Biodiv)
summary(M0)
anova(M0)
op <- par(mfrow = c(1,1))
plot(M0, which = c(1), col = 1, add.smooth = T, caption = "")
par(op)
termplot(M0, partial.resid = TRUE, rug = TRUE, se = TRUE)
graphics.off()
plot(effects::Effect("Biomass", M0), lwd = 3, ci.style = "bands")
plot(effects::Effect("fNutrient", M0), lwd = 3, ci.style = "bands")
plot(effects::Effect("fTreatment", M0), lwd = 3, ci.style = "bands")
graphics.off()
# allEffects() calculates the effects for all high-order terms in a given model.
plot(effects::allEffects(M0), lwd = 3, ci.style = "bands")
f1 <- formula(Concentration ~ Biomass * fTreatment * fNutrient)
M0 <- gls(f1, data = Biodiv)
M1A <- gls(f1, data = Biodiv, weights = varIdent(form = ~1 | fTreatment * fNutrient))
M1B <- gls(f1, data = Biodiv, weights = varIdent(form = ~1 | fNutrient))
M1C <- gls(f1, data = Biodiv, weights = varIdent(form = ~1 | fTreatment))
# ----------
anova(M0, M1A, M1B, M1C)
anova(M1A)
summary(M1A)
graphics.off()
plot(M0, col = Biodiv$fNutrient, pch = 20)
plot(M1A, col = Biodiv$fNutrient, pch = 20)
# -->
# There is no sign of heterogeneity in M1A
graphics.off()
# allEffects() calculates the effects for all high-order terms in a given model.
plot(effects::allEffects(M1A), lwd = 3, ci.style = "bands")
library(nlme)
vfOptim <- varIdent(form = ~ 1 | fTreatment * fNutrient)
# full model (with 3-way interaction term)
M2A1 <- gls(Concentration ~ Biomass + fTreatment + fNutrient +
Biomass:fTreatment + Biomass:fNutrient + fTreatment:fNutrient +
Biomass:fTreatment:fNutrient,
weights = vfOptim,
method = "ML", data = Biodiv)
# full model minus 3-way interaction term
M2A2 <- gls(Concentration ~ Biomass + fTreatment + Nutrient +
Biomass:fTreatment + Biomass:fNutrient + fTreatment:fNutrient,
weights = vfOptim,
method = "ML", data = Biodiv)
anova(M2A1, M2A2)
fFull <- formula(Concentration ~ Biomass + fTreatment + fNutrient +
Biomass:fTreatment + Biomass:fNutrient + fTreatment:fNutrient)
M3.Full <- gls(fFull, weights = vfOptim, method = "ML", data = Biodiv)
# ----------
# Drop Biomass:fTreatment
M3.Drop1 <- update(M3.Full,. ~ . -Biomass:fTreatment)
anova(M3.Full, M3.Drop1)
# Drop Biomass:fNutrient
M3.Drop2 <- update(M3.Full,. ~ . -Biomass:fNutrient)
anova(M3.Full, M3.Drop2)
# fTreatment:fNutrient
M3.Drop3 <- update(M3.Full,. ~ . -fTreatment:fNutrient)
anova(M3.Full, M3.Drop3)
# -->
# Clearly the 2-way interaction term Biomass:fTreatment is not significant at the 5% level and should be dropped.
# ------------------------------------------------------------------------------
# 2nd round backward selection
# ------------------------------------------------------------------------------
M4.Full <- gls(Concentration ~ Biomass + fTreatment + fNutrient +
Biomass:fNutrient + fTreatment:fNutrient,
weights = vfOptim,
method = "ML", data = Biodiv)
# ----------
# Drop Biomass:fNutrient
M4.Drop1 <- update(M4.Full, .~. -Biomass:fNutrient)
anova(M4.Full, M4.Drop1)
# ----------
# Drop fTreatment:fNutrient
M4.Drop2 <- update(M4.Full, .~. -fTreatment:fNutrient)
anova(M4.Full, M4.Drop2)
# -->
# p-value of 0.04 for the Biomass:fNutrient interaction is not impressive, especially not with a series of hypothesis tests.
# So we decided to drop it as well and continue with the following full model.
M1 <- lm(Testisweight ~ DML * fMONTH, data = Squid)
summary(M1)
setwd("C:\\Users\\kswad\\OneDrive\\デスクトップ\\技術力強化_統計解析\\51_解析スクリプト\\z_for_demo_uncompleted\\squid")
packages <- c("dplyr", "lattice")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
# ------------------------------------------------------------------------------
# data:  Squid
#   - Data published by Smith et al. (2005), who looked at seasonal patterns in reproductive and somatic tissues in the squid Loligo forbesi.
#   - They used several variables on female and male squid, but we only use the dorsal mantle length (in mm) and testis weight from 768 male squid.
#     The aim is to model the testis weight as a function of the dorsal mantle length (DML) and the month recorded.
#     The idea behind the original analysis was to investigate the role of endogenous and exogenous factors affecting sexual maturation,
#     more specifically to determine the extent to which maturation is size-related and seasonal.
# ------------------------------------------------------------------------------
Squid <- read.table(file = "Squid.txt", header = TRUE)
str(Squid)
dim(Squid)
car::some(Squid)
Squid$fMONTH = factor(Squid$MONTH)
# ------------------------------------------------------------------------------
# Linear Regression as starting point
#   - Previous work on the related species Loligo vulgaris showed graphically that maturity was a function of both size and season,
#     and that size-at-maturity differed between seasons (Raya et al., 1999)
# ------------------------------------------------------------------------------
M1 <- lm(Testisweight ~ DML * fMONTH, data = Squid)
summary(M1)
op <- par(mfrow = c(2,2), mar=c(4,4,2,2))
plot(M1, which = c(1), col = 1, add.smooth = T, caption = "")
plot(Squid$fMONTH, resid(M1), xlab = "Month", ylab = "Residuals")
plot(Squid$DML, resid(M1), xlab = "DML", ylab = "Residuals")
lines(lowess(Squid$DML, resid(M1)), col = "red")
par(op)
library(lattice)
E <- resid(M1)
coplot(E ~ DML | fMONTH, data = Squid)
