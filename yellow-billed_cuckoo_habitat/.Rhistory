setwd("//media//kswada//MyFiles//R//kline")
packages <- c("dplyr", "rethinking")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
# ------------------------------------------------------------------------------
# data:  Kline2
#   - This is the ordinary data with coordinats
# ------------------------------------------------------------------------------
data("Kline2", package = "rethinking")
d <- Kline2
dim(d)
str(d)
d$society <- 1:10
d$has_high_contact <- ifelse( d$contact=="high" , 1 , 0 )
# ------------------------------------------------------------------------------
# data:  islandDistMatrix
#   - This is the geographic distance matrix, measured in 1000 kilometers
#   - We will use these distances as a measure of similarity in technology exposure.
#   - This will allow us to estimate varying intercepts for each society that account for non-independence in tools as a function of their geographical similarly.
# ------------------------------------------------------------------------------
data("islandsDistMatrix", package = "rethinking")
islandsDistMatrix
# Dmat <- islandsDistMatrix
# colnames(Dmat) <- c("Ml", "Ti", "SC", "Ya", "Fi", "Tr", "Ch", "Mn", "To", "Ha")
# ------------------------------------------------------------------------------
# ------------------------------------------------------------------------------
# model with the Gaussian process
mod.gp <- map2stan(
alist(
total_tools ~ dpois(lambda),
log(lambda) <- a + g[society] + bp*logpop,
g[society] ~ GPL2( Dmat , etasq , rhosq , 0.01 ),
a ~ dnorm(0,10),
bp ~ dnorm(0,1),
etasq ~ dcauchy(0,1),
rhosq ~ dcauchy(0,1)
),
data=list(
total_tools=d$total_tools,
logpop=d$logpop,
society=d$society,
Dmat=islandsDistMatrix),
warmup=2000, iter=1e4 , chains=3, cores=10)
precis(mod.gp, depth=2)
mod.fixed <- map2stan(
alist(
total_tools ~ dpois(lambda),
log(lambda) <- a + bp*logpop + bc*has_high_contact,
a ~ dnorm(0, 10),
c(bp, bc) ~ dnorm(0, 1)
),
data=d, warmup=500, iter=3000 , chains=3, cores=10
)
mod.var.intercept.slope <- map2stan(
alist(
total_tools ~ dpois(lambda),
log(lambda) <- a + a_society[society] + bp_society[society]*logpop,
a ~ dnorm(0, 10),
c(a_society, bp_society)[society] ~ dmvnormNC(sigma_society , Rho),
sigma_society ~ dcauchy(0, 2),
Rho ~ dlkjcorr(2)
),
data=d, warmup=2000, iter=1e4, chains=3, cores=10
)
(cmp <- compare(mod.fixed, mod.varintercept, mod.var.ingtercept, mod.gp))
precis(mod.intercept.slope, depth=2)
(cmp <- compare(mod.fixed, mod.varintercept, mod.var.ingtercept, mod.gp))
precis(mod.varintercept, depth=2)
mod.varintercept <- map2stan(
alist(
total_tools ~ dpois(lambda),
log(lambda) <- a + a_society[society] + bp*logpop,
a ~ dnorm(0, 10),
bp ~ dnorm(0, 1),
a_society[society] ~ dnorm(0, sigma_society),
sigma_society ~ dcauchy(0, 1)
),
data=d, iter=4000, chains=3, cores=10
)
(cmp <- compare(mod.fixed, mod.varintercept, mod.var.ingtercept, mod.gp))
precis(mod.intercept.slope, depth=2)
mod.var.intercept.slope <- map2stan(
alist(
total_tools ~ dpois(lambda),
log(lambda) <- a + a_society[society] + bp_society[society]*logpop,
a ~ dnorm(0, 10),
c(a_society, bp_society)[society] ~ dmvnormNC(sigma_society , Rho),
sigma_society ~ dcauchy(0, 2),
Rho ~ dlkjcorr(2)
),
data=d, warmup=2000, iter=1e4, chains=3, cores=10
)
precis(mod.intercept.slope, depth=2)
precis(mod.var.intercept.slope, depth=2)
(cmp <- compare(mod.fixed, mod.varintercept, mod.var.ingtercept.slope, mod.gp))
(cmp <- compare(mod.fixed, mod.varintercept, mod.var.intercept.slope, mod.gp))
precis(mod.var.intercept.slope, depth=2)
plot(cmp)
(cmp <- compare(mod.fixed, mod.varintercept, mod.var.intercept.slope, mod.gp))
setwd("//media//kswada//MyFiles//R//oxboys")
packages <- c("dplyr", "rethinking")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
data("Oxboys", package = "rethinking")
d <- Oxboys
dim(d)
str(d)
hist(d$age)
d %>% ggplot(aes(age, height, group=Subject, color=as.factor(Subject))) + geom_line() + geom_point(size=2) +
ggtitle("Boy's height as function of age", subtitle = "Each line corresponds to a particuar boy(subject). Age is centered and standardized.")
check_index(d$Subject)
d$height_normalised <- (d$height - mean(d$height))/sd(d$height)
mod.centered <- map2stan(
alist(
height_normalised ~ dnorm(mu, sigma), #predict normalised height to be able to compare intercept and slope on the same scale
mu <- a + a_individual[Subject] + (b_age + b_age_individual[Subject])*age,
c(a_individual, b_age_individual)[Subject] ~ dmvnorm2(0, sigma_ind, Rho),
a ~ dnorm(0, 100),
b_age ~ dnorm(0, 1),
sigma_ind ~ dcauchy(0, 2),
Rho ~ dlkjcorr(2),
sigma ~ dcauchy(0, 2)
),
data=d,
warmup=1000, iter=3000, chains=2, cores=10
)
precis(mod.centered, depth=2)
post <- extract.samples(mod.centered)
a <- apply( post$a_individual , 2 , mean )
b_age <- apply( post$b_age_individual , 2 , mean )
plot(a, b_age, xlab="intercept per subject" , ylab="slope for age per subject", pch=16 , col=rangi2, xlim=c(-2.2,1), ylim=c(-2.2,1))
abline(a=0, b=1, lty=2)
mod.centered2 <- map2stan(
alist(
height_normalised ~ dnorm(mu, sigma), #predict normalised height to be able to compare intercept and slope on the same scale
mu <- a_individual[Subject] + b_age_individual[Subject]*age,
c(a_individual, b_age_individual)[Subject] ~ dmvnorm2(c(a, b_age), sigma_ind, Rho),
a ~ dnorm(0, 100),
b_age ~ dnorm(0, 1),
sigma_ind ~ dcauchy(0, 2),
Rho ~ dlkjcorr(2),
sigma ~ dcauchy(0, 2)
),
data=d,
warmup=1000, iter=3000, chains=2, cores=2
)
precis(mod.centered2, depth=2)
post <- extract.samples(mod.centered2)
a <- apply( post$a_individual, 2 , mean )
b_age <- apply( post$b_age_individual, 2 , mean )
plot(a, b_age, xlab="intercept per subject" , ylab="slope for age per subject", pch=16 , col=rangi2, xlim=c(-2.2,1), ylim=c(-2.2,1))
abline(a=0, b=1, lty=2)
# contour plot of estimated multivariateive distribution of intercept and slope
Mu_est <- c( mean(post$a_individual) , mean(post$b_age_individual) )
rho_est <- mean( post$Rho[,1,2] )
sa_est <- mean( post$sigma_ind[,1] )
sb_est <- mean( post$sigma_ind[,2] )
cov_ab <- sa_est*sb_est*rho_est
Sigma_est <- matrix( c(sa_est^2,cov_ab,cov_ab,sb_est^2) , ncol=2 )
# draw contours
for ( l in c(0.1,0.3,0.5,0.8,0.99) ) {
lines(ellipse(Sigma_est,centre=Mu_est,level=l), col=col.alpha("black",0.2))
}
packages <- c("dplyr", "rethinking", "ellipse")
for ( l in c(0.1,0.3,0.5,0.8,0.99) ) {
lines(ellipse(Sigma_est,centre=Mu_est,level=l), col=col.alpha("black",0.2))
}
packages <- c("dplyr", "rethinking", "ellipse")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
Mu_est <- c( mean(post$a_individual) , mean(post$b_age_individual) )
rho_est <- mean( post$Rho[,1,2] )
sa_est <- mean( post$sigma_ind[,1] )
sb_est <- mean( post$sigma_ind[,2] )
cov_ab <- sa_est*sb_est*rho_est
Sigma_est <- matrix( c(sa_est^2,cov_ab,cov_ab,sb_est^2) , ncol=2 )
# draw contours
for ( l in c(0.1,0.3,0.5,0.8,0.99) ) {
lines(ellipse(Sigma_est,centre=Mu_est,level=l), col=col.alpha("black",0.2))
}
# Model suggests that intercept and slope are correlated - for big intercepts(boys who are higher on average) the speed of growth are larger(slope for age is bigger)
precis(mod.centered2, depth=2)
mod.centered2 <- map2stan(
alist(
height_normalised ~ dnorm(mu, sigma), #predict normalised height to be able to compare intercept and slope on the same scale
mu <- a_individual[Subject] + b_age_individual[Subject]*age,
c(a_individual, b_age_individual)[Subject] ~ dmvnorm2(c(a, b_age), sigma_ind, Rho),
a ~ dnorm(0, 100),
b_age ~ dnorm(0, 1),
sigma_ind ~ dcauchy(0, 2),
Rho ~ dlkjcorr(2),
sigma ~ dcauchy(0, 2)
),
data=d,
warmup=1000, iter=3000, chains=2, cores=10
)
precis(mod.centered2, depth=2)
# ----------
post <- extract.samples(mod.centered2)
a <- apply( post$a_individual, 2 , mean )
b_age <- apply( post$b_age_individual, 2 , mean )
plot(a, b_age, xlab="intercept per subject" , ylab="slope for age per subject", pch=16 , col=rangi2, xlim=c(-2.2,1), ylim=c(-2.2,1))
abline(a=0, b=1, lty=2)
# ----------
# contour plot of estimated multivariateive distribution of intercept and slope
Mu_est <- c( mean(post$a_individual) , mean(post$b_age_individual) )
rho_est <- mean( post$Rho[,1,2] )
sa_est <- mean( post$sigma_ind[,1] )
sb_est <- mean( post$sigma_ind[,2] )
cov_ab <- sa_est*sb_est*rho_est
Sigma_est <- matrix( c(sa_est^2,cov_ab,cov_ab,sb_est^2) , ncol=2 )
# draw contours
for ( l in c(0.1,0.3,0.5,0.8,0.99) ) lines(ellipse(Sigma_est, centre=Mu_est, level=l), col=col.alpha("black",0.2))
setwd("//media//kswada//MyFiles//R//yellow-billed_cuckoo_habit")
packages <- c("dplyr")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
rm(list=ls())
graphics.off()
setwd("//media//kswada//MyFiles//R//yellow-billed_cuckoo_habit")
setwd("//media//kswada//MyFiles//R//yellow-billed_cuckoo_habitat")
packages <- c("dplyr")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
data.Set1.obs <- read.csv("//media//kswada//MyFiles//data//yellow-billed_cuckoo_habitatset1//obspts.csv", header = TRUE)
data.Set1.obs <- read.csv("//media//kswada//MyFiles//data//yellow-billed_cuckoo_habitat//obspts.csv", header = TRUE)
str(data.Set1.obs)
install.packages("sf", dependencies = TRUE)
proj4string(data.Set1.obs) <- CRS("+proj=utm +zone=10 +ellps=WGS84")
help("CRS")
