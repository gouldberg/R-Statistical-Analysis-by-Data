lmods2 <- lm(Species ~ Elevation + Nearest + Scruz, data = gala)
lmod3 <- lm(Species ~ I(1 * Area + 1 * Adjacent) + Elevation + Nearest + Scruz, data = gala)
lmod4 <- lm(Species ~ Area + offset(0.5 * Elevation) + Nearest + Scruz + Adjacent, data = gala)
lmod_final <- lm(Species ~ Elevation + Adjacent, data = gala)
lmod_r_final <- lm(Species ~ Area + Elevation + Adjacent, data = gala[-16,])
lmod_r2_final <- lm(Species ~ Area + Elevation + Adjacent, data = gala)
AIC(lmod, lmods, lmods2, lmod4, lmod_final, lmod_r2_final)
lmod_r2_final <- lm(Species ~ Area + Elevation + Adjacent, data = gala)
lmod_r2_final <- lm(Species ~ Area + Elevation + Adjacent, data = gala)
lmod_r2_final <- lm(Species ~ Area + Elevation + Adjacent, data = gala)
AIC(lmod, lmods, lmods2, lmod4, lmod_final, lmod_r2_final)
setwd("//media//kswada//MyFiles//R//gala")
packages <- c("dplyr")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
# ------------------------------------------------------------------------------
# data:  gala
# ------------------------------------------------------------------------------
data("gala", package = "faraway")
str(gala)
dim(gala)
car::some(gala)
# ------------------------------------------------------------------------------
# Confidence interval for coefficient
# ------------------------------------------------------------------------------
df <- 24
# 97.5% point of t distribution (df = 24)
qt(0.975, df)
coef(lmod) + t(c(-1, 1) %*% t( qt(0.975, df) * lmodsum$coef[,"Std. Error"] ))
confint(lmod)
# ----------
# joint confidence interval region
library(ellipse)
par(mfrow = c(1,1))
# Pearson Correlation = 0.8
# 95% region
plot(ellipse(0.8), type = 'l')
# ----------
plot(ellipse(lmod, c("Area","Adjacent")), type = "l", ylim = c(-0.13, 0))
points(coef(lmod)["Area"], coef(lmod)["Adjacent"], pch = 19)
abline(v = confint(lmod)["Area", ], lty = 2)
abline(h = confint(lmod)["Adjacent", ], lty = 2)
# ------------------------------------------------------------------------------
# Bootstrap Confidence Interval
# ------------------------------------------------------------------------------
set.seed(123)
nb <- 4000
coefmat <- matrix(NA, nb, 6)
resids <- residuals(lmod)
preds <- fitted(lmod)
for(i in 1:nb){
booty <- preds + sample(resids, rep = TRUE)
bmod <- update(lmod, booty ~ .)
coefmat[i,] <- coef(bmod)
}
colnames(coefmat) <- c("Intercept", colnames(gala[,3:7]))
coefmat <- data.frame(coefmat)
( tmp <- apply(coefmat, 2, function(x) quantile(x, c(0.025, 0.975))) )
# ----------
library(ggplot2)
ggplot(coefmat, aes(x = Area)) + geom_density() + geom_vline(xintercept = tmp[,"Area"], lty = 2) + theme_bw()
ggplot(coefmat, aes(x = Adjacent)) + geom_density() + geom_vline(xintercept = tmp[,"Adjacent"], lty = 2) + theme_bw()
# ------------------------------------------------------------------------------
# prediction
# ------------------------------------------------------------------------------
predict(lmod)
# ----------
( mod_mat <- model.matrix(lmod) )
( pred <- coef(lmod) %*% t(mod_mat) )
# ------------------------------------------------------------------------------
# confidence interval for Y
# ------------------------------------------------------------------------------
predict(lmod, interval = "confidence")
# ------------------------------------------------------------------------------
# confidence interval and prediction interval for data
# ------------------------------------------------------------------------------
# extreme 95% point data
( x1 <- apply(mod_mat, 2, function(x) quantile(x, 0.95)) )
predict(lmod, new = data.frame(t(x1)), interval = "confidence")
predict(lmod, new = data.frame(t(x1)), interval = "prediction")
# -->
# prediction interval is wider than confidence interval
data("gala", package = "faraway")
str(gala)
dim(gala)
car::some(gala)
df <- 24
# 97.5% point of t distribution (df = 24)
qt(0.975, df)
coef(lmod) + t(c(-1, 1) %*% t( qt(0.975, df) * lmodsum$coef[,"Std. Error"] ))
confint(lmod)
# Not include Endemics
lmod <- lm(Species ~ Area + Elevation + Nearest + Scruz + Adjacent, data = gala)
summary(lmod)
df <- 24
# 97.5% point of t distribution (df = 24)
qt(0.975, df)
coef(lmod) + t(c(-1, 1) %*% t( qt(0.975, df) * lmodsum$coef[,"Std. Error"] ))
confint(lmod)
# ----------
# joint confidence interval region
library(ellipse)
par(mfrow = c(1,1))
# Pearson Correlation = 0.8
# 95% region
plot(ellipse(0.8), type = 'l')
# ----------
plot(ellipse(lmod, c("Area","Adjacent")), type = "l", ylim = c(-0.13, 0))
points(coef(lmod)["Area"], coef(lmod)["Adjacent"], pch = 19)
abline(v = confint(lmod)["Area", ], lty = 2)
abline(h = confint(lmod)["Adjacent", ], lty = 2)
# -->
# Null Hypothesis: both coeffs of Area and Adjacent = 0 is rejected, outside of the ellipse
# Coef of Area = 0 is not rejected because zero is within.
# ------------------------------------------------------------------------------
# Bootstrap Confidence Interval
# ------------------------------------------------------------------------------
set.seed(123)
nb <- 4000
coefmat <- matrix(NA, nb, 6)
resids <- residuals(lmod)
preds <- fitted(lmod)
for(i in 1:nb){
booty <- preds + sample(resids, rep = TRUE)
bmod <- update(lmod, booty ~ .)
coefmat[i,] <- coef(bmod)
}
colnames(coefmat) <- c("Intercept", colnames(gala[,3:7]))
coefmat <- data.frame(coefmat)
( tmp <- apply(coefmat, 2, function(x) quantile(x, c(0.025, 0.975))) )
# ----------
library(ggplot2)
ggplot(coefmat, aes(x = Area)) + geom_density() + geom_vline(xintercept = tmp[,"Area"], lty = 2) + theme_bw()
ggplot(coefmat, aes(x = Adjacent)) + geom_density() + geom_vline(xintercept = tmp[,"Adjacent"], lty = 2) + theme_bw()
# ------------------------------------------------------------------------------
# prediction
# ------------------------------------------------------------------------------
predict(lmod)
# ----------
( mod_mat <- model.matrix(lmod) )
( pred <- coef(lmod) %*% t(mod_mat) )
# ------------------------------------------------------------------------------
# confidence interval for Y
# ------------------------------------------------------------------------------
predict(lmod, interval = "confidence")
# ------------------------------------------------------------------------------
# confidence interval and prediction interval for data
# ------------------------------------------------------------------------------
# extreme 95% point data
( x1 <- apply(mod_mat, 2, function(x) quantile(x, 0.95)) )
predict(lmod, new = data.frame(t(x1)), interval = "confidence")
predict(lmod, new = data.frame(t(x1)), interval = "prediction")
# -->
# prediction interval is wider than confidence interval
setwd("//media//kswada//MyFiles//R//gala")
packages <- c("dplyr")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
# ------------------------------------------------------------------------------
# data:  gala
# ------------------------------------------------------------------------------
data("gala", package = "faraway")
str(gala)
dim(gala)
car::some(gala)
# ------------------------------------------------------------------------------
# Ordinary Linear Regression
# ------------------------------------------------------------------------------
# Not include Endemics
lmod <- lm(Species ~ Area + Elevation + Nearest + Scruz + Adjacent, data = gala)
summary(lmod)
# ------------------------------------------------------------------------------
# Confidence interval for coefficient
# ------------------------------------------------------------------------------
df <- 24
# 97.5% point of t distribution (df = 24)
qt(0.975, df)
coef(lmod) + t(c(-1, 1) %*% t( qt(0.975, df) * lmodsum$coef[,"Std. Error"] ))
confint(lmod)
library(ellipse)
par(mfrow = c(1,1))
# Pearson Correlation = 0.8
# 95% region
plot(ellipse(0.8), type = 'l')
# ----------
plot(ellipse(lmod, c("Area","Adjacent")), type = "l", ylim = c(-0.13, 0))
points(coef(lmod)["Area"], coef(lmod)["Adjacent"], pch = 19)
abline(v = confint(lmod)["Area", ], lty = 2)
abline(h = confint(lmod)["Adjacent", ], lty = 2)
set.seed(123)
nb <- 4000
coefmat <- matrix(NA, nb, 6)
resids <- residuals(lmod)
preds <- fitted(lmod)
for(i in 1:nb){
booty <- preds + sample(resids, rep = TRUE)
bmod <- update(lmod, booty ~ .)
coefmat[i,] <- coef(bmod)
}
colnames(coefmat) <- c("Intercept", colnames(gala[,3:7]))
coefmat <- data.frame(coefmat)
coefmat
head(coefmat)
( tmp <- apply(coefmat, 2, function(x) quantile(x, c(0.025, 0.975))) )
head(coefmat)
library(ggplot2)
ggplot(coefmat, aes(x = Area)) + geom_density() + geom_vline(xintercept = tmp[,"Area"], lty = 2) + theme_bw()
ggplot(coefmat, aes(x = Adjacent)) + geom_density() + geom_vline(xintercept = tmp[,"Adjacent"], lty = 2) + theme_bw()
# ------------------------------------------------------------------------------
# prediction
# ------------------------------------------------------------------------------
predict(lmod)
# ----------
( mod_mat <- model.matrix(lmod) )
( pred <- coef(lmod) %*% t(mod_mat) )
# confidence interval for Y
# ------------------------------------------------------------------------------
predict(lmod, interval = "confidence")
# ------------------------------------------------------------------------------
# confidence interval and prediction interval for data
# ------------------------------------------------------------------------------
# extreme 95% point data
( x1 <- apply(mod_mat, 2, function(x) quantile(x, 0.95)) )
predict(lmod, new = data.frame(t(x1)), interval = "confidence")
predict(lmod, new = data.frame(t(x1)), interval = "prediction")
# -->
# prediction interval is wider than confidence interval
a <- c(1, 3, 5.6, 7, 8, 10, 12, 3.5, 6.2, 7.8, 9.0, 10.2)
summary(a)
length(a)
a <- c(1, 3, 5.6, 7, 8, 10, 12, 3.5, 6.2, 7.8, 9.0, 10.2, 5.6, 6.2, 4.3, 7.2, 5.6, 7.5)
length(a)
summary(a)
a <- c(1, 3, 5.6, 7, 8, 10, 12, 3.5, 6.2, 7.8, 9.0, 10.2)
length(a)
summary(a)
hist(a, breaks = seq(0, 15, by = 0.5))
car::densityPlot(a)
( samp <- sample(a, size = 5, replace = TRUE) )
mean(samp)
set.seed(123456)
output <- c()
# only 25 bootrapping
for(i in 1:25){
# one sample is 5
samp <- sample(a, size = 5)
output[i] <- mean(samp)
}
par(mfrow = c(1,2))
hist(a, breaks = seq(0, 15, by = 0.5), main = "histgram of original data")
hist(output, breaks = seq(0, 15, by = 0.5), main = "sample mean")
mean(output)
set.seed(123456)
output <- data.frame()
# only 25 bootrapping
for(i in 1:25){
# one sample is 5
samp <- sample(a, size = 5)
out0 <- data.frame(mean = mean(samp), q05 = quantile(samp, 0.05), q95 = quantile(samp, 0.95))
output <- rbind(output, out0)
}
par(mfrow = c(1,2))
hist(a, breaks = seq(0, 15, by = 0.5), main = "histgram of original data")
hist(output$mean, breaks = seq(0, 15, by = 0.5), main = "sample mean")
par(mfrow = c(1,2), mar = c(2,2,2,2))
hist(a, breaks = seq(0, 15, by = 0.5), main = "histgram of original data")
hist(output$mean, breaks = seq(0, 15, by = 0.5), main = "sample mean")
lattice::bwplot(output[,c(2:3)], breaks = seq(0, 15, by = 0.5), main = "sample mean")
library(bwplot)
library(lattice)
help(bwplot)
lattice::dotplot(output[,c(2:3)])
lattice::dotplot(t(output[,c(2:3)]))
lattice::dotplot(output[,c(2:3)])
plot(output)
matplot(output, type = "l")
par(mfrow = c(1,1), mar = c(2,2,2,2))
matplot(output, type = "l")
par(mfrow = c(1,1), mar = c(2,2,2,2))
matplot(output, type = "o")
par(mfrow = c(1,1), mar = c(2,2,2,2))
matplot(output, type = "b")
abline(h = c(mean(a), quantile(a, 0.05), quantile(a, 0.95))
abline(h = c(mean(a), quantile(a, 0.05), quantile(a, 0.95)))
par(mfrow = c(1,1), mar = c(2,2,2,2))
matplot(output, type = "b")
abline(h = c(mean(a), quantile(a, 0.05), quantile(a, 0.95)))
par(mfrow = c(1,1), mar = c(2,2,2,2))
matplot(output, type = "b")
abline(h = c(mean(a), quantile(a, 0.05), quantile(a, 0.95)), lty = 2, col = "gray")
for(i in 1:100){
# one sample is 5
samp <- sample(a, size = 5)
out0 <- data.frame(mean = mean(samp), q05 = quantile(samp, 0.05), q95 = quantile(samp, 0.95))
output <- rbind(output, out0)
}
par(mfrow = c(1,2), mar = c(2,2,2,2))
hist(a, breaks = seq(0, 15, by = 0.5), main = "histgram of original data")
hist(output$mean, breaks = seq(0, 15, by = 0.5), main = "sample mean")
# mean, q05, q95 of 25 bootstrappings
par(mfrow = c(1,1), mar = c(2,2,2,2))
matplot(output, type = "b")
abline(h = c(mean(a), quantile(a, 0.05), quantile(a, 0.95)), lty = 2, col = "gray")
par(mfrow = c(1,1), mar = c(2,2,2,2))
matplot(output, type = "l")
abline(h = c(mean(a), quantile(a, 0.05), quantile(a, 0.95)), lty = 2, col = "gray")
for(i in 1:1000){
# one sample is 5
samp <- sample(a, size = 5)
out0 <- data.frame(mean = mean(samp), q05 = quantile(samp, 0.05), q95 = quantile(samp, 0.95))
output <- rbind(output, out0)
}
par(mfrow = c(1,2), mar = c(2,2,2,2))
hist(a, breaks = seq(0, 15, by = 0.5), main = "histgram of original data")
hist(output$mean, breaks = seq(0, 15, by = 0.5), main = "sample mean")
# mean, q05, q95 of 25 bootstrappings
par(mfrow = c(1,1), mar = c(2,2,2,2))
matplot(output, type = "l")
abline(h = c(mean(a), quantile(a, 0.05), quantile(a, 0.95)), lty = 2, col = "gray")
par(mfrow = c(1,1), mar = c(2,2,2,2))
matplot(output, type = "l")
abline(h = c(mean(a), quantile(a, 0.05), quantile(a, 0.95)), lty = 2, col = "blue", lwd = 2)
for(i in 1:25){
# one sample is 5
samp <- sample(a, size = 5)
out0 <- data.frame(mean = mean(samp), q05 = quantile(samp, 0.05), q95 = quantile(samp, 0.95))
output <- rbind(output, out0)
}
par(mfrow = c(1,2), mar = c(2,2,2,2))
hist(a, breaks = seq(0, 15, by = 0.5), main = "histgram of original data")
hist(output$mean, breaks = seq(0, 15, by = 0.5), main = "sample mean")
# mean, q05, q95 of 25 bootstrappings
par(mfrow = c(1,1), mar = c(2,2,2,2))
matplot(output, type = "l")
abline(h = c(mean(a), quantile(a, 0.05), quantile(a, 0.95)), lty = 2, col = "blue", lwd = 2)
for(i in 1:25){
# one sample is 5
samp <- sample(a, size = 5)
out0 <- data.frame(mean = mean(samp), q05 = quantile(samp, 0.05), q95 = quantile(samp, 0.95))
output <- rbind(output, out0)
}
par(mfrow = c(1,2), mar = c(2,2,2,2))
hist(a, breaks = seq(0, 15, by = 0.5), main = "histgram of original data")
hist(output$mean, breaks = seq(0, 15, by = 0.5), main = "sample mean")
# mean, q05, q95 of 25 bootstrappings
par(mfrow = c(1,1), mar = c(2,2,2,2))
matplot(output, type = "l")
abline(h = c(mean(a), quantile(a, 0.05), quantile(a, 0.95)), lty = 2, col = "blue", lwd = 2)
for(i in 1:25){
# one sample is 5
samp <- sample(a, size = 5)
out0 <- data.frame(mean = mean(samp), q05 = quantile(samp, 0.05), q95 = quantile(samp, 0.95))
output <- rbind(output, out0)
}
par(mfrow = c(1,2), mar = c(2,2,2,2))
hist(a, breaks = seq(0, 15, by = 0.5), main = "histgram of original data")
hist(output$mean, breaks = seq(0, 15, by = 0.5), main = "sample mean")
# mean, q05, q95 of 25 bootstrappings
par(mfrow = c(1,1), mar = c(2,2,2,2))
matplot(output, type = "l")
abline(h = c(mean(a), quantile(a, 0.05), quantile(a, 0.95)), lty = 2, col = "blue", lwd = 2)
set.seed(123456)
output <- data.frame()
# only 25 bootrapping
for(i in 1:25){
# one sample is 5
samp <- sample(a, size = 5)
out0 <- data.frame(mean = mean(samp), q05 = quantile(samp, 0.05), q95 = quantile(samp, 0.95))
output <- rbind(output, out0)
}
par(mfrow = c(1,2), mar = c(2,2,2,2))
hist(a, breaks = seq(0, 15, by = 0.5), main = "histgram of original data")
hist(output$mean, breaks = seq(0, 15, by = 0.5), main = "sample mean")
# mean, q05, q95 of 25 bootstrappings
par(mfrow = c(1,1), mar = c(2,2,2,2))
matplot(output, type = "l")
abline(h = c(mean(a), quantile(a, 0.05), quantile(a, 0.95)), lty = 2, col = "blue", lwd = 2)
for(i in 1:25){
# one sample is 5
samp <- sample(a, size = 10)
out0 <- data.frame(mean = mean(samp), q05 = quantile(samp, 0.05), q95 = quantile(samp, 0.95))
output <- rbind(output, out0)
}
par(mfrow = c(1,2), mar = c(2,2,2,2))
hist(a, breaks = seq(0, 15, by = 0.5), main = "histgram of original data")
hist(output$mean, breaks = seq(0, 15, by = 0.5), main = "sample mean")
# mean, q05, q95 of 25 bootstrappings
par(mfrow = c(1,1), mar = c(2,2,2,2))
matplot(output, type = "l")
abline(h = c(mean(a), quantile(a, 0.05), quantile(a, 0.95)), lty = 2, col = "blue", lwd = 2)
hist(a, breaks = seq(0, 15, by = 0.5))
x <- 1:5
y <- c(1:3, 7, 6)
plot(y ~ x)
summary(y)
sd(y)
# ----------
mod1 <- lm(y ~ x)
summary(mod1)
# ----------
# simulate y from mod1, 100 times
S1 <- simulate(mod1, nsim = 100)
S1
apply(S1, 2, mean)
mean(y)
mean(apply(S1, 2, mean))
apply(S1, 2, sd)
sd(y)
mean(apply(S1, 2, sd))
# ----------
par(mfrow = c(1,1))
plot(y ~ x, xlim = c(0, 5), ylim = c(-2, 10), pch = 20, cex = 1.8, col = "black")
for(i in 1:100){
mod <- lm(S1[,i] ~ x)
par(new = T)
abline(mod, col = gray(0.8))
}
par(new = T)
plot(y ~ x, xlim = c(0, 5), ylim = c(-2, 10), pch = 20, cex = 1.8, col = "black")
abline(mod1)
summary(mod1)
sd(resid(mod1))
a <- c(1, 3, 5.6, 7, 8, 10, 12, 3.5, 6.2, 7.8, 9.0, 10.2)
length(a)
summary(a)
# -->
# mean = 6.942
hist(a, breaks = seq(0, 15, by = 0.5))
car::densityPlot(a)
# ----------
( samp <- sample(a, size = 5, replace = TRUE) )
mean(samp)
set.seed(123456)
output <- data.frame()
# only 25 bootrapping
for(i in 1:25){
# one sample is 5
samp <- sample(a, size = 5)
out0 <- data.frame(mean = mean(samp), q05 = quantile(samp, 0.05), q95 = quantile(samp, 0.95))
output <- rbind(output, out0)
}
par(mfrow = c(1,2), mar = c(2,2,2,2))
hist(a, breaks = seq(0, 15, by = 0.5), main = "histgram of original data")
hist(output$mean, breaks = seq(0, 15, by = 0.5), main = "sample mean")
# mean, q05, q95 of 25 bootstrappings
par(mfrow = c(1,1), mar = c(2,2,2,2))
matplot(output, type = "l")
abline(h = c(mean(a), quantile(a, 0.05), quantile(a, 0.95)), lty = 2, col = "blue", lwd = 2)
set.seed(123456)
output <- data.frame()
# only 25 bootrapping
for(i in 1:25){
# one sample is 5
samp <- sample(a, size = 5, replace = TRUE)
out0 <- data.frame(mean = mean(samp), q05 = quantile(samp, 0.05), q95 = quantile(samp, 0.95))
output <- rbind(output, out0)
}
par(mfrow = c(1,2), mar = c(2,2,2,2))
hist(a, breaks = seq(0, 15, by = 0.5), main = "histgram of original data")
hist(output$mean, breaks = seq(0, 15, by = 0.5), main = "sample mean")
# mean, q05, q95 of 25 bootstrappings
par(mfrow = c(1,1), mar = c(2,2,2,2))
matplot(output, type = "l")
abline(h = c(mean(a), quantile(a, 0.05), quantile(a, 0.95)), lty = 2, col = "blue", lwd = 2)
# ----------
mean(output)
set.seed(123456)
output <- data.frame()
# only 25 bootrapping
for(i in 1:25){
# one sample is 5
samp <- sample(a, size = 5, replace = TRUE)
out0 <- data.frame(mean = mean(samp), q05 = quantile(samp, 0.05), q95 = quantile(samp, 0.95))
output <- rbind(output, out0)
}
par(mfrow = c(1,2), mar = c(2,2,2,2))
hist(a, breaks = seq(0, 15, by = 0.5), main = "histgram of original data")
hist(output$mean, breaks = seq(0, 15, by = 0.5), main = "sample mean")
par(mfrow = c(1,1), mar = c(2,2,2,2))
matplot(output, type = "l")
abline(h = c(mean(a), quantile(a, 0.05), quantile(a, 0.95)), lty = 2, col = "blue", lwd = 2)
# only 25 bootrapping
for(i in 1:25){
# one sample is length(a)
samp <- sample(a, size = length(a), replace = TRUE)
out0 <- data.frame(mean = mean(samp), q05 = quantile(samp, 0.05), q95 = quantile(samp, 0.95))
output <- rbind(output, out0)
}
par(mfrow = c(1,2), mar = c(2,2,2,2))
hist(a, breaks = seq(0, 15, by = 0.5), main = "histgram of original data")
hist(output$mean, breaks = seq(0, 15, by = 0.5), main = "sample mean")
# mean, q05, q95 of 25 bootstrappings
par(mfrow = c(1,1), mar = c(2,2,2,2))
matplot(output, type = "l")
abline(h = c(mean(a), quantile(a, 0.05), quantile(a, 0.95)), lty = 2, col = "blue", lwd = 2)
mean(output)
mean(output$mean)
set.seed(123456)
output <- data.frame()
# only 25 bootrapping
for(i in 1:25){
# one sample is length(a):  note that REPLACE = TRUE
samp <- sample(a, size = length(a), replace = TRUE)
out0 <- data.frame(mean = mean(samp), q05 = quantile(samp, 0.05), q95 = quantile(samp, 0.95))
output <- rbind(output, out0)
}
par(mfrow = c(1,2), mar = c(2,2,2,2))
hist(a, breaks = seq(0, 15, by = 0.5), main = "histgram of original data")
hist(output$mean, breaks = seq(0, 15, by = 0.5), main = "sample mean")
# mean, q05, q95 of 25 bootstrappings
par(mfrow = c(1,1), mar = c(2,2,2,2))
matplot(output, type = "l")
abline(h = c(mean(a), quantile(a, 0.05), quantile(a, 0.95)), lty = 2, col = "blue", lwd = 2)
mean(output$mean)
