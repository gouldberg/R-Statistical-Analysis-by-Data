data(HairEyeColor, package = "datasets")
dat <- HairEyeColor
str(dat)
dat
dat <- margin.table(dat, 1:2)
( dat <- margin.table(dat, 1:2) )
mosaic(haireye, labeling = labeling_values)
vcd::mosaic(haireye, labeling = labeling_values)
data(HairEyeColor, package = "datasets")
dat <- HairEyeColor
str(dat)
dat
# ------------------------------------------------------------------------------
#
# ------------------------------------------------------------------------------
( dat2 <- margin.table(dat, 1:2) )
vcd::mosaic(dat2, labeling = labeling_values)
vcd::mosaic(dat2, labeling = labeling_values)
vcd::mosaic(dat2)
help(mosaic)
help(labeling_values)
library(vcd)
mosaic(dat2, labeling = labeling_values)
expected <- rep(sum(dat2) / 4, 4)
expected
( dat3 <- margin.table(dat2, 1) )
expected <- rep(sum(dat2) / 4, 4)
( expected <- rep(sum(dat3) / 4, 4) )
dat3
( dat3 <- margin.table(dat2, 1) )
names(expected) <- names(dat3)
str(HairEyeColor)
HairEyeColor
( haireye <- margin.table(HairEyeColor, 1:2) )
mosaic(haireye, labeling = labeling_values)
( hair <- margin.table(haireye, 1) )
prop.table(hair)
expected <- rep(sum(hair) / 4, 4)
names(expected) <- names(hair)
expected
residuals <- (hair - expected) / sqrt(expected)
residuals
round(addmargin(prop.table(haireye, 1), 2), 3)
# add margin to table  (margin to row)
round(addmargins(prop.table(haireye, 1), 2), 3)
round(addmargins(prop.table(haireye, 2), 2), 3)
prop.table(haireye, 1)
round(addmargins(prop.table(haireye, 2), 1), 3)
round(addmargins(prop.table(haireye)), 3)
exp <- independence_table(haireye)
resids <- (haireye - exp) / sqrt(exp)
round(resids, 2)
residuals
round(residuals, 2)
round(resids, 2)
( chisq <- sum(resids ^ 2) )
df <- prod(dim(haireye) - 1)
( df <- prod(dim(haireye) - 1) )
dim(haireye)
dim(haireye) - 1
pchisq(chisq, df, lower.tail = FALSE)
chisq.test(haireye)
chisq
df
round(residuals(chisq.test(haireye), 2)
round(residuals(chisq.test(haireye), 2))
round(residuals(chisq.test(haireye), 2))
round(residuals(chisq.test(haireye)), 2)
mosaic(haireye2, shade = TRUE, gp_args = list(interpolate = 1:4))
haireye2 <- as.table(haireye[, c("Brown", "Hazel", "Green", "Blue")])
mosaic(haireye2, shade = TRUE)
# more shading levels
mosaic(haireye2, shade = TRUE, gp_args = list(interpolate = 1:4))
data.frame(HairEyeColor)
dat <- data.frame(HairEyeColor)
head(dat)
dat <- data.frame(HairEyeColor) %>% reshape::melt(, id.vars = c("Hair", "Eye", "Sex"))
library(dplyr)
dat <- data.frame(HairEyeColor) %>% reshape::melt(, id.vars = c("Hair", "Eye", "Sex"))
head(dat)
dat <- data.frame(HairEyeColor) %>% reshape::melt(., id.vars = c("Hair", "Eye", "Sex"))
head(dat)
hec <- structable(Eye ~ Sex + Hair, data = HairEyeColor)
hec
hec["Male",]
structable(Hair + Sex ~ Eye, HairEyeColor)
library(vcd)
dat <- expand.dft(HairEyeColor)
library(vcdExtra)
dat <- expand.dft(HairEyeColor)
head(dat)
dat$id <- 1:nrow(dat)
head(dat)
tab <- xtabs(~ Hair + Eye + Sex, data = dat)
tab
HairEyeColor
tab <- xtabs(~ Hair + Eye + Sex, data = dat)
tab
HairEyeColor
mosaic(HairEyeColor, shade = shade = TRUE, gp_args = list(interpolate = 1:4))
mosaic(HairEyeColor, shade = TRUE, gp_args = list(interpolate = 1:4))
mosaic(haireye2, gp = shading_Friendly, margin = c(right = 1), labeling = labeling_residuals, suppress = 0, digis = 2)
mosaic(haireye2, gp = shading_Friendly, margin = c(right = 1), labeling = labeling_residuals, digis = 2)
mosaic(haireye2, gp = shading_Friendly, margin = c(right = 1), labeling = labeling_residuals, suppress = 0, digis = 2)
HEC <- HairEyeColor[, c("Brown", "Hazel", "Green", "Blue"), ]
mosaic(HEC, expected = ~ Hair * Eye + Sex, labeling = labelinb_residuals, digits = 2, rot_labels = c(right, -45))
mosaic(HEC, expected = ~ Hair * Eye + Sex, labeling = labeling_residuals, digits = 2, rot_labels = c(right, -45))
mosaic(HEC, expected = ~ Hair * Eye + Sex, labeling = labeling_residuals, digits = 2, rot_labels = c(right = -45))
mosaic(haireye2, gp = shading_Friendly, margin = c(right = 1), labeling = labeling_residuals, suppress = 0, digis = 2)
mosaic(HEC, expected = ~ Hair + Eye + Sex, labeling = labeling_residuals, digits = 2, rot_labels = c(right = -45))
mosaic(HEC, expected = ~ Hair * Eye + Sex, labeling = labeling_residuals, digits = 2, rot_labels = c(right = -45))
mosaic(HEC, expected = ~ Hair + Eye + Sex, labeling = labeling_residuals, digits = 2, rot_labels = c(right = -45))
mosaic(HEC, expected = ~ Hair * Eye + Sex, labeling = labeling_residuals, digits = 2, rot_labels = c(right = -45))
mosaic(HEC, expected = ~ Hair + Eye + Sex, labeling = labeling_residuals, digits = 2, rot_labels = c(right = -45))
mosaic(HEC, expected = ~ Hair + Eye, labeling = labeling_residuals, digits = 2, rot_labels = c(right = -45))
mosaic(HEC, expected = ~ Hair + Eye, labeling = labeling_residuals, digits = 2, rot_labels = c(right = -45))
mosaic(HEC, expected = ~ Hair + Eye, labeling = labeling_residuals, digits = 2, rot_labels = c(right = -45))
margin.table(HEC, 1)
margin.table(HEC, 1:2)
mosaic(margin.table(HEC, 1:2), expected = ~ Hair + Eye, labeling = labeling_residuals, digits = 2, rot_labels = c(right = -45))
mosaic(margin.table(HEC, 1:2), expected = ~ Hair * Eye, labeling = labeling_residuals, digits = 2, rot_labels = c(right = -45))
mosaic(margin.table(HEC, 1:2), expected = ~ Hair + Eye, labeling = labeling_residuals, digits = 2, rot_labels = c(right = -45))
mosaic(HEC, expected = ~ Hair * Eye + Sex, labeling = labeling_residuals, digits = 2, rot_labels = c(right = -45))
tmp <- mosaic(HEC, expected = ~ Hair * Eye + Sex, labeling = labeling_residuals, digits = 2, rot_labels = c(right = -45))
tmp
mod_m <- loglm(~ Hair + Eye + Sex, data = HEC)
# conditional
mod_c <- loglm(~ Hair * Sex + Eye * Sex, data = HEC)
# joint
mod_j <- loglm(~ Hair * Eye + Sex, data = HEC)
library(MASS)
# mutual
mod_m <- loglm(~ Hair + Eye + Sex, data = HEC)
# conditional
mod_c <- loglm(~ Hair * Sex + Eye * Sex, data = HEC)
# joint
mod_j <- loglm(~ Hair * Eye + Sex, data = HEC)
LRstats(mod1, mod2, mod3)
LRstats(mod_m, mod_c. mod_j)
LRstats(mod_m, mod_c, mod_j)
LRstats(mod_m, mod_c, mod_j)
# conditional
mosaic(HEC, expected = ~ Hair * Sex + Eye * Sex, labeling = labeling_residuals, digits = 2, rot_labels = c(right = -45))
mosaic(margin.table(HEC, 1:2), expected = ~ Hair + Eye, labeling = labeling_residuals, digits = 2, rot_labels = c(right = -45))
mosaic(HEC, expected = ~ Hair * Sex + Eye * Sex, labeling = labeling_residuals, digits = 2, rot_labels = c(right = -45))
mosaic(HEC, expected = ~ Hair * Eye + Sex, labeling = labeling_residuals, digits = 2, rot_labels = c(right = -45))
HEC.mods <- seq_loglm(HEC, type = "joint")
LRstats(HEC.mods)
loglin2formula(joint(3, table = HEC))
loglin2formula(joint(1:3, table = HEC))
loglin2formula(joint(1, table = HEC))
loglin2formula(joint(1, table = HEC))
loglin2formula(joint(2, table = HEC))
loglin2formula(joint(3, table = HEC))
loglin2formula(joint(4, table = HEC))
HEC.mods <- seq_loglm(HEC, type = "joint")
LRstats(HEC.mods)
library(gpairs)
gpairs(HairEyeColor, diag.pars = list(fontsize = 20),
mosaic.pars = list(gp = shading_Friendly, gp_args = list(interpolate = 1:4)))
library(gpairs)
install.pakcages("gpairs", dep =T)
install.packages("gpairs", dep =T)
gpairs(HairEyeColor, diag.pars = list(fontsize = 20),
mosaic.pars = list(gp = shading_Friendly, gp_args = list(interpolate = 1:4)))
library(gpairs)
gpairs(HairEyeColor, diag.pars = list(fontsize = 20),
mosaic.pars = list(gp = shading_Friendly, gp_args = list(interpolate = 1:4)))
library(gpairs)
gpairs(HairEyeColor, diag.pars = list(fontsize = 20))
pairs(HairEyeColor, diag.pars = list(fontsize = 20))
pairs(HairEyeColor, diag.pars = list(fontsize = 20),
mosaic.pars = list(gp = shading_Friendly, gp_args = list(interpolate = 1:4)))
pairs(HairEyeColor, diag.pars = list(fontsize = 20),
mosaic.pars = list(gp = shading_Friendly, gp_args = list(interpolate = 1:4)))
pairs(HairEyeColor, diag.pars = list(fontsize = 20),
mosaic.pars = list(gp = shading_Friendly, gp_args = list(interpolate = 1:4)))
gpairs(HairEyeColor, diag.pars = list(fontsize = 20),
mosaic.pars = list(gp = shading_Friendly, gp_args = list(interpolate = 1:4)))
dat
gpairs(dat[,c(1,2,3)], diag.pars = list(fontsize = 20),
mosaic.pars = list(gp = shading_Friendly, gp_args = list(interpolate = 1:4)))
haireye
library(ca)
haireye.ca <- ca(haireye)
plot(haireye.ca)
summary(haireye.ca)
